<?xml version="1.0" standalone="yes"?>
<StyleCopReport xmlns="http://stylecopcmd.sourceforge.net/StyleCopReport.xsd">
  <Solutions>
    <ID>0</ID>
    <Location>..\src\SampleProject.sln</Location>
    <Name>SampleProject</Name>
    <Projects>
      <ID>0</ID>
      <Location>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\SampleProject.Infrastructure.Framework.csproj</Location>
      <Name>SampleProject.Infrastructure.Framework</Name>
      <SolutionID>0</SolutionID>
      <SourceCodeFiles>
        <ID>0</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Commons\RangeValue.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>RangeValue.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>2</ID>
          <Line>12</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>0</SourceCodeFileID>
          <SourceCodeLine>        private T? startValue;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>2</ViolationID>
            <ID>2</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>4</ID>
          <Line>13</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>0</SourceCodeFileID>
          <SourceCodeLine>        private T? endValue;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>4</ViolationID>
            <ID>4</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>10</ID>
          <Line>21</Line>
          <Message>The property's documentation summary text must begin with: Gets a value indicating whether</Message>
          <SourceCodeFileID>0</SourceCodeFileID>
          <SourceCodeLine>        public bool IsEmpty</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>10</ViolationID>
            <ID>10</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>13</ID>
          <Line>35</Line>
          <Message>The property's documentation summary text must begin with: Gets a value indicating whether</Message>
          <SourceCodeFileID>0</SourceCodeFileID>
          <SourceCodeLine>        public bool IsIncomplete</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>13</ViolationID>
            <ID>13</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>15</ID>
          <Line>50</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>0</SourceCodeFileID>
          <SourceCodeLine>        public T? StartValue</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>15</ViolationID>
            <ID>15</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>18</ID>
          <Line>75</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>0</SourceCodeFileID>
          <SourceCodeLine>        public T? EndValue</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>18</ViolationID>
            <ID>18</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>21</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>0</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>21</ViolationID>
            <ID>21</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>34</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>0</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>34</ViolationID>
            <ID>34</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>38</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>0</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>38</ViolationID>
            <ID>38</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>1</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Commons\Specs\MustHaveUniqueValueSpec.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>MustHaveUniqueValueSpec.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>1</ID>
          <Line>25</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>        private Expression&lt;Func&lt;TTarget, TValue&gt;&gt; m_getProperty;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1</ViolationID>
            <ID>1</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>5</ID>
          <Line>26</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>        private Expression&lt;Func&lt;TValue, TTarget&gt;&gt; m_getByName;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>5</ViolationID>
            <ID>5</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>6</ID>
          <Line>35</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the MustHaveUniqueValueSpec class.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>        public MustHaveUniqueValueSpec(Expression&lt;Func&lt;TTarget, TValue&gt;&gt; getProperty, Expression&lt;Func&lt;TValue, TTarget&gt;&gt; getByName)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>6</ViolationID>
            <ID>6</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>22</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>22</ViolationID>
            <ID>22</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>23</ID>
          <Line>20</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Design", "CA1000:DoNotDeclareStaticMembersOnGenericTypes")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>23</ViolationID>
            <ID>23</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>24</ID>
          <Line>50</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>24</ViolationID>
            <ID>24</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>25</ID>
          <Line>51</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Globalization", "CA1308:NormalizeStringsToUppercase")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>25</ViolationID>
            <ID>25</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>29</ID>
          <Line>25</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>        private Expression&lt;Func&lt;TTarget, TValue&gt;&gt; m_getProperty;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>29</ViolationID>
            <ID>29</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>30</ID>
          <Line>26</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>        private Expression&lt;Func&lt;TValue, TTarget&gt;&gt; m_getByName;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>30</ViolationID>
            <ID>30</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>32</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>32</ViolationID>
            <ID>32</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>35</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>35</ViolationID>
            <ID>35</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>40</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>using System.Linq.Expressions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>40</ViolationID>
            <ID>40</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>43</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>43</ViolationID>
            <ID>43</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>44</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>44</ViolationID>
            <ID>44</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>47</ID>
          <Line>37</Line>
          <Message>The call to m_getProperty must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>            m_getProperty = getProperty;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>47</ViolationID>
            <ID>47</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>50</ID>
          <Line>38</Line>
          <Message>The call to m_getByName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>            m_getByName = getByName;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>50</ViolationID>
            <ID>50</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>52</ID>
          <Line>54</Line>
          <Message>The call to m_getProperty must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>            var value = m_getProperty.Compile()(target);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>52</ViolationID>
            <ID>52</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>54</ID>
          <Line>56</Line>
          <Message>The call to m_getByName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>1</SourceCodeFileID>
          <SourceCodeLine>            var otherEntityWithSameName = m_getByName.Compile()(value);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>54</ViolationID>
            <ID>54</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>2</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\ActionStamp.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ActionStamp.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>3</ID>
          <Line>20</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the ActionStamp class.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>        public ActionStamp()</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>3</ViolationID>
            <ID>3</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>7</ID>
          <Line>29</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>        public ActionStamp(DateTime date)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>7</ViolationID>
            <ID>7</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>8</ID>
          <Line>29</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the ActionStamp class.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>        public ActionStamp(DateTime date)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>8</ViolationID>
            <ID>8</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>9</ID>
          <Line>39</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>        public DateTime Date { get; internal set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>9</ViolationID>
            <ID>9</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>12</ID>
          <Line>44</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>        public int UserId { get; internal set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>12</ViolationID>
            <ID>12</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>16</ID>
          <Line>78</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>        internal void Stamp(DateTime date)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>16</ViolationID>
            <ID>16</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>19</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>19</ViolationID>
            <ID>19</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>26</ID>
          <Line>51</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>26</ViolationID>
            <ID>26</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>27</ID>
          <Line>61</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>27</ViolationID>
            <ID>27</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>28</ID>
          <Line>77</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>28</ViolationID>
            <ID>28</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>31</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>31</ViolationID>
            <ID>31</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>36</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>36</ViolationID>
            <ID>36</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>39</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>39</ViolationID>
            <ID>39</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>42</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Runtime;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>42</ViolationID>
            <ID>42</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>45</ID>
          <Line>22</Line>
          <Message>The call to Date must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>            Date = DateTime.UtcNow;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>45</ViolationID>
            <ID>45</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>49</ID>
          <Line>31</Line>
          <Message>The call to Date must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>            Date = date.ToUniversalTime();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>49</ViolationID>
            <ID>49</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>51</ID>
          <Line>54</Line>
          <Message>The call to Stamp must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>            Stamp(RuntimeContext.Current.User.Id);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>51</ViolationID>
            <ID>51</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>53</ID>
          <Line>69</Line>
          <Message>The call to Date must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>            Date = DateTime.UtcNow;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>53</ViolationID>
            <ID>53</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>55</ID>
          <Line>70</Line>
          <Message>The call to UserId must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>            UserId = userId;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>55</ViolationID>
            <ID>55</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>56</ID>
          <Line>80</Line>
          <Message>The call to Date must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>            Date = date;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>56</ViolationID>
            <ID>56</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>57</ID>
          <Line>81</Line>
          <Message>The call to UserId must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>2</SourceCodeFileID>
          <SourceCodeLine>            UserId = RuntimeContext.Current.User.Id;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>57</ViolationID>
            <ID>57</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>3</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\DomainEntityBase.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>DomainEntityBase.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>0</ID>
          <Line>16</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the DomainEntityBase class.</Message>
          <SourceCodeFileID>3</SourceCodeFileID>
          <SourceCodeLine>        protected DomainEntityBase()</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>0</ViolationID>
            <ID>0</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>11</ID>
          <Line>27</Line>
          <Message>The property's documentation summary text must begin with: Gets a value indicating whether</Message>
          <SourceCodeFileID>3</SourceCodeFileID>
          <SourceCodeLine>        public bool IsNew</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>11</ViolationID>
            <ID>11</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>14</ID>
          <Line>38</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>3</SourceCodeFileID>
          <SourceCodeLine>        public ActionStamp Created { get; internal set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>14</ViolationID>
            <ID>14</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>17</ID>
          <Line>43</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>3</SourceCodeFileID>
          <SourceCodeLine>        public ActionStamp Modified { get; internal set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>17</ViolationID>
            <ID>17</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>20</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>3</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>20</ViolationID>
            <ID>20</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>33</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>3</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>33</ViolationID>
            <ID>33</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>37</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>3</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>37</ViolationID>
            <ID>37</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>41</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>3</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>41</ViolationID>
            <ID>41</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>46</ID>
          <Line>18</Line>
          <Message>The call to Created must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>3</SourceCodeFileID>
          <SourceCodeLine>            Created = new ActionStamp();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>46</ViolationID>
            <ID>46</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>48</ID>
          <Line>19</Line>
          <Message>The call to Modified must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>3</SourceCodeFileID>
          <SourceCodeLine>            Modified = new ActionStamp();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>48</ViolationID>
            <ID>48</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>4</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\DomainServiceBase.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>DomainServiceBase.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>92</ID>
          <Line>30</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the DomainServiceBase class.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>        protected DomainServiceBase(TMainRepository repository, IUnitOfWork unitOfWork)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>92</ViolationID>
            <ID>92</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>94</ID>
          <Line>55</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>        public virtual FilterResult&lt;TEntity&gt; Get(int offset, int limit, Expression&lt;Func&lt;TEntity, bool&gt;&gt; filter)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>94</ViolationID>
            <ID>94</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>96</ID>
          <Line>67</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>        public virtual long Count(Expression&lt;Func&lt;TEntity, bool&gt;&gt; filter)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>96</ViolationID>
            <ID>96</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>97</ID>
          <Line>90</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>        public virtual FilterResult&lt;TEntity&gt; GetAscending&lt;TOrderByKey&gt;(int offset, int limit, Expression&lt;Func&lt;TEntity, bool&gt;&gt; filter, Expression&lt;Func&lt;TEntity, TOrderByKey&gt;&gt; orderBy)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>97</ViolationID>
            <ID>97</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>98</ID>
          <Line>106</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>        public virtual FilterResult&lt;TEntity&gt; GetDescending&lt;TOrderByKey&gt;(int offset, int limit, Expression&lt;Func&lt;TEntity, bool&gt;&gt; filter, Expression&lt;Func&lt;TEntity, TOrderByKey&gt;&gt; orderBy)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>98</ViolationID>
            <ID>98</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>101</ID>
          <Line>179</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>        protected FilterResult&lt;TEntity&gt; GetByText(int offset, int limit, string propertyName, string propertyFilter)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>101</ViolationID>
            <ID>101</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>104</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>104</ViolationID>
            <ID>104</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>113</ID>
          <Line>54</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>113</ViolationID>
            <ID>113</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>116</ID>
          <Line>117</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>116</ViolationID>
            <ID>116</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>119</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>119</ViolationID>
            <ID>119</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>122</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>122</ViolationID>
            <ID>122</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>124</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>using System.Linq.Expressions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>124</ViolationID>
            <ID>124</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>125</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>using AutoFilter;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>125</ViolationID>
            <ID>125</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>126</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>using Escrutinador.Extensions.KissSpecifications;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>126</ViolationID>
            <ID>126</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>127</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>127</ViolationID>
            <ID>127</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>128</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>128</ViolationID>
            <ID>128</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>129</ID>
          <Line>8</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications.Commons;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>129</ViolationID>
            <ID>129</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>131</ID>
          <Line>9</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>131</ViolationID>
            <ID>131</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>136</ID>
          <Line>10</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>136</ViolationID>
            <ID>136</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>139</ID>
          <Line>11</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>139</ViolationID>
            <ID>139</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>155</ID>
          <Line>124</Line>
          <Message>The call to GetSaveSpecifications must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>               GetSaveSpecifications(entity));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>155</ViolationID>
            <ID>155</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>157</ID>
          <Line>141</Line>
          <Message>The call to GetRemoveSpecifications must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>            SpecService.Assert(entity, GetRemoveSpecifications(entity));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>157</ViolationID>
            <ID>157</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>160</ID>
          <Line>183</Line>
          <Message>The call to Get must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>                return Get(offset, limit, f =&gt; true);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>160</ViolationID>
            <ID>160</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>161</ID>
          <Line>189</Line>
          <Message>The call to Get must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>4</SourceCodeFileID>
          <SourceCodeLine>                return Get(</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>161</ViolationID>
            <ID>161</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>5</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\DomainServiceExtensions.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>DomainServiceExtensions.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>60</ID>
          <Line>34</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>5</SourceCodeFileID>
          <SourceCodeLine>        public static FilterResult&lt;TEntity&gt; Get&lt;TEntity&gt;(this IDomainService&lt;TEntity&gt; service, Expression&lt;Func&lt;TEntity, bool&gt;&gt; filter)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>60</ViolationID>
            <ID>60</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>65</ID>
          <Line>121</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>5</SourceCodeFileID>
          <SourceCodeLine>        public static FilterResult&lt;TEntity&gt; GetDescending&lt;TEntity, TOrderByKey&gt;(this IDomainService&lt;TEntity&gt; service, Expression&lt;Func&lt;TEntity, bool&gt;&gt; filter, Expression&lt;Func&lt;TEntity, TOrderByKey&gt;&gt; orderBy)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>65</ViolationID>
            <ID>65</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>67</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>5</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>67</ViolationID>
            <ID>67</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>70</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>5</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>70</ViolationID>
            <ID>70</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>71</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>5</SourceCodeFileID>
          <SourceCodeLine>using System.Linq.Expressions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>71</ViolationID>
            <ID>71</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>73</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>5</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>73</ViolationID>
            <ID>73</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>74</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>5</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>74</ViolationID>
            <ID>74</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>6</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\HistoryEntityBase.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>HistoryEntityBase.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>103</ID>
          <Line>60</Line>
          <Message>A syntax error has been discovered in file C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\HistoryEntityBase.cs on line 60.</Message>
          <SourceCodeFileID>6</SourceCodeFileID>
          <SourceCodeLine>        protected HistoryEntityBase(TTarget target, HistoryKind kind = Domain.HistoryKind.Update)</SourceCodeLine>
          <Rules>
            <CheckId>SA0102</CheckId>
            <Description />
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SyntaxException</Name>
            <Namespace>Microsoft.StyleCop.CSharp.CsParser</Namespace>
            <Warning>false</Warning>
            <ViolationID>103</ViolationID>
            <ID>103</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>7</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\IDomainRepository.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IDomainRepository.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>58</ID>
          <Line>23</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>7</SourceCodeFileID>
          <SourceCodeLine>        IEnumerable&lt;TEntity&gt; FindAll(int offset, int limit, Expression&lt;Func&lt;TEntity, bool&gt;&gt; filter, Func&lt;IEnumerable&lt;TEntity&gt;, IEnumerable&lt;TEntity&gt;&gt; order);</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>58</ViolationID>
            <ID>58</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>59</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>7</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>59</ViolationID>
            <ID>59</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>61</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>7</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>61</ViolationID>
            <ID>61</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>62</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>7</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>62</ViolationID>
            <ID>62</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>63</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>7</SourceCodeFileID>
          <SourceCodeLine>using System.Linq.Expressions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>63</ViolationID>
            <ID>63</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>64</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>7</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>64</ViolationID>
            <ID>64</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>66</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>7</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>66</ViolationID>
            <ID>66</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>8</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\IDomainService.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IDomainService.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>68</ID>
          <Line>23</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>8</SourceCodeFileID>
          <SourceCodeLine>        FilterResult&lt;TEntity&gt; Get(int offset, int limit, Expression&lt;Func&lt;TEntity, bool&gt;&gt; filter);</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>68</ViolationID>
            <ID>68</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>69</ID>
          <Line>34</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>8</SourceCodeFileID>
          <SourceCodeLine>        FilterResult&lt;TEntity&gt; GetAscending&lt;TOrderByKey&gt;(int offset, int limit, Expression&lt;Func&lt;TEntity, bool&gt;&gt; filter, Expression&lt;Func&lt;TEntity, TOrderByKey&gt;&gt; orderBy);</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>69</ViolationID>
            <ID>69</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>72</ID>
          <Line>52</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>8</SourceCodeFileID>
          <SourceCodeLine>        FilterResult&lt;TEntity&gt; GetDescending&lt;TOrderByKey&gt;(int offset, int limit, Expression&lt;Func&lt;TEntity, bool&gt;&gt; filter, Expression&lt;Func&lt;TEntity, TOrderByKey&gt;&gt; orderBy);</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>72</ViolationID>
            <ID>72</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>75</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>8</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>75</ViolationID>
            <ID>75</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>76</ID>
          <Line>22</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>8</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords", MessageId = "Get")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>76</ViolationID>
            <ID>76</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>77</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>8</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>77</ViolationID>
            <ID>77</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>78</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>8</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>78</ViolationID>
            <ID>78</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>79</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>8</SourceCodeFileID>
          <SourceCodeLine>using System.Linq.Expressions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>79</ViolationID>
            <ID>79</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>80</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>8</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>80</ViolationID>
            <ID>80</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>81</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>8</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>81</ViolationID>
            <ID>81</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>9</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\IEntity.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IEntity.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>82</ID>
          <Line>12</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>9</SourceCodeFileID>
          <SourceCodeLine>        int Id { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>82</ViolationID>
            <ID>82</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>83</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>9</SourceCodeFileID>
          <SourceCodeLine>namespace SampleProject.Infrastructure.Framework.Domain</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>83</ViolationID>
            <ID>83</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>10</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\IEntityContainer.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IEntityContainer.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>84</ID>
          <Line>13</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>10</SourceCodeFileID>
          <SourceCodeLine>        Type EntityType { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>84</ViolationID>
            <ID>84</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>85</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>10</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>85</ViolationID>
            <ID>85</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>87</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>10</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>87</ViolationID>
            <ID>87</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>11</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\INamedEntity.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>INamedEntity.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>86</ID>
          <Line>12</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>11</SourceCodeFileID>
          <SourceCodeLine>        string Name { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>86</ViolationID>
            <ID>86</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>88</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>11</SourceCodeFileID>
          <SourceCodeLine>namespace SampleProject.Infrastructure.Framework.Domain</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>88</ViolationID>
            <ID>88</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>12</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\IPreFilterable.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IPreFilterable.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>89</ID>
          <Line>15</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>12</SourceCodeFileID>
          <SourceCodeLine>        Expression&lt;Func&lt;TDomainEntity, bool&gt;&gt; PreFilter { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>89</ViolationID>
            <ID>89</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>90</ID>
          <Line>20</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets a value indicating whether</Message>
          <SourceCodeFileID>12</SourceCodeFileID>
          <SourceCodeLine>        bool IgnorePreFilter { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>90</ViolationID>
            <ID>90</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>91</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>12</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>91</ViolationID>
            <ID>91</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>93</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>12</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>93</ViolationID>
            <ID>93</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>95</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>12</SourceCodeFileID>
          <SourceCodeLine>using System.Linq.Expressions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>95</ViolationID>
            <ID>95</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>13</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\Money.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>Money.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>99</ID>
          <Line>14</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>        private CultureInfo m_cultureInfo;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>99</ViolationID>
            <ID>99</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>100</ID>
          <Line>21</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the Money class.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>        public Money()</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>100</ViolationID>
            <ID>100</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>102</ID>
          <Line>30</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the Money class.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>        public Money(decimal amount)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>102</ViolationID>
            <ID>102</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>105</ID>
          <Line>40</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>        public Money(decimal amount, string currency)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>105</ViolationID>
            <ID>105</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>107</ID>
          <Line>40</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the Money class.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>        public Money(decimal amount, string currency)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>107</ViolationID>
            <ID>107</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>109</ID>
          <Line>51</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>        public decimal Amount { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>109</ViolationID>
            <ID>109</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>110</ID>
          <Line>56</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>        public string Currency { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>110</ViolationID>
            <ID>110</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>111</ID>
          <Line>58</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>        private CultureInfo CultureInfo</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>111</ViolationID>
            <ID>111</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>115</ID>
          <Line>112</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>        public static Money operator *(Money left, int right)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>115</ViolationID>
            <ID>115</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>117</ID>
          <Line>125</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>        public static Money operator *(Money left, decimal right)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>117</ViolationID>
            <ID>117</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>120</ID>
          <Line>138</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>        public static Money operator /(Money left, decimal right)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>120</ViolationID>
            <ID>120</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>134</ID>
          <Line>308</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>        private static void EnsureSameCurrency(Money left, Money right)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>134</ViolationID>
            <ID>134</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>137</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>137</ViolationID>
            <ID>137</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>140</ID>
          <Line>14</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>        private CultureInfo m_cultureInfo;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>140</ViolationID>
            <ID>140</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>141</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>141</ViolationID>
            <ID>141</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>142</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>142</ViolationID>
            <ID>142</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>143</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>143</ViolationID>
            <ID>143</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>144</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>144</ViolationID>
            <ID>144</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>146</ID>
          <Line>42</Line>
          <Message>The call to Amount must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>            Amount = amount;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>146</ViolationID>
            <ID>146</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>147</ID>
          <Line>43</Line>
          <Message>The call to Currency must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>            Currency = currency;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>147</ViolationID>
            <ID>147</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>149</ID>
          <Line>64</Line>
          <Message>The call to m_cultureInfo must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>                    m_cultureInfo = CultureInfoHelper.GetCultureInfoByCurrency(Currency);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>149</ViolationID>
            <ID>149</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>150</ID>
          <Line>62</Line>
          <Message>The call to m_cultureInfo must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>                if (m_cultureInfo == null)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>150</ViolationID>
            <ID>150</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>151</ID>
          <Line>67</Line>
          <Message>The call to m_cultureInfo must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>                return m_cultureInfo;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>151</ViolationID>
            <ID>151</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>152</ID>
          <Line>230</Line>
          <Message>The call to Amount must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>13</SourceCodeFileID>
          <SourceCodeLine>            return String.Format(CultureInfo, "{0:c2}", Amount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>152</ViolationID>
            <ID>152</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>14</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\MoneyExtensions.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>MoneyExtensions.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>106</ID>
          <Line>19</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>14</SourceCodeFileID>
          <SourceCodeLine>        public static Money Sum&lt;TSource&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, Money&gt; selector)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>106</ViolationID>
            <ID>106</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>108</ID>
          <Line>38</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>14</SourceCodeFileID>
          <SourceCodeLine>        public static Money Average&lt;TSource&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, Money&gt; selector)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>108</ViolationID>
            <ID>108</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>114</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>14</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>114</ViolationID>
            <ID>114</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>118</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>14</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>118</ViolationID>
            <ID>118</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>121</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>14</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>121</ViolationID>
            <ID>121</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>123</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>14</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>123</ViolationID>
            <ID>123</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>15</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\NamedEntityEqualityComparer.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>NamedEntityEqualityComparer.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>112</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>15</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>112</ViolationID>
            <ID>112</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>130</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>15</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>130</ViolationID>
            <ID>130</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>133</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>15</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>133</ViolationID>
            <ID>133</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>16</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\SoftDeleteEntityBase.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>SoftDeleteEntityBase.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>132</ID>
          <Line>15</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets a value indicating whether</Message>
          <SourceCodeFileID>16</SourceCodeFileID>
          <SourceCodeLine>        internal bool IsDeleted { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>132</ViolationID>
            <ID>132</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>135</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>16</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>135</ViolationID>
            <ID>135</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>138</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>16</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>138</ViolationID>
            <ID>138</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>17</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Domain\SpecService.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>SpecService.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>185</ID>
          <Line>22</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes static members of the SpecService class.</Message>
          <SourceCodeFileID>17</SourceCodeFileID>
          <SourceCodeLine>        static SpecService()</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>185</ViolationID>
            <ID>185</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>189</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>17</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>189</ViolationID>
            <ID>189</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>193</ID>
          <Line>21</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>17</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>193</ViolationID>
            <ID>193</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>197</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>17</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>197</ViolationID>
            <ID>197</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>199</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>17</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>199</ViolationID>
            <ID>199</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>202</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>17</SourceCodeFileID>
          <SourceCodeLine>using Escrutinador.Extensions.KissSpecifications;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>202</ViolationID>
            <ID>202</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>204</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>17</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>204</ViolationID>
            <ID>204</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>206</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>17</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications.Commons;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>206</ViolationID>
            <ID>206</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>207</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>17</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>207</ViolationID>
            <ID>207</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>209</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>17</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Commons.Specs;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>209</ViolationID>
            <ID>209</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>211</ID>
          <Line>8</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>17</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>211</ViolationID>
            <ID>211</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>18</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Globalization\CultureInfoHelper.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>CultureInfoHelper.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>145</ID>
          <Line>14</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>18</SourceCodeFileID>
          <SourceCodeLine>        private static Dictionary&lt;string, CultureInfo&gt; s_cultureInfoCache = new Dictionary&lt;string, CultureInfo&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>145</ViolationID>
            <ID>145</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>148</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>18</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>148</ViolationID>
            <ID>148</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>153</ID>
          <Line>14</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>18</SourceCodeFileID>
          <SourceCodeLine>        private static Dictionary&lt;string, CultureInfo&gt; s_cultureInfoCache = new Dictionary&lt;string, CultureInfo&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>153</ViolationID>
            <ID>153</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>154</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>18</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>154</ViolationID>
            <ID>154</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>156</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>18</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>156</ViolationID>
            <ID>156</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>158</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>18</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>158</ViolationID>
            <ID>158</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>159</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>18</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>159</ViolationID>
            <ID>159</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>19</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Globalization\GlobalizationHelper.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>GlobalizationHelper.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>162</ID>
          <Line>67</Line>
          <Message>A syntax error has been discovered in file C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Globalization\GlobalizationHelper.cs on line 67.</Message>
          <SourceCodeFileID>19</SourceCodeFileID>
          <SourceCodeLine>        public static string GetText(bool condition, object trueKey, object falseKey, bool markNotFound = true)</SourceCodeLine>
          <Rules>
            <CheckId>SA0102</CheckId>
            <Description />
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SyntaxException</Name>
            <Namespace>Microsoft.StyleCop.CSharp.CsParser</Namespace>
            <Warning>false</Warning>
            <ViolationID>162</ViolationID>
            <ID>162</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>20</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Linq\FilterResult.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>FilterResult.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>166</ID>
          <Line>19</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the FilterResult class.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>        public FilterResult(IEnumerable&lt;TEntity&gt; entities, long totalCount)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>166</ViolationID>
            <ID>166</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>169</ID>
          <Line>29</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>        public long TotalCount { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>169</ViolationID>
            <ID>169</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>171</ID>
          <Line>34</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>        public IEnumerable&lt;TEntity&gt; Entities { get; private set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>171</ViolationID>
            <ID>171</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>172</ID>
          <Line>55</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>        IEnumerable IFilterResult.GetEntities()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>172</ViolationID>
            <ID>172</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>173</ID>
          <Line>60</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>        void IFilterResult.SetEntities(IEnumerable entities)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>173</ViolationID>
            <ID>173</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>174</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>174</ViolationID>
            <ID>174</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>175</ID>
          <Line>43</Line>
          <Message>The variable name 'toAnonymousFunc' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>        public FilterResult&lt;object&gt; ToAnonymous(Func&lt;TEntity, object&gt; toAnonymousFunc)</SourceCodeLine>
          <Rules>
            <CheckId>SA1305</CheckId>
            <Description>Validates that a variable name is not prepended with lower-case characters matching the signature of Hungarian notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FieldNamesMustNotUseHungarianNotation</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>175</ViolationID>
            <ID>175</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>178</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>178</ViolationID>
            <ID>178</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>180</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>using System.Collections;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>180</ViolationID>
            <ID>180</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>183</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>183</ViolationID>
            <ID>183</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>186</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>186</ViolationID>
            <ID>186</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>188</ID>
          <Line>21</Line>
          <Message>The call to Entities must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>            Entities = entities;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>188</ViolationID>
            <ID>188</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>190</ID>
          <Line>22</Line>
          <Message>The call to TotalCount must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>            TotalCount = totalCount;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>190</ViolationID>
            <ID>190</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>191</ID>
          <Line>47</Line>
          <Message>The call to Entities must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>            foreach (var item in Entities)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>191</ViolationID>
            <ID>191</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>192</ID>
          <Line>52</Line>
          <Message>The call to TotalCount must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>            return new FilterResult&lt;object&gt;(expandedEntities, TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>192</ViolationID>
            <ID>192</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>194</ID>
          <Line>57</Line>
          <Message>The call to Entities must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>            return Entities;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>194</ViolationID>
            <ID>194</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>195</ID>
          <Line>62</Line>
          <Message>The call to Entities must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>20</SourceCodeFileID>
          <SourceCodeLine>            Entities = entities.Cast&lt;TEntity&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>195</ViolationID>
            <ID>195</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>21</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Linq\IFilterResult.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IFilterResult.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>163</ID>
          <Line>14</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>21</SourceCodeFileID>
          <SourceCodeLine>        long TotalCount { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>163</ViolationID>
            <ID>163</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>164</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>21</SourceCodeFileID>
          <SourceCodeLine>using System.Collections;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>164</ViolationID>
            <ID>164</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>165</ID>
          <Line>20</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>21</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>165</ViolationID>
            <ID>165</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>168</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>21</SourceCodeFileID>
          <SourceCodeLine>using System.Collections;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>168</ViolationID>
            <ID>168</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>170</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>21</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>170</ViolationID>
            <ID>170</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>22</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Properties\AssemblyInfo.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AssemblyInfo.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>167</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>22</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>167</ViolationID>
            <ID>167</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>23</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Runtime\IRuntimeContext.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IRuntimeContext.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>176</ID>
          <Line>14</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>23</SourceCodeFileID>
          <SourceCodeLine>        IRuntimeUser User { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>176</ViolationID>
            <ID>176</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>181</ID>
          <Line>19</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>23</SourceCodeFileID>
          <SourceCodeLine>        CultureInfo Culture { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>181</ViolationID>
            <ID>181</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>184</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>23</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>184</ViolationID>
            <ID>184</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>187</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>23</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>187</ViolationID>
            <ID>187</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>24</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Runtime\IRuntimePermission.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IRuntimePermission.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>177</ID>
          <Line>12</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>24</SourceCodeFileID>
          <SourceCodeLine>        string ControllerName { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>177</ViolationID>
            <ID>177</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>179</ID>
          <Line>17</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>24</SourceCodeFileID>
          <SourceCodeLine>        string ActionName { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>179</ViolationID>
            <ID>179</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>182</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>24</SourceCodeFileID>
          <SourceCodeLine>namespace SampleProject.Infrastructure.Framework.Runtime</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>182</ViolationID>
            <ID>182</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>25</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Runtime\IRuntimeUser.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IRuntimeUser.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>196</ID>
          <Line>15</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>        int Id { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>196</ViolationID>
            <ID>196</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>198</ID>
          <Line>20</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>        IEnumerable&lt;string&gt; ExternalUserIds { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>198</ViolationID>
            <ID>198</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>200</ID>
          <Line>25</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>        string ManagerExternalIdImported { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>200</ViolationID>
            <ID>200</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>201</ID>
          <Line>30</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>        string DirectorExternalIdImported { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>201</ViolationID>
            <ID>201</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>203</ID>
          <Line>35</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>        string UserName { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>203</ViolationID>
            <ID>203</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>205</ID>
          <Line>40</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>        string FullName { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>205</ViolationID>
            <ID>205</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>208</ID>
          <Line>45</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>        string Email { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>208</ViolationID>
            <ID>208</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>210</ID>
          <Line>50</Line>
          <Message>The property's documentation summary text must begin with: Gets a value indicating whether</Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>        bool IsAuthenticated { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>210</ViolationID>
            <ID>210</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>212</ID>
          <Line>55</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>        IEnumerable&lt;INamedEntity&gt; Regionals { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>212</ViolationID>
            <ID>212</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>214</ID>
          <Line>60</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>        IEnumerable&lt;INamedEntity&gt; Subregionals { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>214</ViolationID>
            <ID>214</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>216</ID>
          <Line>65</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>        int RoleId { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>216</ViolationID>
            <ID>216</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>218</ID>
          <Line>70</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>        IEnumerable&lt;IRuntimePermission&gt; Permissions { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>218</ViolationID>
            <ID>218</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>219</ID>
          <Line>75</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>        ActionStamp Modified { get; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>219</ViolationID>
            <ID>219</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>222</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>222</ViolationID>
            <ID>222</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>230</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>230</ViolationID>
            <ID>230</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>233</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>25</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>233</ViolationID>
            <ID>233</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>26</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Runtime\MemoryRuntimeContext.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>MemoryRuntimeContext.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>226</ID>
          <Line>15</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the MemoryRuntimeContext class.</Message>
          <SourceCodeFileID>26</SourceCodeFileID>
          <SourceCodeLine>        public MemoryRuntimeContext()</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>226</ViolationID>
            <ID>226</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>228</ID>
          <Line>32</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>26</SourceCodeFileID>
          <SourceCodeLine>        public IRuntimeUser User { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>228</ViolationID>
            <ID>228</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>232</ID>
          <Line>37</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>26</SourceCodeFileID>
          <SourceCodeLine>        public CultureInfo Culture { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>232</ViolationID>
            <ID>232</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>234</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>26</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>234</ViolationID>
            <ID>234</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>236</ID>
          <Line>40</Line>
          <Message>A closing curly bracket must not be preceded by a blank line.</Message>
          <SourceCodeFileID>26</SourceCodeFileID>
          <SourceCodeLine>    }</SourceCodeLine>
          <Rules>
            <CheckId>SA1508</CheckId>
            <Description>Validates that a closing curly bracket in a bracketed statement or element is not preceded by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketsMustNotBePrecededByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>236</ViolationID>
            <ID>236</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>238</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>26</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>238</ViolationID>
            <ID>238</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>240</ID>
          <Line>17</Line>
          <Message>The call to User must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>26</SourceCodeFileID>
          <SourceCodeLine>            User = new MemoryRuntimeUser()</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>240</ViolationID>
            <ID>240</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>242</ID>
          <Line>24</Line>
          <Message>The call to Culture must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>26</SourceCodeFileID>
          <SourceCodeLine>            Culture = new CultureInfo("pt-BR");</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>242</ViolationID>
            <ID>242</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>27</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Runtime\MemoryRuntimeUser.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>MemoryRuntimeUser.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>213</ID>
          <Line>19</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the MemoryRuntimeUser class.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public MemoryRuntimeUser()</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>213</ViolationID>
            <ID>213</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>215</ID>
          <Line>33</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public int Id { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>215</ViolationID>
            <ID>215</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>217</ID>
          <Line>38</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public IEnumerable&lt;string&gt; ExternalUserIds { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>217</ViolationID>
            <ID>217</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>220</ID>
          <Line>43</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public string ManagerExternalIdImported { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>220</ViolationID>
            <ID>220</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>221</ID>
          <Line>48</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public string DirectorExternalIdImported { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>221</ViolationID>
            <ID>221</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>223</ID>
          <Line>53</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public IEnumerable&lt;int&gt; SubstituingRoleIds { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>223</ViolationID>
            <ID>223</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>224</ID>
          <Line>58</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public string UserName { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>224</ViolationID>
            <ID>224</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>225</ID>
          <Line>63</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public string FullName { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>225</ViolationID>
            <ID>225</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>227</ID>
          <Line>68</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public string Email { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>227</ViolationID>
            <ID>227</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>229</ID>
          <Line>73</Line>
          <Message>The property's documentation summary text must begin with: Gets a value indicating whether</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public bool IsAuthenticated</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>229</ViolationID>
            <ID>229</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>231</ID>
          <Line>84</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public IEnumerable&lt;INamedEntity&gt; Regionals { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>231</ViolationID>
            <ID>231</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>235</ID>
          <Line>89</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public IEnumerable&lt;INamedEntity&gt; Subregionals { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>235</ViolationID>
            <ID>235</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>237</ID>
          <Line>94</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public int RoleId { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>237</ViolationID>
            <ID>237</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>239</ID>
          <Line>99</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public IEnumerable&lt;IRuntimePermission&gt; Permissions { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>239</ViolationID>
            <ID>239</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>241</ID>
          <Line>104</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>        public ActionStamp Modified { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>241</ViolationID>
            <ID>241</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>243</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>243</ViolationID>
            <ID>243</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>246</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>246</ViolationID>
            <ID>246</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>249</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>249</ViolationID>
            <ID>249</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>251</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>251</ViolationID>
            <ID>251</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>254</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>254</ViolationID>
            <ID>254</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>256</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>256</ViolationID>
            <ID>256</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>261</ID>
          <Line>21</Line>
          <Message>The call to ExternalUserIds must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>            ExternalUserIds = new List&lt;string&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>261</ViolationID>
            <ID>261</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>262</ID>
          <Line>22</Line>
          <Message>The call to Regionals must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>            Regionals = new List&lt;INamedEntity&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>262</ViolationID>
            <ID>262</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>263</ID>
          <Line>23</Line>
          <Message>The call to Subregionals must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>            Subregionals = new List&lt;INamedEntity&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>263</ViolationID>
            <ID>263</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>264</ID>
          <Line>24</Line>
          <Message>The call to Permissions must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>            Permissions = new List&lt;IRuntimePermission&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>264</ViolationID>
            <ID>264</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>265</ID>
          <Line>25</Line>
          <Message>The call to SubstituingRoleIds must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>            SubstituingRoleIds = new List&lt;int&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>265</ViolationID>
            <ID>265</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>266</ID>
          <Line>77</Line>
          <Message>The call to Permissions must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>                return Permissions.Any();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>266</ViolationID>
            <ID>266</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>268</ID>
          <Line>123</Line>
          <Message>The call to Permissions must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>            result = Permissions.Any(</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>268</ViolationID>
            <ID>268</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>270</ID>
          <Line>139</Line>
          <Message>The call to RoleId must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>27</SourceCodeFileID>
          <SourceCodeLine>            return roleIds.Contains(RoleId) || roleIds.Intersect(SubstituingRoleIds).Any();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>270</ViolationID>
            <ID>270</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>28</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework\Runtime\RuntimeContext.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>RuntimeContext.cs</Name>
        <CodeProjectID>0</CodeProjectID>
        <Violations>
          <ID>292</ID>
          <Line>48</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes static members of the RuntimeContext class.</Message>
          <SourceCodeFileID>28</SourceCodeFileID>
          <SourceCodeLine>        static RuntimeContext()</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>292</ViolationID>
            <ID>292</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>296</ID>
          <Line>62</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>28</SourceCodeFileID>
          <SourceCodeLine>        public static IRuntimeContext Current { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>296</ViolationID>
            <ID>296</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>300</ID>
          <Line>67</Line>
          <Message>The property's documentation summary text must begin with: Gets </Message>
          <SourceCodeFileID>28</SourceCodeFileID>
          <SourceCodeLine>        public static RuntimeEnvironment Environment</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>300</ViolationID>
            <ID>300</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>304</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>28</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>304</ViolationID>
            <ID>304</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>309</ID>
          <Line>83</Line>
          <Message>A closing curly bracket must not be preceded by a blank line.</Message>
          <SourceCodeFileID>28</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1508</CheckId>
            <Description>Validates that a closing curly bracket in a bracketed statement or element is not preceded by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketsMustNotBePrecededByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>309</ViolationID>
            <ID>309</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>313</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>28</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>313</ViolationID>
            <ID>313</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
    </Projects>
    <Projects>
      <ID>1</ID>
      <Location>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Repositories\SampleProject.Infrastructure.Repositories.csproj</Location>
      <Name>SampleProject.Infrastructure.Repositories</Name>
      <SolutionID>0</SolutionID>
      <SourceCodeFiles>
        <ID>29</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Repositories\Memory\MemoryPermissionRepository.cs</Path>
        <TimeStamp>2015-10-01T11:14:45-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>MemoryPermissionRepository.cs</Name>
        <CodeProjectID>1</CodeProjectID>
        <Violations>
          <ID>244</ID>
          <Line>15</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>29</SourceCodeFileID>
          <SourceCodeLine>        private static int s_lastKey;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>244</ViolationID>
            <ID>244</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>245</ID>
          <Line>23</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the MemoryPermissionRepository class.</Message>
          <SourceCodeFileID>29</SourceCodeFileID>
          <SourceCodeLine>        public MemoryPermissionRepository(IUnitOfWork unitOfWork)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>245</ViolationID>
            <ID>245</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>248</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>29</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>248</ViolationID>
            <ID>248</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>252</ID>
          <Line>15</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>29</SourceCodeFileID>
          <SourceCodeLine>        private static int s_lastKey;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>252</ViolationID>
            <ID>252</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>255</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>29</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>255</ViolationID>
            <ID>255</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>257</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>29</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>257</ViolationID>
            <ID>257</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>30</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Repositories\Memory\MemoryRoleRepository.cs</Path>
        <TimeStamp>2015-10-01T11:14:45-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>MemoryRoleRepository.cs</Name>
        <CodeProjectID>1</CodeProjectID>
        <Violations>
          <ID>247</ID>
          <Line>15</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>30</SourceCodeFileID>
          <SourceCodeLine>        private static int s_lastKey;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>247</ViolationID>
            <ID>247</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>250</ID>
          <Line>23</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the MemoryRoleRepository class.</Message>
          <SourceCodeFileID>30</SourceCodeFileID>
          <SourceCodeLine>        public MemoryRoleRepository(IUnitOfWork unitOfWork)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>250</ViolationID>
            <ID>250</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>253</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>30</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>253</ViolationID>
            <ID>253</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>258</ID>
          <Line>15</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>30</SourceCodeFileID>
          <SourceCodeLine>        private static int s_lastKey;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>258</ViolationID>
            <ID>258</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>259</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>30</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>259</ViolationID>
            <ID>259</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>260</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>30</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>260</ViolationID>
            <ID>260</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>31</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Repositories\Memory\MemoryUserRepository.cs</Path>
        <TimeStamp>2015-10-01T11:14:45-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>MemoryUserRepository.cs</Name>
        <CodeProjectID>1</CodeProjectID>
        <Violations>
          <ID>269</ID>
          <Line>18</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>31</SourceCodeFileID>
          <SourceCodeLine>        private static int s_lastKey;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>269</ViolationID>
            <ID>269</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>271</ID>
          <Line>26</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the MemoryUserRepository class.</Message>
          <SourceCodeFileID>31</SourceCodeFileID>
          <SourceCodeLine>        public MemoryUserRepository(IUnitOfWork unitOfWork)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>271</ViolationID>
            <ID>271</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>272</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>31</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>272</ViolationID>
            <ID>272</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>273</ID>
          <Line>5</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>31</SourceCodeFileID>
          <SourceCodeLine>[module: SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords", Scope = "namespace", Target = "SampleProject.Infrastructure.Repositories.Memory", MessageId = "Shared")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>273</ViolationID>
            <ID>273</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>274</ID>
          <Line>18</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>31</SourceCodeFileID>
          <SourceCodeLine>        private static int s_lastKey;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>274</ViolationID>
            <ID>274</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>275</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>31</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>275</ViolationID>
            <ID>275</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>277</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>31</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>277</ViolationID>
            <ID>277</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>278</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>31</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>278</ViolationID>
            <ID>278</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>32</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Repositories\Properties\AssemblyInfo.cs</Path>
        <TimeStamp>2015-10-01T11:14:45-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AssemblyInfo.cs</Name>
        <CodeProjectID>1</CodeProjectID>
        <Violations>
          <ID>267</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>32</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>267</ViolationID>
            <ID>267</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
    </Projects>
    <Projects>
      <ID>2</ID>
      <Location>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\SampleProject.Infrastructure.Framework.UnitTests.csproj</Location>
      <Name>SampleProject.Infrastructure.Framework.UnitTests</Name>
      <SolutionID>0</SolutionID>
      <SourceCodeFiles>
        <ID>33</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Commons\RangeValueTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:45-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>RangeValueTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>276</ID>
          <Line>71</Line>
          <Message>A syntax error has been discovered in file C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Commons\RangeValueTest.cs on line 71.</Message>
          <SourceCodeFileID>33</SourceCodeFileID>
          <SourceCodeLine>            RangeValue&lt;DateTime&gt;? other = null;</SourceCodeLine>
          <Rules>
            <CheckId>SA0102</CheckId>
            <Description />
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SyntaxException</Name>
            <Namespace>Microsoft.StyleCop.CSharp.CsParser</Namespace>
            <Warning>false</Warning>
            <ViolationID>276</ViolationID>
            <ID>276</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>34</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Commons\Specs\MustHaveUniqueValueSpecTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:45-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>MustHaveUniqueValueSpecTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>279</ID>
          <Line>7</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>34</SourceCodeFileID>
          <SourceCodeLine>    public class MustHaveUniqueValueSpecTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>279</ViolationID>
            <ID>279</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>280</ID>
          <Line>12</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>34</SourceCodeFileID>
          <SourceCodeLine>        public void IsSatisfiedBy_EnumProperty_NotUnique()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>280</ViolationID>
            <ID>280</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>281</ID>
          <Line>25</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>34</SourceCodeFileID>
          <SourceCodeLine>        public void IsSatisfiedBy_EnumProperty_Unique()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>281</ViolationID>
            <ID>281</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>282</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>34</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>282</ViolationID>
            <ID>282</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>283</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>34</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>283</ViolationID>
            <ID>283</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>284</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>34</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Commons.Specs;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>284</ViolationID>
            <ID>284</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>35</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Commons\Specs\UniqueValueEnumPropertyTestClass.cs</Path>
        <TimeStamp>2015-10-01T11:14:45-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>UniqueValueEnumPropertyTestClass.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>285</ID>
          <Line>4</Line>
          <Message>The enum must have a documentation header.</Message>
          <SourceCodeFileID>35</SourceCodeFileID>
          <SourceCodeLine>    public enum TestEnum</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>285</ViolationID>
            <ID>285</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>290</ID>
          <Line>6</Line>
          <Message>The enumeration sub-item must have a documentation header.</Message>
          <SourceCodeFileID>35</SourceCodeFileID>
          <SourceCodeLine>        TestValue,</SourceCodeLine>
          <Rules>
            <CheckId>SA1602</CheckId>
            <Description>Validates that an item within an enumeration contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>EnumerationItemsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>290</ViolationID>
            <ID>290</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>293</ID>
          <Line>7</Line>
          <Message>The enumeration sub-item must have a documentation header.</Message>
          <SourceCodeFileID>35</SourceCodeFileID>
          <SourceCodeLine>        TestValue2</SourceCodeLine>
          <Rules>
            <CheckId>SA1602</CheckId>
            <Description>Validates that an item within an enumeration contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>EnumerationItemsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>293</ViolationID>
            <ID>293</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>295</ID>
          <Line>10</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>35</SourceCodeFileID>
          <SourceCodeLine>    public class UniqueValueEnumPropertyTestClass</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>295</ViolationID>
            <ID>295</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>299</ID>
          <Line>12</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>35</SourceCodeFileID>
          <SourceCodeLine>        public TestEnum Test { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>299</ViolationID>
            <ID>299</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>303</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>35</SourceCodeFileID>
          <SourceCodeLine />
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>303</ViolationID>
            <ID>303</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>36</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Domain\ActionStampTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:45-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ActionStampTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>286</ID>
          <Line>11</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>36</SourceCodeFileID>
          <SourceCodeLine>    public class ActionStampTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>286</ViolationID>
            <ID>286</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>287</ID>
          <Line>14</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>36</SourceCodeFileID>
          <SourceCodeLine>        public void Stamp_NoUser_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>287</ViolationID>
            <ID>287</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>288</ID>
          <Line>25</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>36</SourceCodeFileID>
          <SourceCodeLine>        public void Stamp_NoArgs_DateAndUserUpdated()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>288</ViolationID>
            <ID>288</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>289</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>36</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>289</ViolationID>
            <ID>289</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>298</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>36</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>298</ViolationID>
            <ID>298</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>301</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>36</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>301</ViolationID>
            <ID>301</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>305</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>36</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>305</ViolationID>
            <ID>305</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>307</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>36</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>307</ViolationID>
            <ID>307</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>310</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>36</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Runtime;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>310</ViolationID>
            <ID>310</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>311</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>36</SourceCodeFileID>
          <SourceCodeLine>using TestSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>311</ViolationID>
            <ID>311</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>321</ID>
          <Line>18</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>36</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new ArgumentException(Texts.CanStampRecordWithNoUser), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>321</ViolationID>
            <ID>321</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>323</ID>
          <Line>18</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>36</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new ArgumentException(Texts.CanStampRecordWithNoUser), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>323</ViolationID>
            <ID>323</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>37</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Domain\DomainEntityBaseStub.cs</Path>
        <TimeStamp>2015-10-01T11:14:45-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>DomainEntityBaseStub.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>291</ID>
          <Line>7</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>37</SourceCodeFileID>
          <SourceCodeLine>    public class DomainEntityBaseStub : DomainEntityBase, IAggregateRoot</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>291</ViolationID>
            <ID>291</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>294</ID>
          <Line>9</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>37</SourceCodeFileID>
          <SourceCodeLine>        public override object Clone()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>294</ViolationID>
            <ID>294</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>297</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>37</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>297</ViolationID>
            <ID>297</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>302</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>37</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>302</ViolationID>
            <ID>302</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>306</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>37</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>306</ViolationID>
            <ID>306</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>308</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>37</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>308</ViolationID>
            <ID>308</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>38</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Domain\DomainEntityBaseTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:45-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>DomainEntityBaseTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>312</ID>
          <Line>6</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>38</SourceCodeFileID>
          <SourceCodeLine>    public class DomainEntityBaseTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>312</ViolationID>
            <ID>312</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>314</ID>
          <Line>9</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>38</SourceCodeFileID>
          <SourceCodeLine>        public void GetHashCode_DiffEntities_Diff()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>314</ViolationID>
            <ID>314</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>316</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>38</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>316</ViolationID>
            <ID>316</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>319</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>38</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>319</ViolationID>
            <ID>319</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>39</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Domain\DomainServiceBaseStub.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>DomainServiceBaseStub.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>315</ID>
          <Line>7</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>39</SourceCodeFileID>
          <SourceCodeLine>    public class DomainServiceBaseStub : DomainServiceBase&lt;DomainEntityBaseStub, IRepository&lt;DomainEntityBaseStub&gt;&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>315</ViolationID>
            <ID>315</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>317</ID>
          <Line>9</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>39</SourceCodeFileID>
          <SourceCodeLine>        public DomainServiceBaseStub(IRepository&lt;DomainEntityBaseStub&gt; repository, IUnitOfWork unitOfWork)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>317</ViolationID>
            <ID>317</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>318</ID>
          <Line>14</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>39</SourceCodeFileID>
          <SourceCodeLine>        public FilterResult&lt;DomainEntityBaseStub&gt; GetEntitiesStub()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>318</ViolationID>
            <ID>318</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>320</ID>
          <Line>19</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>39</SourceCodeFileID>
          <SourceCodeLine>        public FilterResult&lt;DomainEntityBaseStub&gt; GetEntitiesDescendingStub()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>320</ViolationID>
            <ID>320</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>322</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>39</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>322</ViolationID>
            <ID>322</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>324</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>39</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>324</ViolationID>
            <ID>324</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>326</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>39</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>326</ViolationID>
            <ID>326</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>328</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>39</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>328</ViolationID>
            <ID>328</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>40</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Domain\DomainServiceBaseTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>DomainServiceBaseTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>325</ID>
          <Line>7</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>40</SourceCodeFileID>
          <SourceCodeLine>    public class DomainServiceBaseTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>325</ViolationID>
            <ID>325</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>327</ID>
          <Line>10</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>40</SourceCodeFileID>
          <SourceCodeLine>        public void GetEntities_Args_Filtered()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>327</ViolationID>
            <ID>327</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>329</ID>
          <Line>24</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>40</SourceCodeFileID>
          <SourceCodeLine>        public void GetEntitiesDescending_Args_Filtered()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>329</ViolationID>
            <ID>329</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>331</ID>
          <Line>38</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>40</SourceCodeFileID>
          <SourceCodeLine>        public void Count_NoArgs_CountAllEntities()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>331</ViolationID>
            <ID>331</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>334</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>40</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>334</ViolationID>
            <ID>334</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>348</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>40</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>348</ViolationID>
            <ID>348</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>349</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>40</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>349</ViolationID>
            <ID>349</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>41</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Domain\DomainServiceExtensionsTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>DomainServiceExtensionsTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>330</ID>
          <Line>11</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>    public class DomainServiceExtensionsTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>330</ViolationID>
            <ID>330</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>332</ID>
          <Line>14</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>        public void Get_OffsetAndLimit_Query()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>332</ViolationID>
            <ID>332</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>336</ID>
          <Line>25</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>        public void Get_Filter_Query()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>336</ViolationID>
            <ID>336</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>338</ID>
          <Line>37</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>        public void GetAll_None_Query()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>338</ViolationID>
            <ID>338</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>340</ID>
          <Line>48</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>        public void GetAscending_OffsetLimitOrderBy_Query()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>340</ViolationID>
            <ID>340</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>342</ID>
          <Line>61</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>        public void GetAscending_OrderBy_Query()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>342</ViolationID>
            <ID>342</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>344</ID>
          <Line>74</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>        public void GetDescending_OffsetLimitOrderBy_Query()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>344</ViolationID>
            <ID>344</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>346</ID>
          <Line>87</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>        public void GetDescending_OrderBy_Query()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>346</ViolationID>
            <ID>346</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>347</ID>
          <Line>100</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>        public void GetDescending_FilterAndOrderBy_Query()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>347</ViolationID>
            <ID>347</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>351</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>351</ViolationID>
            <ID>351</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>357</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>357</ViolationID>
            <ID>357</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>358</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>using System.Linq.Expressions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>358</ViolationID>
            <ID>358</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>361</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>361</ViolationID>
            <ID>361</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>362</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>362</ViolationID>
            <ID>362</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>364</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>364</ViolationID>
            <ID>364</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>366</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>using Rhino.Mocks;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>366</ViolationID>
            <ID>366</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>367</ID>
          <Line>4</Line>
          <Message>Using directives must be sorted alphabetically by the namespaces.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1210</CheckId>
            <Description>Verifies that using directives are sorted alphabetically by the namespaces.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBeOrderedAlphabeticallyByNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Using Directives</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>367</ViolationID>
            <ID>367</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>368</ID>
          <Line>5</Line>
          <Message>Using directives must be sorted alphabetically by the namespaces.</Message>
          <SourceCodeFileID>41</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1210</CheckId>
            <Description>Verifies that using directives are sorted alphabetically by the namespaces.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBeOrderedAlphabeticallyByNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Using Directives</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>368</ViolationID>
            <ID>368</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>42</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Domain\MemoryDomainServiceBaseStubRepository.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>MemoryDomainServiceBaseStubRepository.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>333</ID>
          <Line>5</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>42</SourceCodeFileID>
          <SourceCodeLine>    public class MemoryDomainServiceBaseStubRepository : MemoryRepository&lt;DomainEntityBaseStub&gt;, IRepository&lt;DomainEntityBaseStub&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>333</ViolationID>
            <ID>333</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>335</ID>
          <Line>8</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>42</SourceCodeFileID>
          <SourceCodeLine>        private static int s_lastKey;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>335</ViolationID>
            <ID>335</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>337</ID>
          <Line>16</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the MemoryDomainServiceBaseStubRepository class.</Message>
          <SourceCodeFileID>42</SourceCodeFileID>
          <SourceCodeLine>        public MemoryDomainServiceBaseStubRepository(IUnitOfWork unitOfWork)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>337</ViolationID>
            <ID>337</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>339</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>42</SourceCodeFileID>
          <SourceCodeLine />
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>339</ViolationID>
            <ID>339</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>341</ID>
          <Line>3</Line>
          <Message>Adjacent elements must be separated by a blank line.</Message>
          <SourceCodeFileID>42</SourceCodeFileID>
          <SourceCodeLine>namespace SampleProject.Infrastructure.Framework.UnitTests.Domain</SourceCodeLine>
          <Rules>
            <CheckId>SA1516</CheckId>
            <Description>Validates that adjacent elements are separated by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeSeparatedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>341</ViolationID>
            <ID>341</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>343</ID>
          <Line>8</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>42</SourceCodeFileID>
          <SourceCodeLine>        private static int s_lastKey;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>343</ViolationID>
            <ID>343</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>345</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>42</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>345</ViolationID>
            <ID>345</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>43</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Domain\MoneyExtensionsTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>MoneyExtensionsTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>353</ID>
          <Line>8</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>43</SourceCodeFileID>
          <SourceCodeLine>    public class MoneyExtensionsTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>353</ViolationID>
            <ID>353</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>355</ID>
          <Line>11</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>43</SourceCodeFileID>
          <SourceCodeLine>        public void Sum_Empty_DefaultMoney()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>355</ViolationID>
            <ID>355</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>359</ID>
          <Line>22</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>43</SourceCodeFileID>
          <SourceCodeLine>        public void Sum_Source_Money()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>359</ViolationID>
            <ID>359</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>360</ID>
          <Line>38</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>43</SourceCodeFileID>
          <SourceCodeLine>        public void Average_Empty_DefaultMoney()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>360</ViolationID>
            <ID>360</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>363</ID>
          <Line>49</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>43</SourceCodeFileID>
          <SourceCodeLine>        public void Average_Source_Money()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>363</ViolationID>
            <ID>363</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>365</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>43</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>365</ViolationID>
            <ID>365</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>370</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>43</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>370</ViolationID>
            <ID>370</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>371</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>43</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>371</ViolationID>
            <ID>371</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>372</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>43</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>372</ViolationID>
            <ID>372</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>44</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Domain\MoneyStub.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>MoneyStub.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>350</ID>
          <Line>5</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>44</SourceCodeFileID>
          <SourceCodeLine>    public class MoneyStub</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>350</ViolationID>
            <ID>350</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>352</ID>
          <Line>7</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>44</SourceCodeFileID>
          <SourceCodeLine>        public Money Value { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>352</ViolationID>
            <ID>352</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>354</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>44</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>354</ViolationID>
            <ID>354</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>356</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>44</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>356</ViolationID>
            <ID>356</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>45</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Domain\MoneyTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>MoneyTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>373</ID>
          <Line>10</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>    public class MoneyTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>373</ViolationID>
            <ID>373</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>376</ID>
          <Line>13</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void Constructor_NoArgs_Defaults()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>376</ViolationID>
            <ID>376</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>377</ID>
          <Line>21</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void Constructor_Amount_DefaultCurrency()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>377</ViolationID>
            <ID>377</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>378</ID>
          <Line>29</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void Reais_Amount_RightAmountAndCurrency()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>378</ViolationID>
            <ID>378</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>381</ID>
          <Line>37</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void USDollars_Amount_RightAmountAndCurrency()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>381</ViolationID>
            <ID>381</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>385</ID>
          <Line>45</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void ToString_Reais_RightFormat()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>385</ViolationID>
            <ID>385</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>387</ID>
          <Line>52</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void ToString_Dollars_RightFormat()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>387</ViolationID>
            <ID>387</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>389</ID>
          <Line>59</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void OperatorSum_Reais_Added()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>389</ViolationID>
            <ID>389</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>391</ID>
          <Line>72</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void OperatorSub_Reais_Subtracted()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>391</ViolationID>
            <ID>391</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>396</ID>
          <Line>85</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void OperatorMult_ReaisInt_Multiplied()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>396</ViolationID>
            <ID>396</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>399</ID>
          <Line>98</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void OperatorMult_ReaisDecimal_Multiplied()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>399</ViolationID>
            <ID>399</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>402</ID>
          <Line>111</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void OperatorSum_DifferentCurrencies_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>402</ViolationID>
            <ID>402</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>405</ID>
          <Line>124</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void OperatorSub_DifferentCurrencies_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>405</ViolationID>
            <ID>405</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>407</ID>
          <Line>137</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void SameCurrency_Reais_KeepsSameCurrency()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>407</ViolationID>
            <ID>407</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>410</ID>
          <Line>148</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void Equals_Money_True()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>410</ViolationID>
            <ID>410</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>413</ID>
          <Line>162</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void Equals_Money_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>413</ViolationID>
            <ID>413</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>418</ID>
          <Line>178</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void OpEquality_Money_True()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>418</ViolationID>
            <ID>418</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>422</ID>
          <Line>193</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void OpEquality_Money_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>422</ViolationID>
            <ID>422</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>426</ID>
          <Line>207</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void OpInequality_Money_True()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>426</ViolationID>
            <ID>426</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>428</ID>
          <Line>221</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void OpInequality_Money_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>428</ViolationID>
            <ID>428</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>431</ID>
          <Line>239</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void GetHashCode_NoArgs_Hashcode()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>431</ViolationID>
            <ID>431</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>434</ID>
          <Line>253</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void Add_Reais_Added()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>434</ViolationID>
            <ID>434</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>440</ID>
          <Line>266</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void Subtract_Reais_Subtracted()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>440</ViolationID>
            <ID>440</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>444</ID>
          <Line>279</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void Multiply_ReaisInt_Multiplied()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>444</ViolationID>
            <ID>444</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>446</ID>
          <Line>292</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void Multiply_ReaisDecimal_Multiplied()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>446</ViolationID>
            <ID>446</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>447</ID>
          <Line>305</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>        public void Divide_ReaisDecimal_Divided()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>447</ViolationID>
            <ID>447</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>450</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>450</ViolationID>
            <ID>450</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>476</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>476</ViolationID>
            <ID>476</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>478</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>478</ViolationID>
            <ID>478</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>481</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>481</ViolationID>
            <ID>481</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>485</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>485</ViolationID>
            <ID>485</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>489</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>using TestSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>489</ViolationID>
            <ID>489</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>498</ID>
          <Line>117</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new InvalidOperationException(Texts.InvalidMoneyOperationDifferentCurrencies), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>498</ViolationID>
            <ID>498</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>500</ID>
          <Line>117</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new InvalidOperationException(Texts.InvalidMoneyOperationDifferentCurrencies), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>500</ViolationID>
            <ID>500</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>505</ID>
          <Line>130</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new InvalidOperationException(Texts.InvalidMoneyOperationDifferentCurrencies), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>505</ViolationID>
            <ID>505</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>508</ID>
          <Line>130</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>45</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new InvalidOperationException(Texts.InvalidMoneyOperationDifferentCurrencies), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>508</ViolationID>
            <ID>508</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>46</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Domain\NamedEntityEqualityComparerTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>NamedEntityEqualityComparerTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>369</ID>
          <Line>8</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>46</SourceCodeFileID>
          <SourceCodeLine>    public class NamedEntityEqualityComparerTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>369</ViolationID>
            <ID>369</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>374</ID>
          <Line>11</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>46</SourceCodeFileID>
          <SourceCodeLine>        public void Equals_AnyNull_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>374</ViolationID>
            <ID>374</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>375</ID>
          <Line>20</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>46</SourceCodeFileID>
          <SourceCodeLine>        public void Equals_DiffName_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>375</ViolationID>
            <ID>375</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>379</ID>
          <Line>33</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>46</SourceCodeFileID>
          <SourceCodeLine>        public void Equals_EqualsName_True()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>379</ViolationID>
            <ID>379</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>380</ID>
          <Line>46</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>46</SourceCodeFileID>
          <SourceCodeLine>        public void GetHashCode_NameNull_Zero()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>380</ViolationID>
            <ID>380</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>382</ID>
          <Line>56</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>46</SourceCodeFileID>
          <SourceCodeLine>        public void GetHashCode_Name_NameHashCode()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>382</ViolationID>
            <ID>382</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>383</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>46</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>383</ViolationID>
            <ID>383</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>392</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>46</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>392</ViolationID>
            <ID>392</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>395</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>46</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>395</ViolationID>
            <ID>395</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>398</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>46</SourceCodeFileID>
          <SourceCodeLine>using Rhino.Mocks;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>398</ViolationID>
            <ID>398</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>401</ID>
          <Line>2</Line>
          <Message>Using directives must be sorted alphabetically by the namespaces.</Message>
          <SourceCodeFileID>46</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1210</CheckId>
            <Description>Verifies that using directives are sorted alphabetically by the namespaces.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBeOrderedAlphabeticallyByNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Using Directives</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>401</ViolationID>
            <ID>401</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>47</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Globalization\CultureInfoHelperTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>CultureInfoHelperTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>384</ID>
          <Line>7</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>47</SourceCodeFileID>
          <SourceCodeLine>    public class CultureInfoHelperTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>384</ViolationID>
            <ID>384</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>386</ID>
          <Line>10</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>47</SourceCodeFileID>
          <SourceCodeLine>        public void GetCultureInfoByCurrency_ValidIsoCurrencySimbol_CultureInfo()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>386</ViolationID>
            <ID>386</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>388</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>47</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>388</ViolationID>
            <ID>388</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>390</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>47</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>390</ViolationID>
            <ID>390</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>393</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>47</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>393</ViolationID>
            <ID>393</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>48</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Globalization\GlobalizationHelperTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>GlobalizationHelperTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>394</ID>
          <Line>9</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>    public class GlobalizationHelperTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>394</ViolationID>
            <ID>394</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>397</ID>
          <Line>12</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>        public void GetText_NullKey_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>397</ViolationID>
            <ID>397</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>400</ID>
          <Line>21</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>        public void GetText_KeyDoesNotExists_NotFoundText()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>400</ViolationID>
            <ID>400</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>403</ID>
          <Line>27</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>        public void GetText_KeyExists_Translated()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>403</ViolationID>
            <ID>403</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>404</ID>
          <Line>33</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>        public void GetText_NullMainKey_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>404</ViolationID>
            <ID>404</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>406</ID>
          <Line>43</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>        public void GetText_KeyAndFallbackDoesNotExists_NotFoundText()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>406</ViolationID>
            <ID>406</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>408</ID>
          <Line>49</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>        public void GetText_KeyExistsFallbackIgnored_Translated()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>408</ViolationID>
            <ID>408</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>409</ID>
          <Line>55</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>        public void GetText_KeyDoesNotExistsFallbackUsed_Translated()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>409</ViolationID>
            <ID>409</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>411</ID>
          <Line>61</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>        public void GetText_ConditionTrue_TrueKey()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>411</ViolationID>
            <ID>411</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>414</ID>
          <Line>67</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>        public void GetText_ConditionFalse_FalseKey()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>414</ViolationID>
            <ID>414</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>416</ID>
          <Line>73</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>        public void ToYesNo_ConditionTrue_Yes()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>416</ViolationID>
            <ID>416</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>420</ID>
          <Line>79</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>        public void ToYesNo_ConditionFalse_No()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>420</ViolationID>
            <ID>420</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>423</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>423</ViolationID>
            <ID>423</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>425</ID>
          <Line>40</Line>
          <Message>A closing curly bracket must not be preceded by a blank line.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>        }</SourceCodeLine>
          <Rules>
            <CheckId>SA1508</CheckId>
            <Description>Validates that a closing curly bracket in a bracketed statement or element is not preceded by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketsMustNotBePrecededByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>425</ViolationID>
            <ID>425</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>433</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>433</ViolationID>
            <ID>433</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>436</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>436</ViolationID>
            <ID>436</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>439</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>439</ViolationID>
            <ID>439</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>443</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>using TestSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>443</ViolationID>
            <ID>443</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>445</ID>
          <Line>14</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new ArgumentNullException("key"), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>445</ViolationID>
            <ID>445</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>448</ID>
          <Line>14</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new ArgumentNullException("key"), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>448</ViolationID>
            <ID>448</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>451</ID>
          <Line>35</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new ArgumentNullException("key"), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>451</ViolationID>
            <ID>451</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>453</ID>
          <Line>35</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>48</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new ArgumentNullException("key"), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>453</ViolationID>
            <ID>453</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>49</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Linq\FilterResultTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>FilterResultTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>412</ID>
          <Line>8</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>49</SourceCodeFileID>
          <SourceCodeLine>    public class FilterResultTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>412</ViolationID>
            <ID>412</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>415</ID>
          <Line>11</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>49</SourceCodeFileID>
          <SourceCodeLine>        public void Constructor_Args_PropertiesDefined()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>415</ViolationID>
            <ID>415</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>419</ID>
          <Line>19</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>49</SourceCodeFileID>
          <SourceCodeLine>        public void GetEntities_NoArgs_Entities()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>419</ViolationID>
            <ID>419</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>421</ID>
          <Line>26</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>49</SourceCodeFileID>
          <SourceCodeLine>        public void SetEntities_Entities_Changed()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>421</ViolationID>
            <ID>421</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>424</ID>
          <Line>36</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>49</SourceCodeFileID>
          <SourceCodeLine>        public void ToAnonymous_Entities_Anonymous()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>424</ViolationID>
            <ID>424</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>427</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>49</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>427</ViolationID>
            <ID>427</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>435</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>49</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>435</ViolationID>
            <ID>435</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>438</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>49</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>438</ViolationID>
            <ID>438</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>442</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>49</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>442</ViolationID>
            <ID>442</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>50</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Properties\AssemblyInfo.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AssemblyInfo.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>417</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>50</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>417</ViolationID>
            <ID>417</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>51</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Runtime\MemoryRuntimeContextTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>MemoryRuntimeContextTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>429</ID>
          <Line>7</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>51</SourceCodeFileID>
          <SourceCodeLine>    public class MemoryRuntimeContextTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>429</ViolationID>
            <ID>429</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>430</ID>
          <Line>10</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>51</SourceCodeFileID>
          <SourceCodeLine>        public void Country_DefaultAndSet_Value()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>430</ViolationID>
            <ID>430</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>432</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>51</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>432</ViolationID>
            <ID>432</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>437</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>51</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>437</ViolationID>
            <ID>437</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>441</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>51</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Runtime;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>441</ViolationID>
            <ID>441</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>52</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Runtime\MemoryRuntimeUserTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>MemoryRuntimeUserTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>449</ID>
          <Line>6</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>52</SourceCodeFileID>
          <SourceCodeLine>    public class MemoryRuntimeUserTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>449</ViolationID>
            <ID>449</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>452</ID>
          <Line>9</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>52</SourceCodeFileID>
          <SourceCodeLine>        public void CanAccess_NoPermissions_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>452</ViolationID>
            <ID>452</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>454</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>52</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>454</ViolationID>
            <ID>454</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>455</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>52</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>455</ViolationID>
            <ID>455</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>53</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Framework.UnitTests\Runtime\RuntimeContextTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:44-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>RuntimeContextTest.cs</Name>
        <CodeProjectID>2</CodeProjectID>
        <Violations>
          <ID>456</ID>
          <Line>7</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>53</SourceCodeFileID>
          <SourceCodeLine>    public class RuntimeContextTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>456</ViolationID>
            <ID>456</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>457</ID>
          <Line>10</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>53</SourceCodeFileID>
          <SourceCodeLine>        public void Current_NotDefined_MemoryContext()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>457</ViolationID>
            <ID>457</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>458</ID>
          <Line>16</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>53</SourceCodeFileID>
          <SourceCodeLine>        public void Environment_CurrentCompilation()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>458</ViolationID>
            <ID>458</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>459</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>53</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>459</ViolationID>
            <ID>459</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>463</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>53</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>463</ViolationID>
            <ID>463</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>464</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>53</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Runtime;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>464</ViolationID>
            <ID>464</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
    </Projects>
    <Projects>
      <ID>3</ID>
      <Location>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Web\SampleProject.Infrastructure.Web.csproj</Location>
      <Name>SampleProject.Infrastructure.Web</Name>
      <SolutionID>0</SolutionID>
      <SourceCodeFiles>
        <ID>54</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Infrastructure.Web\Properties\AssemblyInfo.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AssemblyInfo.cs</Name>
        <CodeProjectID>3</CodeProjectID>
        <Violations>
          <ID>461</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>54</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>461</ViolationID>
            <ID>461</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
    </Projects>
    <Projects>
      <ID>4</ID>
      <Location>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\SampleProject.Domain.csproj</Location>
      <Name>SampleProject.Domain</Name>
      <SolutionID>0</SolutionID>
      <SourceCodeFiles>
        <ID>55</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\IPermissionService.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IPermissionService.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>460</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>55</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>460</ViolationID>
            <ID>460</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>462</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>55</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>462</ViolationID>
            <ID>462</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>56</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\IRoleService.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IRoleService.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>465</ID>
          <Line>20</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>56</SourceCodeFileID>
          <SourceCodeLine>        FilterResult&lt;Role&gt; GetByName(int offset, int limit, string filter);</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>465</ViolationID>
            <ID>465</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>466</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>56</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>466</ViolationID>
            <ID>466</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>467</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>56</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>467</ViolationID>
            <ID>467</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>469</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>56</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>469</ViolationID>
            <ID>469</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>470</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>56</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Runtime;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>470</ViolationID>
            <ID>470</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>57</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\IUserPasswordService.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IUserPasswordService.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>471</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>57</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>471</ViolationID>
            <ID>471</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>474</ID>
          <Line>39</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>57</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>474</ViolationID>
            <ID>474</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>477</ID>
          <Line>46</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>57</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>477</ViolationID>
            <ID>477</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>480</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>57</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>480</ViolationID>
            <ID>480</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>483</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>57</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>483</ViolationID>
            <ID>483</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>487</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>57</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>487</ViolationID>
            <ID>487</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>58</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\IUserService.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IUserService.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>468</ID>
          <Line>23</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>58</SourceCodeFileID>
          <SourceCodeLine>        FilterResult&lt;User&gt; GetByFilter(int offset, int limit, UserFilter filter);</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>468</ViolationID>
            <ID>468</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>472</ID>
          <Line>32</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>58</SourceCodeFileID>
          <SourceCodeLine>        FilterResult&lt;User&gt; GetByFullName(int offset, int limit, string filter);</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>472</ViolationID>
            <ID>472</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>473</ID>
          <Line>40</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>58</SourceCodeFileID>
          <SourceCodeLine>        long Count(Expression&lt;Func&lt;User, bool&gt;&gt; filter);</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>473</ViolationID>
            <ID>473</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>475</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>58</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>475</ViolationID>
            <ID>475</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>479</ID>
          <Line>39</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>58</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>479</ViolationID>
            <ID>479</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>484</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>58</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>484</ViolationID>
            <ID>484</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>488</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>58</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>488</ViolationID>
            <ID>488</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>491</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>58</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>491</ViolationID>
            <ID>491</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>492</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>58</SourceCodeFileID>
          <SourceCodeLine>using System.Linq.Expressions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>492</ViolationID>
            <ID>492</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>494</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>58</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>494</ViolationID>
            <ID>494</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>496</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>58</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>496</ViolationID>
            <ID>496</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>497</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>58</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Runtime;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>497</ViolationID>
            <ID>497</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>59</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\Permission.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>Permission.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>482</ID>
          <Line>20</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>59</SourceCodeFileID>
          <SourceCodeLine>        public string ControllerName { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>482</ViolationID>
            <ID>482</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>486</ID>
          <Line>26</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>59</SourceCodeFileID>
          <SourceCodeLine>        public string ReferencedControllerName { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>486</ViolationID>
            <ID>486</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>490</ID>
          <Line>32</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>59</SourceCodeFileID>
          <SourceCodeLine>        public string ActionName { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>490</ViolationID>
            <ID>490</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>493</ID>
          <Line>38</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>59</SourceCodeFileID>
          <SourceCodeLine>        public string ReferencedActionName { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>493</ViolationID>
            <ID>493</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>495</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>59</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel.DataAnnotations;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>495</ViolationID>
            <ID>495</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>506</ID>
          <Line>12</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>59</SourceCodeFileID>
          <SourceCodeLine>    [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>506</ViolationID>
            <ID>506</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>511</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>59</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel.DataAnnotations;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>511</ViolationID>
            <ID>511</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>512</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>59</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>512</ViolationID>
            <ID>512</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>515</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>59</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>515</ViolationID>
            <ID>515</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>517</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>59</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Runtime;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>517</ViolationID>
            <ID>517</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>520</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>59</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>520</ViolationID>
            <ID>520</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>60</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\PermissionService.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>PermissionService.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>499</ID>
          <Line>20</Line>
          <Message>The documentation header must contain param tags matching the element's parameter list.</Message>
          <SourceCodeFileID>60</SourceCodeFileID>
          <SourceCodeLine>        public PermissionService(IRepository&lt;Permission&gt; mainRepository, IUnitOfWork unitOfWork)</SourceCodeLine>
          <Rules>
            <CheckId>SA1611</CheckId>
            <Description>Validates that an element's documentation header contains a param tag for each item in the element's parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementParametersMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>499</ViolationID>
            <ID>499</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>501</ID>
          <Line>20</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the PermissionService class.</Message>
          <SourceCodeFileID>60</SourceCodeFileID>
          <SourceCodeLine>        public PermissionService(IRepository&lt;Permission&gt; mainRepository, IUnitOfWork unitOfWork)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>501</ViolationID>
            <ID>501</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>503</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>60</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>503</ViolationID>
            <ID>503</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>509</ID>
          <Line>31</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>60</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>509</ViolationID>
            <ID>509</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>513</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>60</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>513</ViolationID>
            <ID>513</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>516</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>60</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>516</ViolationID>
            <ID>516</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>518</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>60</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>518</ViolationID>
            <ID>518</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>521</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>60</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>521</ViolationID>
            <ID>521</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>522</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>60</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>522</ViolationID>
            <ID>522</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>61</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\Role.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>Role.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>502</ID>
          <Line>23</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the Role class.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>        public Role()</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>502</ViolationID>
            <ID>502</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>504</ID>
          <Line>35</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>        public string Name { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>504</ViolationID>
            <ID>504</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>507</ID>
          <Line>41</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>        public string Description { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>507</ViolationID>
            <ID>507</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>510</ID>
          <Line>48</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>        public virtual IList&lt;Permission&gt; Permissions { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>510</ViolationID>
            <ID>510</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>514</ID>
          <Line>53</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets a value indicating whether</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>        public bool EmailNotificationEnabled { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>514</ViolationID>
            <ID>514</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>519</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>519</ViolationID>
            <ID>519</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>523</ID>
          <Line>46</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>523</ViolationID>
            <ID>523</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>524</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>524</ViolationID>
            <ID>524</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>525</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>525</ViolationID>
            <ID>525</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>526</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel.DataAnnotations;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>526</ViolationID>
            <ID>526</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>528</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>528</ViolationID>
            <ID>528</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>530</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>530</ViolationID>
            <ID>530</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>532</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>532</ViolationID>
            <ID>532</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>534</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>534</ViolationID>
            <ID>534</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>536</ID>
          <Line>8</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Runtime;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>536</ViolationID>
            <ID>536</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>538</ID>
          <Line>9</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>538</ViolationID>
            <ID>538</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>542</ID>
          <Line>25</Line>
          <Message>The call to Permissions must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>            Permissions = new List&lt;Permission&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>542</ViolationID>
            <ID>542</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>544</ID>
          <Line>72</Line>
          <Message>The call to Permissions must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>                result = Permissions.Any(</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>544</ViolationID>
            <ID>544</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>546</ID>
          <Line>70</Line>
          <Message>The call to Permissions must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>61</SourceCodeFileID>
          <SourceCodeLine>            if (Permissions != null)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>546</ViolationID>
            <ID>546</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>62</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\RoleFilter.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>RoleFilter.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>527</ID>
          <Line>3</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>62</SourceCodeFileID>
          <SourceCodeLine>    public class RoleFilter</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>527</ViolationID>
            <ID>527</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>529</ID>
          <Line>6</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>62</SourceCodeFileID>
          <SourceCodeLine>        public string Description { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>529</ViolationID>
            <ID>529</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>531</ID>
          <Line>8</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>62</SourceCodeFileID>
          <SourceCodeLine>        public string Name { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>531</ViolationID>
            <ID>531</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>533</ID>
          <Line>12</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>62</SourceCodeFileID>
          <SourceCodeLine>        public void Sanitize()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>533</ViolationID>
            <ID>533</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>540</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>62</SourceCodeFileID>
          <SourceCodeLine>namespace SampleProject.Domain.Accounts</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>540</ViolationID>
            <ID>540</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>545</ID>
          <Line>14</Line>
          <Message>The call to Description must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>62</SourceCodeFileID>
          <SourceCodeLine>            Description = string.IsNullOrWhiteSpace(Description) ? null : Description.ToLowerInvariant().Trim();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>545</ViolationID>
            <ID>545</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>548</ID>
          <Line>15</Line>
          <Message>The call to Name must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>62</SourceCodeFileID>
          <SourceCodeLine>            Name = string.IsNullOrWhiteSpace(Name) ? null : Name.ToLowerInvariant().Trim();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>548</ViolationID>
            <ID>548</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>63</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\RoleService.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>RoleService.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>535</ID>
          <Line>19</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>        private IPermissionService m_permissionService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>535</ViolationID>
            <ID>535</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>537</ID>
          <Line>29</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the RoleService class.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>        public RoleService(IRepository&lt;Role&gt; roleRepository, IUnitOfWork unitOfWork, IPermissionService permissionService)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>537</ViolationID>
            <ID>537</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>539</ID>
          <Line>56</Line>
          <Message>The documentation text within the return tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>        public Role GetByName(string name)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>539</ViolationID>
            <ID>539</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>541</ID>
          <Line>70</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>        public FilterResult&lt;Role&gt; GetByName(int offset, int limit, string filter)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>541</ViolationID>
            <ID>541</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>543</ID>
          <Line>82</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>        public override FilterResult&lt;Role&gt; Get(int offset, int limit, Expression&lt;Func&lt;Role, bool&gt;&gt; filter)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>543</ViolationID>
            <ID>543</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>547</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>547</ViolationID>
            <ID>547</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>550</ID>
          <Line>19</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>        private IPermissionService m_permissionService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>550</ViolationID>
            <ID>550</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>552</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>552</ViolationID>
            <ID>552</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>554</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>using System.Linq.Expressions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>554</ViolationID>
            <ID>554</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>557</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>using Escrutinador.Extensions.KissSpecifications;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>557</ViolationID>
            <ID>557</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>560</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>560</ViolationID>
            <ID>560</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>562</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications.Commons;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>562</ViolationID>
            <ID>562</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>565</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>565</ViolationID>
            <ID>565</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>568</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>568</ViolationID>
            <ID>568</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>570</ID>
          <Line>8</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Runtime;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>570</ViolationID>
            <ID>570</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>573</ID>
          <Line>9</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>573</ViolationID>
            <ID>573</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>578</ID>
          <Line>32</Line>
          <Message>The call to m_permissionService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>            m_permissionService = permissionService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>578</ViolationID>
            <ID>578</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>580</ID>
          <Line>47</Line>
          <Message>The call to m_permissionService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>                m_permissionService.Save(p);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>580</ViolationID>
            <ID>580</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>582</ID>
          <Line>97</Line>
          <Message>The call to GetByName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>63</SourceCodeFileID>
          <SourceCodeLine>                new MustHaveUniqueTextSpecification&lt;Role&gt;(t =&gt; t.Name, t =&gt; GetByName(t))</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>582</ViolationID>
            <ID>582</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>64</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\Specs\PasswordMustBeStrongSpec.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>PasswordMustBeStrongSpec.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>549</ID>
          <Line>16</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>        public const int MinLength = 8;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>549</ViolationID>
            <ID>549</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>551</ID>
          <Line>17</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>        public const int MinUppercase = 1;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>551</ViolationID>
            <ID>551</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>553</ID>
          <Line>18</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>        public const int MinSpecial = 1;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>553</ViolationID>
            <ID>553</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>555</ID>
          <Line>19</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>        public const int MinNumber = 1;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>555</ViolationID>
            <ID>555</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>558</ID>
          <Line>20</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>        public const int NonRepeatLastHistories = 20;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>558</ViolationID>
            <ID>558</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>561</ID>
          <Line>24</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>        private int m_userId;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>561</ViolationID>
            <ID>561</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>564</ID>
          <Line>25</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>        private IUserPasswordService m_userPasswordService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>564</ViolationID>
            <ID>564</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>569</ID>
          <Line>34</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the PasswordMustBeStrongSpec class.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>        public PasswordMustBeStrongSpec(int userId, IUserPasswordService userPasswordService)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>569</ViolationID>
            <ID>569</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>572</ID>
          <Line>48</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>        public override bool IsSatisfiedBy(string target)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>572</ViolationID>
            <ID>572</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>576</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>576</ViolationID>
            <ID>576</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>584</ID>
          <Line>47</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>584</ViolationID>
            <ID>584</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>587</ID>
          <Line>24</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>        private int m_userId;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>587</ViolationID>
            <ID>587</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>589</ID>
          <Line>25</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>        private IUserPasswordService m_userPasswordService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>589</ViolationID>
            <ID>589</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>591</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>591</ViolationID>
            <ID>591</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>592</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>592</ViolationID>
            <ID>592</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>593</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>593</ViolationID>
            <ID>593</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>596</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>596</ViolationID>
            <ID>596</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>600</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>600</ViolationID>
            <ID>600</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>602</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>602</ViolationID>
            <ID>602</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>612</ID>
          <Line>36</Line>
          <Message>The call to m_userId must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>            m_userId = userId;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>612</ViolationID>
            <ID>612</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>615</ID>
          <Line>37</Line>
          <Message>The call to m_userPasswordService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>            m_userPasswordService = userPasswordService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>615</ViolationID>
            <ID>615</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>619</ID>
          <Line>79</Line>
          <Message>The call to m_userPasswordService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>            var histories = m_userPasswordService.GetLatestPasswordHistories(m_userId, NonRepeatLastHistories);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>619</ViolationID>
            <ID>619</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>623</ID>
          <Line>81</Line>
          <Message>The call to m_userPasswordService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>64</SourceCodeFileID>
          <SourceCodeLine>            var encryptedPassword = m_userPasswordService.Encrypt(target);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>623</ViolationID>
            <ID>623</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>65</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\Specs\UserCanBeRemovedSpec.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>UserCanBeRemovedSpec.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>556</ID>
          <Line>14</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>65</SourceCodeFileID>
          <SourceCodeLine>        private int m_userId;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>556</ViolationID>
            <ID>556</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>559</ID>
          <Line>22</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the UserCanBeRemovedSpec class.</Message>
          <SourceCodeFileID>65</SourceCodeFileID>
          <SourceCodeLine>        public UserCanBeRemovedSpec(int userId)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>559</ViolationID>
            <ID>559</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>563</ID>
          <Line>35</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>65</SourceCodeFileID>
          <SourceCodeLine>        public override bool IsSatisfiedBy(User target)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>563</ViolationID>
            <ID>563</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>566</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>65</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>566</ViolationID>
            <ID>566</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>590</ID>
          <Line>34</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>65</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>590</ViolationID>
            <ID>590</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>597</ID>
          <Line>14</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>65</SourceCodeFileID>
          <SourceCodeLine>        private int m_userId;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>597</ViolationID>
            <ID>597</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>613</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>65</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>613</ViolationID>
            <ID>613</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>616</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>65</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>616</ViolationID>
            <ID>616</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>618</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>65</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>618</ViolationID>
            <ID>618</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>621</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>65</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>621</ViolationID>
            <ID>621</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>625</ID>
          <Line>24</Line>
          <Message>The call to m_userId must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>65</SourceCodeFileID>
          <SourceCodeLine>            m_userId = userId;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>625</ViolationID>
            <ID>625</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>627</ID>
          <Line>39</Line>
          <Message>The call to m_userId must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>65</SourceCodeFileID>
          <SourceCodeLine>                NotSatisfiedReason = Texts.UserWithIdDoNotExists.With(m_userId);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>627</ViolationID>
            <ID>627</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>66</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\User.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>User.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>567</ID>
          <Line>20</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the User class.</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>        public User()</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>567</ViolationID>
            <ID>567</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>571</ID>
          <Line>33</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>        public string ExternalUserId { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>571</ViolationID>
            <ID>571</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>574</ID>
          <Line>40</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>        public string FullName { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>574</ViolationID>
            <ID>574</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>575</ID>
          <Line>47</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>        public string Email { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>575</ViolationID>
            <ID>575</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>577</ID>
          <Line>55</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>        public string UserName { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>577</ViolationID>
            <ID>577</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>579</ID>
          <Line>61</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>        public string Password { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>579</ViolationID>
            <ID>579</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>581</ID>
          <Line>67</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>        public int RoleId { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>581</ViolationID>
            <ID>581</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>583</ID>
          <Line>74</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>        public virtual Role Role { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>583</ViolationID>
            <ID>583</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>585</ID>
          <Line>80</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets a value indicating whether</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>        public bool Enabled { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>585</ViolationID>
            <ID>585</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>586</ID>
          <Line>83</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>        string INamedEntity.Name</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>586</ViolationID>
            <ID>586</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>588</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel.DataAnnotations;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>588</ViolationID>
            <ID>588</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>594</ID>
          <Line>6</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>[module: SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords", Scope = "namespace", Target = "SampleProject.Domain.Accounts", MessageId = "Shared")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>594</ViolationID>
            <ID>594</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>599</ID>
          <Line>82</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>599</ViolationID>
            <ID>599</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>605</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel.DataAnnotations;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>605</ViolationID>
            <ID>605</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>607</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>607</ViolationID>
            <ID>607</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>609</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>609</ViolationID>
            <ID>609</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>611</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>611</ViolationID>
            <ID>611</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>622</ID>
          <Line>22</Line>
          <Message>The call to Enabled must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>            Enabled = true;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>622</ViolationID>
            <ID>622</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>624</ID>
          <Line>85</Line>
          <Message>The call to FullName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>            get { return FullName; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>624</ViolationID>
            <ID>624</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>626</ID>
          <Line>99</Line>
          <Message>The call to UserName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>66</SourceCodeFileID>
          <SourceCodeLine>                UserName = oldUser.UserName;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>626</ViolationID>
            <ID>626</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>67</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\UserFilter.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>UserFilter.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>595</ID>
          <Line>5</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>    public class UserFilter</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>595</ViolationID>
            <ID>595</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>598</ID>
          <Line>7</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>        public string UserName { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>598</ViolationID>
            <ID>598</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>601</ID>
          <Line>9</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>        public string FullName { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>601</ViolationID>
            <ID>601</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>603</ID>
          <Line>11</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>        public string ExternalId { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>603</ViolationID>
            <ID>603</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>604</ID>
          <Line>13</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>        public string Regional { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>604</ViolationID>
            <ID>604</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>606</ID>
          <Line>15</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>        public string Subregional { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>606</ViolationID>
            <ID>606</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>608</ID>
          <Line>17</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>        public IEnumerable&lt;int&gt; RoleIds { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>608</ViolationID>
            <ID>608</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>610</ID>
          <Line>19</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>        public IEnumerable&lt;bool&gt; UserActiveStatus { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>610</ViolationID>
            <ID>610</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>614</ID>
          <Line>23</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>        public void Sanitize()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>614</ViolationID>
            <ID>614</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>617</ID>
          <Line>34</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>        private static string Sanitize(string text)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>617</ViolationID>
            <ID>617</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>620</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>620</ViolationID>
            <ID>620</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>628</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>628</ViolationID>
            <ID>628</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>629</ID>
          <Line>25</Line>
          <Message>The call to UserName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>            UserName = Sanitize(UserName);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>629</ViolationID>
            <ID>629</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>630</ID>
          <Line>26</Line>
          <Message>The call to FullName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>            FullName = Sanitize(FullName);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>630</ViolationID>
            <ID>630</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>632</ID>
          <Line>27</Line>
          <Message>The call to ExternalId must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>            ExternalId = Sanitize(ExternalId);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>632</ViolationID>
            <ID>632</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>634</ID>
          <Line>28</Line>
          <Message>The call to Regional must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>            Regional = Sanitize(Regional);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>634</ViolationID>
            <ID>634</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>636</ID>
          <Line>29</Line>
          <Message>The call to Subregional must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>            Subregional = Sanitize(Subregional);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>636</ViolationID>
            <ID>636</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>637</ID>
          <Line>30</Line>
          <Message>The call to RoleIds must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>            RoleIds = RoleIds ?? new List&lt;int&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>637</ViolationID>
            <ID>637</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>639</ID>
          <Line>31</Line>
          <Message>The call to UserActiveStatus must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>67</SourceCodeFileID>
          <SourceCodeLine>            UserActiveStatus = UserActiveStatus ?? new List&lt;bool&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>639</ViolationID>
            <ID>639</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>68</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\UserPasswordHistory.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>UserPasswordHistory.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>631</ID>
          <Line>13</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>68</SourceCodeFileID>
          <SourceCodeLine>        public UserPasswordHistory()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>631</ViolationID>
            <ID>631</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>633</ID>
          <Line>17</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>68</SourceCodeFileID>
          <SourceCodeLine>        public UserPasswordHistory(User user)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>633</ViolationID>
            <ID>633</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>635</ID>
          <Line>29</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>68</SourceCodeFileID>
          <SourceCodeLine>        public int UserId { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>635</ViolationID>
            <ID>635</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>638</ID>
          <Line>36</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>68</SourceCodeFileID>
          <SourceCodeLine>        public string Password { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>638</ViolationID>
            <ID>638</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>640</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>68</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel.DataAnnotations;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>640</ViolationID>
            <ID>640</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>642</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>68</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel.DataAnnotations;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>642</ViolationID>
            <ID>642</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>643</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>68</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>643</ViolationID>
            <ID>643</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>645</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>68</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>645</ViolationID>
            <ID>645</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>648</ID>
          <Line>19</Line>
          <Message>The call to UserId must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>68</SourceCodeFileID>
          <SourceCodeLine>            UserId = user.Id;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>648</ViolationID>
            <ID>648</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>649</ID>
          <Line>20</Line>
          <Message>The call to Password must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>68</SourceCodeFileID>
          <SourceCodeLine>            Password = user.Password;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>649</ViolationID>
            <ID>649</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>69</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\UserPasswordResetToken.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>UserPasswordResetToken.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>641</ID>
          <Line>14</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>        private bool m_expired;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>641</ViolationID>
            <ID>641</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>644</ID>
          <Line>22</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>        public int UserId { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>644</ViolationID>
            <ID>644</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>646</ID>
          <Line>28</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>        public Guid Code { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>646</ViolationID>
            <ID>646</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>647</ID>
          <Line>33</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets a value indicating whether</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>        public bool Sent { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>647</ViolationID>
            <ID>647</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>650</ID>
          <Line>38</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets a value indicating whether</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>        public bool Used { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>650</ViolationID>
            <ID>650</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>651</ID>
          <Line>43</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets a value indicating whether</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>        public bool NotifiedUse { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>651</ViolationID>
            <ID>651</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>652</ID>
          <Line>48</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets a value indicating whether</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>        public bool Expired</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>652</ViolationID>
            <ID>652</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>653</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>653</ViolationID>
            <ID>653</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>655</ID>
          <Line>14</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>        private bool m_expired;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>655</ViolationID>
            <ID>655</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>656</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>656</ViolationID>
            <ID>656</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>657</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel.DataAnnotations;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>657</ViolationID>
            <ID>657</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>658</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>658</ViolationID>
            <ID>658</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>660</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>660</ViolationID>
            <ID>660</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>662</ID>
          <Line>52</Line>
          <Message>The call to m_expired must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>                return m_expired || Created.Date.AddMinutes(UserPasswordService.PasswordResetTokenMinutesTimeout) &lt; DateTime.UtcNow;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>662</ViolationID>
            <ID>662</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>664</ID>
          <Line>57</Line>
          <Message>The call to m_expired must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>69</SourceCodeFileID>
          <SourceCodeLine>                m_expired = value;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>664</ViolationID>
            <ID>664</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>70</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\UserPasswordService.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>UserPasswordService.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>699</ID>
          <Line>22</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;UserPasswordResetToken&gt; m_tokenRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>699</ViolationID>
            <ID>699</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>700</ID>
          <Line>23</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;UserPasswordHistory&gt; m_historyRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>700</ViolationID>
            <ID>700</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>702</ID>
          <Line>24</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>        private IUserService m_userService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>702</ViolationID>
            <ID>702</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>704</ID>
          <Line>29</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>        static UserPasswordService()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>704</ViolationID>
            <ID>704</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>707</ID>
          <Line>41</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the UserPasswordService class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>        public UserPasswordService(IRepository&lt;UserPasswordResetToken&gt; tokenRepository, IRepository&lt;UserPasswordHistory&gt; historyRepository, IUserService userService)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>707</ViolationID>
            <ID>707</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>710</ID>
          <Line>53</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>        public static int PasswordResetTokenMinutesTimeout { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>710</ViolationID>
            <ID>710</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>714</ID>
          <Line>58</Line>
          <Message>The property's documentation summary text must begin with: Gets or sets</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>        public static int PasswordExpirationDays { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1623</CheckId>
            <Description>Validates that a property's summary description text begins with the correct syntax, depending upon whether the property exposes get or set accessors.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustMatchAccessors</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>714</ViolationID>
            <ID>714</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>725</ID>
          <Line>241</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>        private void ChangePassword(User user, string newPassword)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>725</ViolationID>
            <ID>725</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>730</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>730</ViolationID>
            <ID>730</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>739</ID>
          <Line>28</Line>
          <Message>A Code Analysis suppression must contain a non-empty justification describing the reason for the suppression.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>        [SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]</SourceCodeLine>
          <Rules>
            <CheckId>SA1404</CheckId>
            <Description>Validates that a Code Analysis suppression contains a justifiction describing the reason for the suppression.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeAnalysisSuppressionMustHaveJustification</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>739</ViolationID>
            <ID>739</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>743</ID>
          <Line>22</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;UserPasswordResetToken&gt; m_tokenRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>743</ViolationID>
            <ID>743</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>746</ID>
          <Line>23</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;UserPasswordHistory&gt; m_historyRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>746</ViolationID>
            <ID>746</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>751</ID>
          <Line>24</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>        private IUserService m_userService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>751</ViolationID>
            <ID>751</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>761</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>761</ViolationID>
            <ID>761</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>763</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>763</ViolationID>
            <ID>763</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>765</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>765</ViolationID>
            <ID>765</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>768</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>768</ViolationID>
            <ID>768</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>772</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>772</ViolationID>
            <ID>772</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>778</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>using System.Security.Cryptography;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>778</ViolationID>
            <ID>778</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>781</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>using System.Text;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>781</ViolationID>
            <ID>781</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>783</ID>
          <Line>8</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>783</ViolationID>
            <ID>783</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>786</ID>
          <Line>9</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts.Specs;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>786</ViolationID>
            <ID>786</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>789</ID>
          <Line>10</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>789</ViolationID>
            <ID>789</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>792</ID>
          <Line>11</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>792</ViolationID>
            <ID>792</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>796</ID>
          <Line>12</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>796</ViolationID>
            <ID>796</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>805</ID>
          <Line>43</Line>
          <Message>The call to m_tokenRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            m_tokenRepository = tokenRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>805</ViolationID>
            <ID>805</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>806</ID>
          <Line>44</Line>
          <Message>The call to m_historyRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            m_historyRepository = historyRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>806</ViolationID>
            <ID>806</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>809</ID>
          <Line>45</Line>
          <Message>The call to m_userService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            m_userService = userService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>809</ViolationID>
            <ID>809</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>811</ID>
          <Line>71</Line>
          <Message>The call to m_userService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            var user = m_userService.GetByEmail(email);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>811</ViolationID>
            <ID>811</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>813</ID>
          <Line>78</Line>
          <Message>The call to m_tokenRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            var oldToken = m_tokenRepository.FindFirst(t =&gt; t.UserId.Equals(user.Id));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>813</ViolationID>
            <ID>813</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>816</ID>
          <Line>82</Line>
          <Message>The call to m_tokenRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>                m_tokenRepository.Remove(oldToken);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>816</ViolationID>
            <ID>816</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>819</ID>
          <Line>91</Line>
          <Message>The call to m_tokenRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            m_tokenRepository.Add(newToken);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>819</ViolationID>
            <ID>819</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>823</ID>
          <Line>109</Line>
          <Message>The call to m_tokenRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            var token = m_tokenRepository.FindFirst(t =&gt; t.Code.Equals(tokenCode) &amp;&amp; !t.Used);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>823</ViolationID>
            <ID>823</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>827</ID>
          <Line>116</Line>
          <Message>The call to m_userService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            var user = m_userService.GetById(token.UserId);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>827</ViolationID>
            <ID>827</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>830</ID>
          <Line>118</Line>
          <Message>The call to ChangePassword must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            ChangePassword(user, newPassword);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>830</ViolationID>
            <ID>830</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>833</ID>
          <Line>121</Line>
          <Message>The call to m_tokenRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            m_tokenRepository[token.Id] = token;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>833</ViolationID>
            <ID>833</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>836</ID>
          <Line>134</Line>
          <Message>The call to m_userService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            var user = m_userService.GetById(userId);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>836</ViolationID>
            <ID>836</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>841</ID>
          <Line>136</Line>
          <Message>The call to Encrypt must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            if (!String.Equals(Encrypt(oldPassword), user.Password, StringComparison.Ordinal))</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>841</ViolationID>
            <ID>841</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>845</ID>
          <Line>141</Line>
          <Message>The call to ChangePassword must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            ChangePassword(user, newPassword);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>845</ViolationID>
            <ID>845</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>849</ID>
          <Line>150</Line>
          <Message>The call to m_tokenRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            return m_tokenRepository.FindAll(f =&gt; !f.Sent &amp;&amp; !f.Used &amp;&amp; !f.Expired);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>849</ViolationID>
            <ID>849</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>853</ID>
          <Line>159</Line>
          <Message>The call to m_tokenRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            var token = m_tokenRepository.FindBy(id);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>853</ViolationID>
            <ID>853</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>856</ID>
          <Line>164</Line>
          <Message>The call to m_tokenRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>                m_tokenRepository[id] = token;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>856</ViolationID>
            <ID>856</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>860</ID>
          <Line>174</Line>
          <Message>The call to m_tokenRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            return m_tokenRepository.FindAll(f =&gt; f.Used &amp;&amp; !f.NotifiedUse);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>860</ViolationID>
            <ID>860</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>864</ID>
          <Line>183</Line>
          <Message>The call to m_tokenRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            var token = m_tokenRepository.FindBy(id);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>864</ViolationID>
            <ID>864</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>869</ID>
          <Line>188</Line>
          <Message>The call to m_tokenRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>                m_tokenRepository[id] = token;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>869</ViolationID>
            <ID>869</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>874</ID>
          <Line>222</Line>
          <Message>The call to GetLatestPasswordHistories must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            var lastPassword = GetLatestPasswordHistories(userId, 1).FirstOrDefault();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>874</ViolationID>
            <ID>874</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>878</ID>
          <Line>236</Line>
          <Message>The call to m_historyRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            return m_historyRepository.FindAllDescending(0, limit, f =&gt; f.UserId == userId, o =&gt; o.Created.Date);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>878</ViolationID>
            <ID>878</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>882</ID>
          <Line>248</Line>
          <Message>The call to Encrypt must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            var encryptedPassword = Encrypt(newPassword);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>882</ViolationID>
            <ID>882</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>885</ID>
          <Line>251</Line>
          <Message>The call to m_userService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            m_userService.Save(user);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>885</ViolationID>
            <ID>885</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>887</ID>
          <Line>252</Line>
          <Message>The call to m_historyRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>70</SourceCodeFileID>
          <SourceCodeLine>            m_historyRepository.Add(new UserPasswordHistory(user));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>887</ViolationID>
            <ID>887</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>71</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Accounts\UserService.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>UserService.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>659</ID>
          <Line>47</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>        private IRoleService m_roleService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>659</ViolationID>
            <ID>659</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>661</ID>
          <Line>57</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the UserService class.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>        public UserService(IRepository&lt;User&gt; userRepository, IUnitOfWork unitOfWork, IRoleService roleService)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>661</ViolationID>
            <ID>661</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>663</ID>
          <Line>73</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>        public FilterResult&lt;User&gt; GetByFilter(int offset, int limit, UserFilter filter)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>663</ViolationID>
            <ID>663</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>665</ID>
          <Line>106</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>        public FilterResult&lt;User&gt; GetByFullName(int offset, int limit, string filter)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>665</ViolationID>
            <ID>665</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>666</ID>
          <Line>177</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>        public override FilterResult&lt;User&gt; Get(int offset, int limit, Expression&lt;Func&lt;User, bool&gt;&gt; filter)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>666</ViolationID>
            <ID>666</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>667</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>667</ViolationID>
            <ID>667</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>669</ID>
          <Line>47</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>        private IRoleService m_roleService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>669</ViolationID>
            <ID>669</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>673</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>673</ViolationID>
            <ID>673</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>675</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>675</ViolationID>
            <ID>675</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>677</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>677</ViolationID>
            <ID>677</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>679</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using System.Linq.Expressions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>679</ViolationID>
            <ID>679</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>681</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using Escrutinador.Extensions.KissSpecifications;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>681</ViolationID>
            <ID>681</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>683</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>683</ViolationID>
            <ID>683</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>685</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>685</ViolationID>
            <ID>685</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>687</ID>
          <Line>8</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications.Commons;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>687</ViolationID>
            <ID>687</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>689</ID>
          <Line>9</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts.Specs;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>689</ViolationID>
            <ID>689</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>690</ID>
          <Line>10</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Commons.Specs;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>690</ViolationID>
            <ID>690</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>692</ID>
          <Line>11</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>692</ViolationID>
            <ID>692</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>694</ID>
          <Line>12</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>694</ViolationID>
            <ID>694</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>695</ID>
          <Line>13</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Runtime;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>695</ViolationID>
            <ID>695</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>697</ID>
          <Line>14</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>697</ViolationID>
            <ID>697</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>713</ID>
          <Line>60</Line>
          <Message>The call to m_roleService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>            m_roleService = roleService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>713</ViolationID>
            <ID>713</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>715</ID>
          <Line>119</Line>
          <Message>The call to m_roleService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>            entity.Role = m_roleService.GetById(entity.RoleId);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>715</ViolationID>
            <ID>715</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>716</ID>
          <Line>127</Line>
          <Message>The call to m_roleService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>            entity.Role = m_roleService.GetById(entity.Role.Id);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>716</ViolationID>
            <ID>716</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>717</ID>
          <Line>199</Line>
          <Message>The call to GetByEmail must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>            var user = GetByEmail(email);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>717</ViolationID>
            <ID>717</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>719</ID>
          <Line>218</Line>
          <Message>The call to GetByFullName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>                new MustHaveUniqueTextSpecification&lt;User&gt;(t =&gt; t.FullName, t =&gt; GetByFullName(t)),</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>719</ViolationID>
            <ID>719</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>721</ID>
          <Line>219</Line>
          <Message>The call to GetByUserName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>                new MustHaveUniqueTextSpecification&lt;User&gt;(t =&gt; t.UserName, t =&gt; GetByUserName(t)),</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>721</ViolationID>
            <ID>721</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>724</ID>
          <Line>220</Line>
          <Message>The call to GetByEmail must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>                new MustHaveUniqueValueSpec&lt;User, string&gt;(t =&gt; t.Email, t =&gt; GetByEmail(t)),</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>724</ViolationID>
            <ID>724</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>728</ID>
          <Line>221</Line>
          <Message>The call to GetByExternalUserId must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>                new MustHaveUniqueValueSpec&lt;User, string&gt;(t =&gt; t.ExternalUserId, t =&gt; GetByExternalUserId(t)),</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>728</ViolationID>
            <ID>728</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>731</ID>
          <Line>223</Line>
          <Message>The call to m_roleService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>71</SourceCodeFileID>
          <SourceCodeLine>                new MustExistsSpecification&lt;User, Role&gt;(t =&gt; t.Role, (r) =&gt; r != null &amp;&amp; m_roleService.GetById(r.Id) != null)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>731</ViolationID>
            <ID>731</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>72</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain\Properties\AssemblyInfo.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AssemblyInfo.cs</Name>
        <CodeProjectID>4</CodeProjectID>
        <Violations>
          <ID>654</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>72</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>654</ViolationID>
            <ID>654</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
    </Projects>
    <Projects>
      <ID>5</ID>
      <Location>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain.UnitTests\SampleProject.Domain.UnitTests.csproj</Location>
      <Name>SampleProject.Domain.UnitTests</Name>
      <SolutionID>0</SolutionID>
      <SourceCodeFiles>
        <ID>73</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain.UnitTests\Accounts\PermissionServiceTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>PermissionServiceTest.cs</Name>
        <CodeProjectID>5</CodeProjectID>
        <Violations>
          <ID>701</ID>
          <Line>12</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>    public class PermissionServiceTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>701</ViolationID>
            <ID>701</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>703</ID>
          <Line>15</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        private PermissionService m_target;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>703</ViolationID>
            <ID>703</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>705</ID>
          <Line>16</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        private MemoryUnitOfWork m_unitOfWork;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>705</ViolationID>
            <ID>705</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>706</ID>
          <Line>17</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        private MemoryPermissionRepository m_repository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>706</ViolationID>
            <ID>706</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>708</ID>
          <Line>21</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        public void InitializeTest()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>708</ViolationID>
            <ID>708</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>711</ID>
          <Line>37</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        public void Save_PermissionNull_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>711</ViolationID>
            <ID>711</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>718</ID>
          <Line>46</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        public void Save_PermissionInvalid_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>718</ViolationID>
            <ID>718</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>720</ID>
          <Line>60</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        public void Save_NewPermissionValid_Created()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>720</ViolationID>
            <ID>720</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>723</ID>
          <Line>72</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        public void Save_NewPermissionValidWithExistingControllerNameAndActionName_IdInstanceUpdated()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>723</ViolationID>
            <ID>723</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>727</ID>
          <Line>84</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        public void Save_OldPermissionValid_Updated()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>727</ViolationID>
            <ID>727</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>732</ID>
          <Line>98</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        public void GetAllPermissions_NoArgs_AllPermissions()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>732</ViolationID>
            <ID>732</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>734</ID>
          <Line>105</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        public void RemovePermission_NotExistId_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>734</ViolationID>
            <ID>734</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>735</ID>
          <Line>114</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        public void RemovePermission_ExistsId_Deleted()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>735</ViolationID>
            <ID>735</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>736</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>736</ViolationID>
            <ID>736</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>745</ID>
          <Line>15</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        private PermissionService m_target;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>745</ViolationID>
            <ID>745</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>749</ID>
          <Line>16</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        private MemoryUnitOfWork m_unitOfWork;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>749</ViolationID>
            <ID>749</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>753</ID>
          <Line>17</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>        private MemoryPermissionRepository m_repository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>753</ViolationID>
            <ID>753</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>760</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>760</ViolationID>
            <ID>760</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>766</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>766</ViolationID>
            <ID>766</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>770</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>770</ViolationID>
            <ID>770</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>773</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Repositories.Memory;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>773</ViolationID>
            <ID>773</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>776</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>776</ViolationID>
            <ID>776</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>780</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>780</ViolationID>
            <ID>780</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>782</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>using TestSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>782</ViolationID>
            <ID>782</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>785</ID>
          <Line>3</Line>
          <Message>Using directives must be sorted alphabetically by the namespaces.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1210</CheckId>
            <Description>Verifies that using directives are sorted alphabetically by the namespaces.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBeOrderedAlphabeticallyByNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Using Directives</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>785</ViolationID>
            <ID>785</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>788</ID>
          <Line>4</Line>
          <Message>Using directives must be sorted alphabetically by the namespaces.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Repositories.Memory;</SourceCodeLine>
          <Rules>
            <CheckId>SA1210</CheckId>
            <Description>Verifies that using directives are sorted alphabetically by the namespaces.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBeOrderedAlphabeticallyByNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Using Directives</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>788</ViolationID>
            <ID>788</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>793</ID>
          <Line>39</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new ArgumentNullException("entity"), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>793</ViolationID>
            <ID>793</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>795</ID>
          <Line>39</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new ArgumentNullException("entity"), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>795</ViolationID>
            <ID>795</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>799</ID>
          <Line>50</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(typeof(SpecificationNotSatisfiedException), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>799</ViolationID>
            <ID>799</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>802</ID>
          <Line>50</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(typeof(SpecificationNotSatisfiedException), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>802</ViolationID>
            <ID>802</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>803</ID>
          <Line>107</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(typeof(SpecificationNotSatisfiedException), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>803</ViolationID>
            <ID>803</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>804</ID>
          <Line>107</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(typeof(SpecificationNotSatisfiedException), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>804</ViolationID>
            <ID>804</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>807</ID>
          <Line>23</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork = new MemoryUnitOfWork();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>807</ViolationID>
            <ID>807</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>808</ID>
          <Line>24</Line>
          <Message>The call to m_repository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            m_repository = new MemoryPermissionRepository(m_unitOfWork);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>808</ViolationID>
            <ID>808</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>810</ID>
          <Line>28</Line>
          <Message>The call to m_repository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>                m_repository.Add(new Permission() { ActionName = "Action " + i, ControllerName = "Controller" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>810</ViolationID>
            <ID>810</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>812</ID>
          <Line>31</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>812</ViolationID>
            <ID>812</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>815</ID>
          <Line>33</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            m_target = new PermissionService(m_repository, m_unitOfWork);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>815</ViolationID>
            <ID>815</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>818</ID>
          <Line>56</Line>
          <Message>The call to m_repository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(5, m_repository.CountAll());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>818</ViolationID>
            <ID>818</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>821</ID>
          <Line>64</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            m_target.Save(permission);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>821</ViolationID>
            <ID>821</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>824</ID>
          <Line>65</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>824</ViolationID>
            <ID>824</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>826</ID>
          <Line>68</Line>
          <Message>The call to m_repository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(6, m_repository.CountAll());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>826</ViolationID>
            <ID>826</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>828</ID>
          <Line>76</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            m_target.Save(permission);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>828</ViolationID>
            <ID>828</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>831</ID>
          <Line>77</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>831</ViolationID>
            <ID>831</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>834</ID>
          <Line>80</Line>
          <Message>The call to m_repository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(5, m_repository.CountAll());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>834</ViolationID>
            <ID>834</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>837</ID>
          <Line>88</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            m_target.Save(permission);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>837</ViolationID>
            <ID>837</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>840</ID>
          <Line>89</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>840</ViolationID>
            <ID>840</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>844</ID>
          <Line>92</Line>
          <Message>The call to m_repository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(5, m_repository.CountAll());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>844</ViolationID>
            <ID>844</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>848</ID>
          <Line>93</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual("Permission 4 - UPDATED", m_target.GetById(3).ActionName);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>848</ViolationID>
            <ID>848</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>854</ID>
          <Line>94</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual("Descrição 4 - UPDATED", m_target.GetById(3).ControllerName);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>854</ViolationID>
            <ID>854</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>857</ID>
          <Line>100</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            var actual = m_target.Get(0, int.MaxValue, f =&gt; true);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>857</ViolationID>
            <ID>857</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>861</ID>
          <Line>116</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            m_target.Remove(2);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>861</ViolationID>
            <ID>861</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>865</ID>
          <Line>117</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            m_target.Remove(4);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>865</ViolationID>
            <ID>865</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>868</ID>
          <Line>118</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>868</ViolationID>
            <ID>868</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>871</ID>
          <Line>120</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            Assert.IsNull(m_target.GetById(2));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>871</ViolationID>
            <ID>871</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>875</ID>
          <Line>121</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            Assert.IsNull(m_target.GetById(4));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>875</ViolationID>
            <ID>875</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>880</ID>
          <Line>48</Line>
          <Message>Use string.Empty rather than "".</Message>
          <SourceCodeFileID>73</SourceCodeFileID>
          <SourceCodeLine>            var permission = new Permission() { ActionName = "", ControllerName = "" };</SourceCodeLine>
          <Rules>
            <CheckId>SA1122</CheckId>
            <Description>Enforces the use of the string.Empty property for empty strings.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseStringEmptyForEmptyStrings</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Strings</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>880</ViolationID>
            <ID>880</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>74</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain.UnitTests\Accounts\RoleServiceTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>RoleServiceTest.cs</Name>
        <CodeProjectID>5</CodeProjectID>
        <Violations>
          <ID>668</ID>
          <Line>18</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>    public class RoleServiceTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>668</ViolationID>
            <ID>668</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>670</ID>
          <Line>21</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        private RoleService m_target;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>670</ViolationID>
            <ID>670</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>671</ID>
          <Line>22</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;Role&gt; m_roleRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>671</ViolationID>
            <ID>671</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>672</ID>
          <Line>23</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        private IUnitOfWork m_unitOfWork;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>672</ViolationID>
            <ID>672</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>674</ID>
          <Line>28</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        public void InitializeTest()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>674</ViolationID>
            <ID>674</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>676</ID>
          <Line>43</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        public void Save_NullRole_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>676</ViolationID>
            <ID>676</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>678</ID>
          <Line>52</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        public void Save_New_Created()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>678</ViolationID>
            <ID>678</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>680</ID>
          <Line>62</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        public void Save_ExistsWithSameName_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>680</ViolationID>
            <ID>680</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>682</ID>
          <Line>74</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        public void Save_Old_Updated()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>682</ViolationID>
            <ID>682</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>684</ID>
          <Line>97</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        public void Get_NoArgs_AllRoles()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>684</ViolationID>
            <ID>684</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>686</ID>
          <Line>107</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        public void GetById_Id_Role()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>686</ViolationID>
            <ID>686</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>688</ID>
          <Line>120</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        public void RemoveRole_Role_Removed()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>688</ViolationID>
            <ID>688</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>691</ID>
          <Line>136</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        public void GetByName_Name_Filtered()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>691</ViolationID>
            <ID>691</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>693</ID>
          <Line>148</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        public void GetByFilter_OffsetLimitAndFilter_FilterResult()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>693</ViolationID>
            <ID>693</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>696</ID>
          <Line>195</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        private Expression&lt;Func&lt;Role, bool&gt;&gt; GetRoleFilterQuery(RoleFilter filter)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>696</ViolationID>
            <ID>696</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>698</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>698</ViolationID>
            <ID>698</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>709</ID>
          <Line>129</Line>
          <Message>The code must not contain multiple blank lines in a row.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine />
          <Rules>
            <CheckId>SA1507</CheckId>
            <Description>Validates that the code does not contain multiple blank lines in a row.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>CodeMustNotContainMultipleBlankLinesInARow</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>709</ViolationID>
            <ID>709</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>712</ID>
          <Line>133</Line>
          <Message>A closing curly bracket must not be preceded by a blank line.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        }</SourceCodeLine>
          <Rules>
            <CheckId>SA1508</CheckId>
            <Description>Validates that a closing curly bracket in a bracketed statement or element is not preceded by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketsMustNotBePrecededByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>712</ViolationID>
            <ID>712</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>722</ID>
          <Line>21</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        private RoleService m_target;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>722</ViolationID>
            <ID>722</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>726</ID>
          <Line>22</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;Role&gt; m_roleRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>726</ViolationID>
            <ID>726</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>729</ID>
          <Line>23</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>        private IUnitOfWork m_unitOfWork;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>729</ViolationID>
            <ID>729</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>733</ID>
          <Line>82</Line>
          <Message>The variable name 'toUpdated' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            var toUpdated = role.Clone() as Role;</SourceCodeLine>
          <Rules>
            <CheckId>SA1305</CheckId>
            <Description>Validates that a variable name is not prepended with lower-case characters matching the signature of Hungarian notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FieldNamesMustNotUseHungarianNotation</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>733</ViolationID>
            <ID>733</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>737</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>737</ViolationID>
            <ID>737</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>738</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>738</ViolationID>
            <ID>738</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>740</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>740</ViolationID>
            <ID>740</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>741</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>741</ViolationID>
            <ID>741</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>742</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>742</ViolationID>
            <ID>742</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>744</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>744</ViolationID>
            <ID>744</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>748</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Repositories.Memory;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>748</ViolationID>
            <ID>748</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>752</ID>
          <Line>8</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>752</ViolationID>
            <ID>752</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>755</ID>
          <Line>9</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using Rhino.Mocks;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>755</ViolationID>
            <ID>755</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>757</ID>
          <Line>10</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>757</ViolationID>
            <ID>757</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>758</ID>
          <Line>11</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using TestSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>758</ViolationID>
            <ID>758</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>762</ID>
          <Line>12</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using System.Linq.Expressions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>762</ViolationID>
            <ID>762</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>764</ID>
          <Line>13</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Runtime;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>764</ViolationID>
            <ID>764</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>767</ID>
          <Line>12</Line>
          <Message>System using directives must be placed before all other using directives.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using System.Linq.Expressions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1208</CheckId>
            <Description>Verifies that all using directives within the System namespace are placed before all other using directives.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Using Directives</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>767</ViolationID>
            <ID>767</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>771</ID>
          <Line>5</Line>
          <Message>Using directives must be sorted alphabetically by the namespaces.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1210</CheckId>
            <Description>Verifies that using directives are sorted alphabetically by the namespaces.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBeOrderedAlphabeticallyByNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Using Directives</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>771</ViolationID>
            <ID>771</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>775</ID>
          <Line>6</Line>
          <Message>Using directives must be sorted alphabetically by the namespaces.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1210</CheckId>
            <Description>Verifies that using directives are sorted alphabetically by the namespaces.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBeOrderedAlphabeticallyByNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Using Directives</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>775</ViolationID>
            <ID>775</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>779</ID>
          <Line>7</Line>
          <Message>Using directives must be sorted alphabetically by the namespaces.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Repositories.Memory;</SourceCodeLine>
          <Rules>
            <CheckId>SA1210</CheckId>
            <Description>Verifies that using directives are sorted alphabetically by the namespaces.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBeOrderedAlphabeticallyByNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Using Directives</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>779</ViolationID>
            <ID>779</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>784</ID>
          <Line>45</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new ArgumentNullException("entity"), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>784</ViolationID>
            <ID>784</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>787</ID>
          <Line>45</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new ArgumentNullException("entity"), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>787</ViolationID>
            <ID>787</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>797</ID>
          <Line>67</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new SpecificationNotSatisfiedException(Texts.ThereIsOtherEntityWithSameName.With("papel", "TESTE")), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>797</ViolationID>
            <ID>797</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>801</ID>
          <Line>67</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new SpecificationNotSatisfiedException(Texts.ThereIsOtherEntityWithSameName.With("papel", "TESTE")), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>801</ViolationID>
            <ID>801</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>814</ID>
          <Line>30</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork = new MemoryUnitOfWork();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>814</ViolationID>
            <ID>814</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>817</ID>
          <Line>31</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_roleRepository = new MemoryRoleRepository(m_unitOfWork);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>817</ViolationID>
            <ID>817</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>820</ID>
          <Line>35</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>820</ViolationID>
            <ID>820</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>822</ID>
          <Line>37</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_target = new RoleService(m_roleRepository, m_unitOfWork, permissionService);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>822</ViolationID>
            <ID>822</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>825</ID>
          <Line>54</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_target.Save(new Role() { Name = "TESTE", Description = "4d5sf4ad32423%$@", Permissions = new List&lt;Permission&gt;() { new Permission() } });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>825</ViolationID>
            <ID>825</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>829</ID>
          <Line>55</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(0, m_roleRepository.CountAll());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>829</ViolationID>
            <ID>829</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>832</ID>
          <Line>57</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>832</ViolationID>
            <ID>832</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>835</ID>
          <Line>58</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(1, m_roleRepository.CountAll());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>835</ViolationID>
            <ID>835</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>838</ID>
          <Line>64</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_target.Save(new Role() { Name = "TESTE", Description = "4d5sf4ad32423%$@", Permissions = new List&lt;Permission&gt;() { new Permission() } });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>838</ViolationID>
            <ID>838</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>842</ID>
          <Line>65</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>842</ViolationID>
            <ID>842</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>846</ID>
          <Line>76</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_target.Save(new Role() { Name = "TESTE", Description = "4d5sf4ad32423%$@", Permissions = new List&lt;Permission&gt;() { new Permission() } });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>846</ViolationID>
            <ID>846</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>850</ID>
          <Line>77</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>850</ViolationID>
            <ID>850</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>852</ID>
          <Line>78</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(1, m_roleRepository.CountAll());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>852</ViolationID>
            <ID>852</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>855</ID>
          <Line>80</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            var role = m_roleRepository.FindFirst() as Role;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>855</ViolationID>
            <ID>855</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>858</ID>
          <Line>86</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_target.Save(toUpdated);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>858</ViolationID>
            <ID>858</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>862</ID>
          <Line>87</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>862</ViolationID>
            <ID>862</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>866</ID>
          <Line>89</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(1, m_roleRepository.CountAll());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>866</ViolationID>
            <ID>866</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>870</ID>
          <Line>91</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            var updatedRole = m_roleRepository.FindFirst();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>870</ViolationID>
            <ID>870</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>873</ID>
          <Line>99</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(0, m_target.Get(0, int.MaxValue, f =&gt; true).TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>873</ViolationID>
            <ID>873</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>876</ID>
          <Line>100</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_roleRepository.Add(new Role());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>876</ViolationID>
            <ID>876</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>879</ID>
          <Line>101</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>879</ViolationID>
            <ID>879</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>883</ID>
          <Line>103</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(1, m_target.Get(0, int.MaxValue, f =&gt; true).TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>883</ViolationID>
            <ID>883</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>886</ID>
          <Line>109</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(0, m_target.Get(0, int.MaxValue, f =&gt; true).TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>886</ViolationID>
            <ID>886</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>888</ID>
          <Line>110</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_roleRepository.Add(new Role() { Name = "TEST1" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>888</ViolationID>
            <ID>888</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>890</ID>
          <Line>111</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_roleRepository.Add(new Role() { Name = "TEST2" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>890</ViolationID>
            <ID>890</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>891</ID>
          <Line>112</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>891</ViolationID>
            <ID>891</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>893</ID>
          <Line>114</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            var expected = m_roleRepository.FindFirst(u =&gt; u.Name.Equals("TEST2"));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>893</ViolationID>
            <ID>893</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>894</ID>
          <Line>116</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(expected, m_target.GetById(expected.Id));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>894</ViolationID>
            <ID>894</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>896</ID>
          <Line>122</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_roleRepository.Add(new Role() { Name = "TEST1" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>896</ViolationID>
            <ID>896</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>897</ID>
          <Line>123</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_roleRepository.Add(new Role() { Name = "TEST2" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>897</ViolationID>
            <ID>897</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>899</ID>
          <Line>124</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>899</ViolationID>
            <ID>899</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>901</ID>
          <Line>126</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_target.Remove(2);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>901</ViolationID>
            <ID>901</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>906</ID>
          <Line>127</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>906</ViolationID>
            <ID>906</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>908</ID>
          <Line>130</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.IsNotNull(m_roleRepository.FindBy(1));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>908</ViolationID>
            <ID>908</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>909</ID>
          <Line>131</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.IsNull(m_roleRepository.FindBy(2));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>909</ViolationID>
            <ID>909</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>910</ID>
          <Line>138</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_roleRepository.Add(new Role() { Name = "TEST1" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>910</ViolationID>
            <ID>910</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>912</ID>
          <Line>139</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_roleRepository.Add(new Role() { Name = "TEST2" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>912</ViolationID>
            <ID>912</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>915</ID>
          <Line>140</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>915</ViolationID>
            <ID>915</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>917</ID>
          <Line>142</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(2, m_target.GetByName(0, int.MaxValue, "TEST").TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>917</ViolationID>
            <ID>917</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>920</ID>
          <Line>143</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(1, m_target.GetByName(0, int.MaxValue, "TEST1").TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>920</ViolationID>
            <ID>920</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>923</ID>
          <Line>144</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual("TEST1", m_target.GetByName("TEST1").Name);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>923</ViolationID>
            <ID>923</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>926</ID>
          <Line>150</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_roleRepository.Add(new Role() { Name = "TEST1", Description = "DESCR1" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>926</ViolationID>
            <ID>926</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>929</ID>
          <Line>151</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_roleRepository.Add(new Role() { Name = "TEST2", Description = "DESCR2" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>929</ViolationID>
            <ID>929</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>931</ID>
          <Line>152</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_roleRepository.Add(new Role() { Name = "TEST3", Description = "DESCR3" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>931</ViolationID>
            <ID>931</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>933</ID>
          <Line>153</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>933</ViolationID>
            <ID>933</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>935</ID>
          <Line>158</Line>
          <Message>The call to GetRoleFilterQuery must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            query = GetRoleFilterQuery(filter);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>935</ViolationID>
            <ID>935</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>936</ID>
          <Line>159</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(3, m_target.Get(0, int.MaxValue, query).TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>936</ViolationID>
            <ID>936</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>938</ID>
          <Line>168</Line>
          <Message>The call to GetRoleFilterQuery must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            query = GetRoleFilterQuery(filter);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>938</ViolationID>
            <ID>938</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>940</ID>
          <Line>169</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(1, m_target.Get(0, int.MaxValue, query).TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>940</ViolationID>
            <ID>940</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>941</ID>
          <Line>178</Line>
          <Message>The call to GetRoleFilterQuery must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            query = GetRoleFilterQuery(filter);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>941</ViolationID>
            <ID>941</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>942</ID>
          <Line>179</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(1, m_target.Get(0, int.MaxValue, query).TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>942</ViolationID>
            <ID>942</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>944</ID>
          <Line>189</Line>
          <Message>The call to GetRoleFilterQuery must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            query = GetRoleFilterQuery(filter);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>944</ViolationID>
            <ID>944</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>946</ID>
          <Line>190</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>74</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(0, m_target.Get(0, int.MaxValue, query).TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>946</ViolationID>
            <ID>946</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>75</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain.UnitTests\Accounts\RoleTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>RoleTest.cs</Name>
        <CodeProjectID>5</CodeProjectID>
        <Violations>
          <ID>747</ID>
          <Line>7</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>75</SourceCodeFileID>
          <SourceCodeLine>    public class RoleTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>747</ViolationID>
            <ID>747</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>750</ID>
          <Line>10</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>75</SourceCodeFileID>
          <SourceCodeLine>        public void Clone_Properties_PropertiesCloned()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>750</ViolationID>
            <ID>750</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>754</ID>
          <Line>28</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>75</SourceCodeFileID>
          <SourceCodeLine>        public void CanAccess_NoControlerActionPermission_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>754</ViolationID>
            <ID>754</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>756</ID>
          <Line>44</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>75</SourceCodeFileID>
          <SourceCodeLine>        public void CanAccess_ControlerActionPermission_True()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>756</ViolationID>
            <ID>756</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>759</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>75</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>759</ViolationID>
            <ID>759</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>769</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>75</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>769</ViolationID>
            <ID>769</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>774</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>75</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>774</ViolationID>
            <ID>774</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>777</ID>
          <Line>1</Line>
          <Message>Using directives must be sorted alphabetically by the namespaces.</Message>
          <SourceCodeFileID>75</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1210</CheckId>
            <Description>Verifies that using directives are sorted alphabetically by the namespaces.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBeOrderedAlphabeticallyByNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Using Directives</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>777</ViolationID>
            <ID>777</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>790</ID>
          <Line>34</Line>
          <Message>Invalid spacing around the closing curly bracket.</Message>
          <SourceCodeFileID>75</SourceCodeFileID>
          <SourceCodeLine>                    new Permission() { ControllerName = "C1", ActionName = "A1"},</SourceCodeLine>
          <Rules>
            <CheckId>SA1013</CheckId>
            <Description>Validates the spacing before and after a closing curly bracket.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketsMustBeSpacedCorrectly</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>790</ViolationID>
            <ID>790</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>791</ID>
          <Line>35</Line>
          <Message>Invalid spacing around the closing curly bracket.</Message>
          <SourceCodeFileID>75</SourceCodeFileID>
          <SourceCodeLine>                    new Permission() { ControllerName = "C1", ActionName = "A2"}</SourceCodeLine>
          <Rules>
            <CheckId>SA1013</CheckId>
            <Description>Validates the spacing before and after a closing curly bracket.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketsMustBeSpacedCorrectly</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>791</ViolationID>
            <ID>791</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>794</ID>
          <Line>50</Line>
          <Message>Invalid spacing around the closing curly bracket.</Message>
          <SourceCodeFileID>75</SourceCodeFileID>
          <SourceCodeLine>                    new Permission() { ControllerName = "C1", ActionName = "A1"},</SourceCodeLine>
          <Rules>
            <CheckId>SA1013</CheckId>
            <Description>Validates the spacing before and after a closing curly bracket.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketsMustBeSpacedCorrectly</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>794</ViolationID>
            <ID>794</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>798</ID>
          <Line>51</Line>
          <Message>Invalid spacing around the closing curly bracket.</Message>
          <SourceCodeFileID>75</SourceCodeFileID>
          <SourceCodeLine>                    new Permission() { ControllerName = "C1", ActionName = "A2"},</SourceCodeLine>
          <Rules>
            <CheckId>SA1013</CheckId>
            <Description>Validates the spacing before and after a closing curly bracket.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketsMustBeSpacedCorrectly</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>798</ViolationID>
            <ID>798</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>800</ID>
          <Line>52</Line>
          <Message>Invalid spacing around the closing curly bracket.</Message>
          <SourceCodeFileID>75</SourceCodeFileID>
          <SourceCodeLine>                    new Permission() { ControllerName = "C2", ActionName = "A3"}</SourceCodeLine>
          <Rules>
            <CheckId>SA1013</CheckId>
            <Description>Validates the spacing before and after a closing curly bracket.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketsMustBeSpacedCorrectly</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>800</ViolationID>
            <ID>800</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>76</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain.UnitTests\Accounts\Specs\PasswordMustBeStrongSpecTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>PasswordMustBeStrongSpecTest.cs</Name>
        <CodeProjectID>5</CodeProjectID>
        <Violations>
          <ID>839</ID>
          <Line>14</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>    public class PasswordMustBeStrongSpecTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>839</ViolationID>
            <ID>839</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>843</ID>
          <Line>17</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        private PasswordMustBeStrongSpec m_target;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>843</ViolationID>
            <ID>843</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>847</ID>
          <Line>18</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        private IUnitOfWork m_unitOfWork;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>847</ViolationID>
            <ID>847</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>851</ID>
          <Line>19</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        private IUserService m_userService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>851</ViolationID>
            <ID>851</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>859</ID>
          <Line>20</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;UserPasswordHistory&gt; m_historyRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>859</ViolationID>
            <ID>859</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>863</ID>
          <Line>21</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        private IUserPasswordService m_userPasswordService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>863</ViolationID>
            <ID>863</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>867</ID>
          <Line>26</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        public void InitializeTest()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>867</ViolationID>
            <ID>867</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>872</ID>
          <Line>43</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        public void IsSatisfiedBy_LessThan8Chars_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>872</ViolationID>
            <ID>872</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>877</ID>
          <Line>53</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        public void IsSatisfiedBy_NoUppercase_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>877</ViolationID>
            <ID>877</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>881</ID>
          <Line>60</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        public void IsSatisfiedBy_NoSpecialChar_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>881</ViolationID>
            <ID>881</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>884</ID>
          <Line>67</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        public void IsSatisfiedBy_NoNumber_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>884</ViolationID>
            <ID>884</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>889</ID>
          <Line>74</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        public void IsSatisfiedBy_EqualAnyLast20Passwords_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>889</ViolationID>
            <ID>889</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>892</ID>
          <Line>110</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        public void IsSatisfiedBy_IsStrong_True()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>892</ViolationID>
            <ID>892</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>895</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>895</ViolationID>
            <ID>895</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>904</ID>
          <Line>38</Line>
          <Message>A closing curly bracket must not be preceded by a blank line.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        }</SourceCodeLine>
          <Rules>
            <CheckId>SA1508</CheckId>
            <Description>Validates that a closing curly bracket in a bracketed statement or element is not preceded by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketsMustNotBePrecededByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>904</ViolationID>
            <ID>904</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>916</ID>
          <Line>17</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        private PasswordMustBeStrongSpec m_target;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>916</ViolationID>
            <ID>916</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>918</ID>
          <Line>18</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        private IUnitOfWork m_unitOfWork;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>918</ViolationID>
            <ID>918</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>921</ID>
          <Line>19</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        private IUserService m_userService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>921</ViolationID>
            <ID>921</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>925</ID>
          <Line>20</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;UserPasswordHistory&gt; m_historyRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>925</ViolationID>
            <ID>925</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>928</ID>
          <Line>21</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>76</SourceCodeFileID>
          <SourceCodeLine>        private IUserPasswordService m_userPasswordService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>928</ViolationID>
            <ID>928</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>77</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain.UnitTests\Accounts\Specs\UserCanBeRemovedSpecTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>UserCanBeRemovedSpecTest.cs</Name>
        <CodeProjectID>5</CodeProjectID>
        <Violations>
          <ID>898</ID>
          <Line>10</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>77</SourceCodeFileID>
          <SourceCodeLine>    public class UserCanBeRemovedSpecTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>898</ViolationID>
            <ID>898</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>900</ID>
          <Line>13</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>77</SourceCodeFileID>
          <SourceCodeLine>        public void IsSatisfiedBy_UserDoesNotExists_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>900</ViolationID>
            <ID>900</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>902</ID>
          <Line>21</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>77</SourceCodeFileID>
          <SourceCodeLine>        public void IsSatisfiedBy_UserExists_True()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>902</ViolationID>
            <ID>902</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>903</ID>
          <Line>28</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>77</SourceCodeFileID>
          <SourceCodeLine>        public void IsSatisfiedBy_UserIsAdmin_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>903</ViolationID>
            <ID>903</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>905</ID>
          <Line>36</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>77</SourceCodeFileID>
          <SourceCodeLine>        public void IsSatisfiedBy_UserIsBackgroundworkerUser_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>905</ViolationID>
            <ID>905</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>907</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>77</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>907</ViolationID>
            <ID>907</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>911</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>77</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>911</ViolationID>
            <ID>911</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>913</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>77</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>913</ViolationID>
            <ID>913</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>914</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>77</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>914</ViolationID>
            <ID>914</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>919</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>77</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts.Specs;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>919</ViolationID>
            <ID>919</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>922</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>77</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>922</ViolationID>
            <ID>922</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>78</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain.UnitTests\Accounts\UserPasswordServiceTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>UserPasswordServiceTest.cs</Name>
        <CodeProjectID>5</CodeProjectID>
        <Violations>
          <ID>924</ID>
          <Line>14</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>    public class UserPasswordServiceTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>924</ViolationID>
            <ID>924</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>927</ID>
          <Line>17</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        private UserPasswordService m_target;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>927</ViolationID>
            <ID>927</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>930</ID>
          <Line>18</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        private IUnitOfWork m_unitOfWork;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>930</ViolationID>
            <ID>930</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>932</ID>
          <Line>19</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;UserPasswordResetToken&gt; m_tokenRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>932</ViolationID>
            <ID>932</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>934</ID>
          <Line>20</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;UserPasswordHistory&gt; m_historyRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>934</ViolationID>
            <ID>934</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>937</ID>
          <Line>21</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        private IUserService m_userService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>937</ViolationID>
            <ID>937</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>939</ID>
          <Line>26</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void InitializeTest()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>939</ViolationID>
            <ID>939</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>943</ID>
          <Line>55</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void GeneratePasswordResetToken_Null_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>943</ViolationID>
            <ID>943</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>945</ID>
          <Line>64</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void GeneratePasswordResetToken_UserNotFound_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>945</ViolationID>
            <ID>945</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>947</ID>
          <Line>73</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void GeneratePasswordResetToken_ThereNoOtherTokenForUser_GenerateNewOne()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>947</ViolationID>
            <ID>947</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>948</ID>
          <Line>90</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void GeneratePasswordResetToken_ThereIsOtherTokenForUser_RemoveTheOldOneAndGenerateNewOne()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>948</ViolationID>
            <ID>948</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>949</ID>
          <Line>111</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void ResetPassword_InvalidTokenCode_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>949</ViolationID>
            <ID>949</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>950</ID>
          <Line>122</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void ResetPassword_TokenExpired_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>950</ViolationID>
            <ID>950</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>952</ID>
          <Line>133</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void ResetPassword_ArgsOk_PasswordChangedAndTokenUsed()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>952</ViolationID>
            <ID>952</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>955</ID>
          <Line>146</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void ChangePassword_OldPasswordDoesNotMatch_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>955</ViolationID>
            <ID>955</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>958</ID>
          <Line>155</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void ChangePassword_OldPasswordMatchByUserDisabeld_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>958</ViolationID>
            <ID>958</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>963</ID>
          <Line>170</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void ChangePassword_OldPasswordMatch_Changed()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>963</ViolationID>
            <ID>963</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>965</ID>
          <Line>184</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void ChangePassword_NewPasswordLessThan8Chars_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>965</ViolationID>
            <ID>965</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>967</ID>
          <Line>198</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void GetPasswordResetTokensNotSent_SomeNotSent_OnlyNotSent()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>967</ViolationID>
            <ID>967</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>971</ID>
          <Line>221</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void GetPasswordResetTokensUsedNotNotified_SomeNotNotified_OnlyNotNotified()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>971</ViolationID>
            <ID>971</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>974</ID>
          <Line>248</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void IsPasswordExpired_NotExpired_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>974</ViolationID>
            <ID>974</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>975</ID>
          <Line>260</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void IsPasswordExpired_Expired_True()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>975</ViolationID>
            <ID>975</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>977</ID>
          <Line>272</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        public void Encrypt_NotEncrypted_Encrypted()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>977</ViolationID>
            <ID>977</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>979</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>979</ViolationID>
            <ID>979</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>988</ID>
          <Line>17</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        private UserPasswordService m_target;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>988</ViolationID>
            <ID>988</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>991</ID>
          <Line>18</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        private IUnitOfWork m_unitOfWork;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>991</ViolationID>
            <ID>991</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>993</ID>
          <Line>19</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;UserPasswordResetToken&gt; m_tokenRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>993</ViolationID>
            <ID>993</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>994</ID>
          <Line>20</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;UserPasswordHistory&gt; m_historyRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>994</ViolationID>
            <ID>994</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>996</ID>
          <Line>21</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>78</SourceCodeFileID>
          <SourceCodeLine>        private IUserService m_userService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>996</ViolationID>
            <ID>996</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>79</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain.UnitTests\Accounts\UserServiceTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>UserServiceTest.cs</Name>
        <CodeProjectID>5</CodeProjectID>
        <Violations>
          <ID>951</ID>
          <Line>17</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>    public class UserServiceTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>951</ViolationID>
            <ID>951</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>953</ID>
          <Line>20</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        private UserService m_target;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>953</ViolationID>
            <ID>953</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>956</ID>
          <Line>21</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;User&gt; m_userRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>956</ViolationID>
            <ID>956</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>959</ID>
          <Line>22</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;Role&gt; m_roleRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>959</ViolationID>
            <ID>959</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>961</ID>
          <Line>23</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        private IRoleService m_roleService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>961</ViolationID>
            <ID>961</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>964</ID>
          <Line>24</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        private IUnitOfWork m_unitOfWork;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>964</ViolationID>
            <ID>964</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>966</ID>
          <Line>29</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void InitializeTest()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>966</ViolationID>
            <ID>966</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>968</ID>
          <Line>49</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void Save_NullUser_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>968</ViolationID>
            <ID>968</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>972</ID>
          <Line>58</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void Save_New_Created()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>972</ViolationID>
            <ID>972</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>976</ID>
          <Line>70</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void Save_ExistsUsername_Exception()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>976</ViolationID>
            <ID>976</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>980</ID>
          <Line>96</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void Save_Old_Updated()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>980</ViolationID>
            <ID>980</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>981</ID>
          <Line>118</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void GetByFilter_Filter_Users()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>981</ViolationID>
            <ID>981</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>984</ID>
          <Line>142</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void GetByFullName_Filter_Users()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>984</ViolationID>
            <ID>984</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>989</ID>
          <Line>162</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void Get_NoArgs_AllUsers()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>989</ViolationID>
            <ID>989</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>992</ID>
          <Line>172</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void GetUserById_Id_User()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>992</ViolationID>
            <ID>992</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>995</ID>
          <Line>185</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void GetByExternalUserId_ExternalUserId_User()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>995</ViolationID>
            <ID>995</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>997</ID>
          <Line>195</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void GetByUserName_UserName_User()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>997</ViolationID>
            <ID>997</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>998</ID>
          <Line>208</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void GetByEmail_Email_User()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>998</ViolationID>
            <ID>998</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1000</ID>
          <Line>221</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void RemoveUser_User_Removed()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1000</ViolationID>
            <ID>1000</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1002</ID>
          <Line>237</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void Count_Filter_Count()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1002</ViolationID>
            <ID>1002</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1004</ID>
          <Line>249</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void CanSendEmailNotificationTo_UserWithEmailNotFound_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1004</ViolationID>
            <ID>1004</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1006</ID>
          <Line>256</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void CanSendEmailNotificationTo_UserDisabled_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1006</ViolationID>
            <ID>1006</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1007</ID>
          <Line>267</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void CanSendEmailNotificationTo_RoleEmailNotificationDisabled_False()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1007</ViolationID>
            <ID>1007</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1008</ID>
          <Line>278</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        public void CanSendEmailNotificationTo_RoleEmailNotificationEnabled_True()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1008</ViolationID>
            <ID>1008</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1011</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1011</ViolationID>
            <ID>1011</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1018</ID>
          <Line>20</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        private UserService m_target;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1018</ViolationID>
            <ID>1018</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1019</ID>
          <Line>21</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;User&gt; m_userRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1019</ViolationID>
            <ID>1019</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1020</ID>
          <Line>22</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        private IRepository&lt;Role&gt; m_roleRepository;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1020</ViolationID>
            <ID>1020</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1022</ID>
          <Line>23</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        private IRoleService m_roleService;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1022</ViolationID>
            <ID>1022</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1024</ID>
          <Line>24</Line>
          <Message>Variable names must not start with 'm_'.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>        private IUnitOfWork m_unitOfWork;</SourceCodeLine>
          <Rules>
            <CheckId>SA1308</CheckId>
            <Description>Validates that the name of a member variable does not begin with the 'm_' syntax.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>VariableNamesMustNotBePrefixed</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1024</ViolationID>
            <ID>1024</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1027</ID>
          <Line>104</Line>
          <Message>The variable name 'toUpdated' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            var toUpdated = user.Clone() as User;</SourceCodeLine>
          <Rules>
            <CheckId>SA1305</CheckId>
            <Description>Validates that a variable name is not prepended with lower-case characters matching the signature of Hungarian notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FieldNamesMustNotUseHungarianNotation</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1027</ViolationID>
            <ID>1027</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1032</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1032</ViolationID>
            <ID>1032</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1034</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1034</ViolationID>
            <ID>1034</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1035</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using HelperSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1035</ViolationID>
            <ID>1035</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1036</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using KissSpecifications;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1036</ViolationID>
            <ID>1036</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1037</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1037</ViolationID>
            <ID>1037</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1039</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1039</ViolationID>
            <ID>1039</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1040</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Runtime;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1040</ViolationID>
            <ID>1040</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1041</ID>
          <Line>8</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Repositories.Memory;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1041</ViolationID>
            <ID>1041</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1042</ID>
          <Line>9</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1042</ViolationID>
            <ID>1042</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1043</ID>
          <Line>10</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using Rhino.Mocks;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1043</ViolationID>
            <ID>1043</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1044</ID>
          <Line>11</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using Skahal.Infrastructure.Framework.Repositories;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1044</ViolationID>
            <ID>1044</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1046</ID>
          <Line>12</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using TestSharp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1046</ViolationID>
            <ID>1046</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1047</ID>
          <Line>5</Line>
          <Message>Using directives must be sorted alphabetically by the namespaces.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1210</CheckId>
            <Description>Verifies that using directives are sorted alphabetically by the namespaces.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBeOrderedAlphabeticallyByNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Using Directives</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1047</ViolationID>
            <ID>1047</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1048</ID>
          <Line>6</Line>
          <Message>Using directives must be sorted alphabetically by the namespaces.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1210</CheckId>
            <Description>Verifies that using directives are sorted alphabetically by the namespaces.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBeOrderedAlphabeticallyByNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Using Directives</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1048</ViolationID>
            <ID>1048</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1049</ID>
          <Line>7</Line>
          <Message>Using directives must be sorted alphabetically by the namespaces.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Runtime;</SourceCodeLine>
          <Rules>
            <CheckId>SA1210</CheckId>
            <Description>Verifies that using directives are sorted alphabetically by the namespaces.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBeOrderedAlphabeticallyByNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Using Directives</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1049</ViolationID>
            <ID>1049</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1051</ID>
          <Line>8</Line>
          <Message>Using directives must be sorted alphabetically by the namespaces.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Repositories.Memory;</SourceCodeLine>
          <Rules>
            <CheckId>SA1210</CheckId>
            <Description>Verifies that using directives are sorted alphabetically by the namespaces.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBeOrderedAlphabeticallyByNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Using Directives</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1051</ViolationID>
            <ID>1051</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1053</ID>
          <Line>51</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new ArgumentNullException("entity"), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1053</ViolationID>
            <ID>1053</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1054</ID>
          <Line>51</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new ArgumentNullException("entity"), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1054</ViolationID>
            <ID>1054</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1056</ID>
          <Line>82</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new SpecificationNotSatisfiedException(Texts.ThereIsOtherEntityWithSameName.With("usuário", "TESTE")), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1056</ViolationID>
            <ID>1056</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1059</ID>
          <Line>82</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            ExceptionAssert.IsThrowing(new SpecificationNotSatisfiedException(Texts.ThereIsOtherEntityWithSameName.With("usuário", "TESTE")), () =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1059</ViolationID>
            <ID>1059</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1063</ID>
          <Line>31</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork = new MemoryUnitOfWork();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1063</ViolationID>
            <ID>1063</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1064</ID>
          <Line>33</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_roleRepository = new MemoryRoleRepository(m_unitOfWork);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1064</ViolationID>
            <ID>1064</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1065</ID>
          <Line>35</Line>
          <Message>The call to m_roleRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_roleRepository.Add(new Role { Id = 1 });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1065</ViolationID>
            <ID>1065</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1066</ID>
          <Line>37</Line>
          <Message>The call to m_roleService must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_roleService = new RoleService(m_roleRepository, m_unitOfWork, null);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1066</ViolationID>
            <ID>1066</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1067</ID>
          <Line>39</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository = new MemoryUserRepository(m_unitOfWork);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1067</ViolationID>
            <ID>1067</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1068</ID>
          <Line>41</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_target = new UserService(m_userRepository, m_unitOfWork, m_roleService);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1068</ViolationID>
            <ID>1068</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1069</ID>
          <Line>43</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1069</ViolationID>
            <ID>1069</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1070</ID>
          <Line>60</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_target.Save(new User() { ExternalUserId = "1", UserName = "TESTE", FullName = "TESTE", Email = "teste@teste.com.br", RoleId = 1 });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1070</ViolationID>
            <ID>1070</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1072</ID>
          <Line>61</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(0, m_userRepository.CountAll());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1072</ViolationID>
            <ID>1072</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1073</ID>
          <Line>63</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1073</ViolationID>
            <ID>1073</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1075</ID>
          <Line>64</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(1, m_userRepository.CountAll());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1075</ViolationID>
            <ID>1075</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1077</ID>
          <Line>65</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            var actual = m_userRepository.FindFirst();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1077</ViolationID>
            <ID>1077</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1079</ID>
          <Line>72</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_target.Save(new User()</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1079</ViolationID>
            <ID>1079</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1081</ID>
          <Line>80</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1081</ViolationID>
            <ID>1081</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1082</ID>
          <Line>98</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_target.Save(new User() { ExternalUserId = "1", UserName = "TESTE", FullName = "TESTE", Email = "teste@teste.com.br", RoleId = 1 });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1082</ViolationID>
            <ID>1082</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1085</ID>
          <Line>99</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1085</ViolationID>
            <ID>1085</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1087</ID>
          <Line>100</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(1, m_userRepository.CountAll());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1087</ViolationID>
            <ID>1087</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1089</ID>
          <Line>102</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            var user = m_userRepository.FindFirst() as User;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1089</ViolationID>
            <ID>1089</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1091</ID>
          <Line>108</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_target.Save(toUpdated);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1091</ViolationID>
            <ID>1091</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1094</ID>
          <Line>109</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1094</ViolationID>
            <ID>1094</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1096</ID>
          <Line>111</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(1, m_userRepository.CountAll());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1096</ViolationID>
            <ID>1096</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1098</ID>
          <Line>112</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            var actual = m_userRepository.FindFirst();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1098</ViolationID>
            <ID>1098</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1099</ID>
          <Line>120</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { FullName = null, UserName = "hikaru", Enabled = true, Role = new Role { Id = 1 } });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1099</ViolationID>
            <ID>1099</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1100</ID>
          <Line>121</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { FullName = "abc", UserName = "ichijio", Enabled = false, Role = new Role { Id = 1 } });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1100</ViolationID>
            <ID>1100</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1102</ID>
          <Line>122</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { FullName = "ABCD", UserName = "minmay", Enabled = true, Role = new Role { Id = 2 } });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1102</ViolationID>
            <ID>1102</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1104</ID>
          <Line>123</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1104</ViolationID>
            <ID>1104</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1107</ID>
          <Line>125</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            var actual = m_target.GetByFilter(0, int.MaxValue, new UserFilter { UserName = "hikaru" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1107</ViolationID>
            <ID>1107</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1109</ID>
          <Line>128</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            actual = m_target.GetByFilter(0, int.MaxValue, new UserFilter { UserActiveStatus = new bool[] { true }, RoleIds = new int[] { 1 } });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1109</ViolationID>
            <ID>1109</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1112</ID>
          <Line>131</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            actual = m_target.GetByFilter(0, int.MaxValue, new UserFilter { FullName = "ABCD" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1112</ViolationID>
            <ID>1112</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1114</ID>
          <Line>134</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            actual = m_target.GetByFilter(0, int.MaxValue, new UserFilter());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1114</ViolationID>
            <ID>1114</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1115</ID>
          <Line>137</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            actual = m_target.GetByFilter(0, int.MaxValue, new UserFilter { UserActiveStatus = new bool[] { true } });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1115</ViolationID>
            <ID>1115</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1117</ID>
          <Line>144</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { FullName = null });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1117</ViolationID>
            <ID>1117</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1120</ID>
          <Line>145</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { FullName = "abc" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1120</ViolationID>
            <ID>1120</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1122</ID>
          <Line>146</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { FullName = "ABCD" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1122</ViolationID>
            <ID>1122</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1124</ID>
          <Line>147</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1124</ViolationID>
            <ID>1124</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1126</ID>
          <Line>149</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            var actual = m_target.GetByFullName(0, int.MaxValue, "a");</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1126</ViolationID>
            <ID>1126</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1128</ID>
          <Line>152</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            actual = m_target.GetByFullName(0, int.MaxValue, "D");</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1128</ViolationID>
            <ID>1128</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1129</ID>
          <Line>155</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            actual = m_target.GetByFullName(0, int.MaxValue, "");</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1129</ViolationID>
            <ID>1129</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1131</ID>
          <Line>158</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual("abc", m_target.GetByFullName("abc").FullName);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1131</ViolationID>
            <ID>1131</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1133</ID>
          <Line>164</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(0, m_target.Get(0, int.MaxValue, f =&gt; true).TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1133</ViolationID>
            <ID>1133</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1135</ID>
          <Line>165</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1135</ViolationID>
            <ID>1135</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1136</ID>
          <Line>166</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1136</ViolationID>
            <ID>1136</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1137</ID>
          <Line>168</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(1, m_target.Get(0, int.MaxValue, f =&gt; true).TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1137</ViolationID>
            <ID>1137</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1138</ID>
          <Line>174</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(0, m_target.Get(0, int.MaxValue, f =&gt; true).TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1138</ViolationID>
            <ID>1138</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1139</ID>
          <Line>175</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { UserName = "TEST1" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1139</ViolationID>
            <ID>1139</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1140</ID>
          <Line>176</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { UserName = "TEST2" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1140</ViolationID>
            <ID>1140</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1141</ID>
          <Line>177</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1141</ViolationID>
            <ID>1141</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1142</ID>
          <Line>179</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            var expected = m_userRepository.FindFirst(u =&gt; u.UserName.Equals("TEST2"));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1142</ViolationID>
            <ID>1142</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1143</ID>
          <Line>181</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(expected, m_target.GetById(expected.Id));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1143</ViolationID>
            <ID>1143</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1144</ID>
          <Line>187</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(0, m_target.Get(0, int.MaxValue, f =&gt; true).TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1144</ViolationID>
            <ID>1144</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1145</ID>
          <Line>188</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { ExternalUserId = "TEST1" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1145</ViolationID>
            <ID>1145</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1146</ID>
          <Line>189</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { ExternalUserId = "TEST2" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1146</ViolationID>
            <ID>1146</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1147</ID>
          <Line>190</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1147</ViolationID>
            <ID>1147</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1149</ID>
          <Line>191</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual("TEST2", m_target.GetByExternalUserId("TEST2").ExternalUserId);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1149</ViolationID>
            <ID>1149</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1152</ID>
          <Line>197</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(0, m_target.Get(0, int.MaxValue, f =&gt; true).TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1152</ViolationID>
            <ID>1152</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1154</ID>
          <Line>198</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { UserName = "TEST1" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1154</ViolationID>
            <ID>1154</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1156</ID>
          <Line>199</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { UserName = "TEST2" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1156</ViolationID>
            <ID>1156</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1158</ID>
          <Line>200</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1158</ViolationID>
            <ID>1158</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1159</ID>
          <Line>202</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual("TEST2", m_target.GetByUserName("TEST2").UserName);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1159</ViolationID>
            <ID>1159</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1160</ID>
          <Line>203</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual("TEST1", m_target.GetByUserName("TEST1").UserName);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1160</ViolationID>
            <ID>1160</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1161</ID>
          <Line>204</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.IsNull(m_target.GetByUserName("TEST3"));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1161</ViolationID>
            <ID>1161</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1162</ID>
          <Line>210</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(0, m_target.Get(0, int.MaxValue, f =&gt; true).TotalCount);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1162</ViolationID>
            <ID>1162</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1163</ID>
          <Line>211</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { Email = "TEST1" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1163</ViolationID>
            <ID>1163</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1164</ID>
          <Line>212</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { Email = "TEST2" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1164</ViolationID>
            <ID>1164</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1165</ID>
          <Line>213</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1165</ViolationID>
            <ID>1165</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1166</ID>
          <Line>215</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual("TEST2", m_target.GetByEmail("TEST2").Email);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1166</ViolationID>
            <ID>1166</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1167</ID>
          <Line>216</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual("TEST1", m_target.GetByEmail("TEST1").Email);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1167</ViolationID>
            <ID>1167</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1168</ID>
          <Line>217</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.IsNull(m_target.GetByEmail("TEST3"));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1168</ViolationID>
            <ID>1168</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1169</ID>
          <Line>223</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { UserName = "TEST1" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1169</ViolationID>
            <ID>1169</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1170</ID>
          <Line>224</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { UserName = "TEST2" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1170</ViolationID>
            <ID>1170</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1171</ID>
          <Line>225</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { UserName = "TEST3" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1171</ViolationID>
            <ID>1171</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1172</ID>
          <Line>226</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1172</ViolationID>
            <ID>1172</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1173</ID>
          <Line>228</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_target.Remove(3);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1173</ViolationID>
            <ID>1173</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1174</ID>
          <Line>229</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1174</ViolationID>
            <ID>1174</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1175</ID>
          <Line>231</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.IsNotNull(m_userRepository.FindBy(1));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1175</ViolationID>
            <ID>1175</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1176</ID>
          <Line>232</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.IsNotNull(m_userRepository.FindBy(2));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1176</ViolationID>
            <ID>1176</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1177</ID>
          <Line>233</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.IsNull(m_userRepository.FindBy(3));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1177</ViolationID>
            <ID>1177</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1178</ID>
          <Line>239</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(0, m_target.Count(f =&gt; true));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1178</ViolationID>
            <ID>1178</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1179</ID>
          <Line>240</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { UserName = "TEST1" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1179</ViolationID>
            <ID>1179</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1180</ID>
          <Line>241</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(new User() { UserName = "TEST2" });</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1180</ViolationID>
            <ID>1180</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1181</ID>
          <Line>242</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1181</ViolationID>
            <ID>1181</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1182</ID>
          <Line>244</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(2, m_target.Count(f =&gt; true));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1182</ViolationID>
            <ID>1182</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1183</ID>
          <Line>245</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            Assert.AreEqual(1, m_target.Count(f =&gt; f.UserName.Equals("TEST1")));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1183</ViolationID>
            <ID>1183</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1184</ID>
          <Line>251</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            var actual = m_target.CanSendEmailNotificationTo("test@SampleProjecttest.com.br");</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1184</ViolationID>
            <ID>1184</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1185</ID>
          <Line>259</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(user);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1185</ViolationID>
            <ID>1185</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1186</ID>
          <Line>260</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1186</ViolationID>
            <ID>1186</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1187</ID>
          <Line>262</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            var actual = m_target.CanSendEmailNotificationTo("test@SampleProjecttest.com.br");</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1187</ViolationID>
            <ID>1187</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1188</ID>
          <Line>270</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(user);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1188</ViolationID>
            <ID>1188</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1189</ID>
          <Line>271</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1189</ViolationID>
            <ID>1189</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1190</ID>
          <Line>273</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            var actual = m_target.CanSendEmailNotificationTo("test@SampleProjecttest.com.br");</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1190</ViolationID>
            <ID>1190</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1191</ID>
          <Line>281</Line>
          <Message>The call to m_userRepository must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_userRepository.Add(user);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1191</ViolationID>
            <ID>1191</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1192</ID>
          <Line>282</Line>
          <Message>The call to m_unitOfWork must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            m_unitOfWork.Commit();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1192</ViolationID>
            <ID>1192</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1193</ID>
          <Line>284</Line>
          <Message>The call to m_target must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            var actual = m_target.CanSendEmailNotificationTo("test@SampleProjecttest.com.br");</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1193</ViolationID>
            <ID>1193</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1194</ID>
          <Line>155</Line>
          <Message>Use string.Empty rather than "".</Message>
          <SourceCodeFileID>79</SourceCodeFileID>
          <SourceCodeLine>            actual = m_target.GetByFullName(0, int.MaxValue, "");</SourceCodeLine>
          <Rules>
            <CheckId>SA1122</CheckId>
            <Description>Enforces the use of the string.Empty property for empty strings.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseStringEmptyForEmptyStrings</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Strings</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1194</ViolationID>
            <ID>1194</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>80</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain.UnitTests\Accounts\UserTest.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>UserTest.cs</Name>
        <CodeProjectID>5</CodeProjectID>
        <Violations>
          <ID>954</ID>
          <Line>8</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>80</SourceCodeFileID>
          <SourceCodeLine>    public class UserTest</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>954</ViolationID>
            <ID>954</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>957</ID>
          <Line>11</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>80</SourceCodeFileID>
          <SourceCodeLine>        public void Clone_Properties_PropertiesCloned()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>957</ViolationID>
            <ID>957</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>960</ID>
          <Line>36</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>80</SourceCodeFileID>
          <SourceCodeLine>        public void KeepImmutableValues_OldUser_KeepUsername()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>960</ViolationID>
            <ID>960</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>962</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>80</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>962</ViolationID>
            <ID>962</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>969</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>80</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.VisualStudio.TestTools.UnitTesting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>969</ViolationID>
            <ID>969</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>970</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>80</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Domain.Accounts;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>970</ViolationID>
            <ID>970</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>973</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>80</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.Infrastructure.Framework.Domain;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>973</ViolationID>
            <ID>973</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>81</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Domain.UnitTests\Properties\AssemblyInfo.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AssemblyInfo.cs</Name>
        <CodeProjectID>5</CodeProjectID>
        <Violations>
          <ID>978</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>81</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>978</ViolationID>
            <ID>978</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
    </Projects>
    <Projects>
      <ID>6</ID>
      <Location>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.BackgroundWorkerApp\SampleProject.BackgroundWorkerApp.csproj</Location>
      <Name>SampleProject.BackgroundWorkerApp</Name>
      <SolutionID>0</SolutionID>
      <SourceCodeFiles>
        <ID>82</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.BackgroundWorkerApp\Program.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>Program.cs</Name>
        <CodeProjectID>6</CodeProjectID>
        <Violations>
          <ID>982</ID>
          <Line>3</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>82</SourceCodeFileID>
          <SourceCodeLine>    class Program</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>982</ViolationID>
            <ID>982</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>983</ID>
          <Line>5</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>82</SourceCodeFileID>
          <SourceCodeLine>        static void Main(string[] args)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>983</ViolationID>
            <ID>983</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>985</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>82</SourceCodeFileID>
          <SourceCodeLine>namespace SampleProject.BackgroundWorkerApp</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>985</ViolationID>
            <ID>985</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>986</ID>
          <Line>3</Line>
          <Message>The class must have an access modifier.</Message>
          <SourceCodeFileID>82</SourceCodeFileID>
          <SourceCodeLine>    class Program</SourceCodeLine>
          <Rules>
            <CheckId>SA1400</CheckId>
            <Description>Validates that an access modifier is declared for an element.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>AccessModifierMustBeDeclared</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Access Modifiers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>986</ViolationID>
            <ID>986</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>987</ID>
          <Line>5</Line>
          <Message>The method must have an access modifier.</Message>
          <SourceCodeFileID>82</SourceCodeFileID>
          <SourceCodeLine>        static void Main(string[] args)</SourceCodeLine>
          <Rules>
            <CheckId>SA1400</CheckId>
            <Description>Validates that an access modifier is declared for an element.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>AccessModifierMustBeDeclared</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Access Modifiers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>987</ViolationID>
            <ID>987</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>83</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.BackgroundWorkerApp\Properties\AssemblyInfo.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AssemblyInfo.cs</Name>
        <CodeProjectID>6</CodeProjectID>
        <Violations>
          <ID>990</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>83</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>990</ViolationID>
            <ID>990</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
    </Projects>
    <Projects>
      <ID>7</ID>
      <Location>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\SampleProject.WebApi.csproj</Location>
      <Name>SampleProject.WebApi</Name>
      <SolutionID>0</SolutionID>
      <SourceCodeFiles>
        <ID>84</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\App_Start\BundleConfig.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>BundleConfig.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>999</ID>
          <Line>5</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>84</SourceCodeFileID>
          <SourceCodeLine>    public class BundleConfig</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>999</ViolationID>
            <ID>999</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1001</ID>
          <Line>8</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>84</SourceCodeFileID>
          <SourceCodeLine>        public static void RegisterBundles(BundleCollection bundles)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1001</ViolationID>
            <ID>1001</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1003</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>84</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Optimization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1003</ViolationID>
            <ID>1003</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1005</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>84</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Optimization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1005</ViolationID>
            <ID>1005</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>85</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\App_Start\FilterConfig.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>FilterConfig.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1009</ID>
          <Line>5</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>85</SourceCodeFileID>
          <SourceCodeLine>    public class FilterConfig</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1009</ViolationID>
            <ID>1009</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1010</ID>
          <Line>7</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>85</SourceCodeFileID>
          <SourceCodeLine>        public static void RegisterGlobalFilters(GlobalFilterCollection filters)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1010</ViolationID>
            <ID>1010</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1012</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>85</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Mvc;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1012</ViolationID>
            <ID>1012</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1013</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>85</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Mvc;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1013</ViolationID>
            <ID>1013</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>86</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\App_Start\IdentityConfig.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IdentityConfig.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1014</ID>
          <Line>11</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>86</SourceCodeFileID>
          <SourceCodeLine>    public class ApplicationUserManager : UserManager&lt;ApplicationUser&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1014</ViolationID>
            <ID>1014</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1015</ID>
          <Line>13</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>86</SourceCodeFileID>
          <SourceCodeLine>        public ApplicationUserManager(IUserStore&lt;ApplicationUser&gt; store)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1015</ViolationID>
            <ID>1015</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1016</ID>
          <Line>18</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>86</SourceCodeFileID>
          <SourceCodeLine>        public static ApplicationUserManager Create(IdentityFactoryOptions&lt;ApplicationUserManager&gt; options, IOwinContext context)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1016</ViolationID>
            <ID>1016</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1017</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>86</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.AspNet.Identity;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1017</ViolationID>
            <ID>1017</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1021</ID>
          <Line>9</Line>
          <Message>A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>86</SourceCodeFileID>
          <SourceCodeLine>    // Configure the application user manager used in this application. UserManager is defined in ASP.NET Identity and is used by the application.</SourceCodeLine>
          <Rules>
            <CheckId>SA1512</CheckId>
            <Description>Validates that a comment is not followed by a blank line. (This does not apply to C-style comments.)</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustNotBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1021</ViolationID>
            <ID>1021</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1023</ID>
          <Line>21</Line>
          <Message>A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>86</SourceCodeFileID>
          <SourceCodeLine>            // Configure validation logic for usernames</SourceCodeLine>
          <Rules>
            <CheckId>SA1515</CheckId>
            <Description>Validates that a comment is preceded by a blank line, or is the first item in its scope.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentMustBePrecededByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1023</ViolationID>
            <ID>1023</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1025</ID>
          <Line>27</Line>
          <Message>A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>86</SourceCodeFileID>
          <SourceCodeLine>            // Configure validation logic for passwords</SourceCodeLine>
          <Rules>
            <CheckId>SA1515</CheckId>
            <Description>Validates that a comment is preceded by a blank line, or is the first item in its scope.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentMustBePrecededByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1025</ViolationID>
            <ID>1025</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1026</ID>
          <Line>40</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>86</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1026</ViolationID>
            <ID>1026</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1028</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>86</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.AspNet.Identity;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1028</ViolationID>
            <ID>1028</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1029</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>86</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.AspNet.Identity.EntityFramework;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1029</ViolationID>
            <ID>1029</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1030</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>86</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.AspNet.Identity.Owin;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1030</ViolationID>
            <ID>1030</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1031</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>86</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.Owin;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1031</ViolationID>
            <ID>1031</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1033</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>86</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.WebApi.Models;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1033</ViolationID>
            <ID>1033</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>87</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\App_Start\RouteConfig.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>RouteConfig.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1038</ID>
          <Line>13</Line>
          <Message>A syntax error has been discovered in file C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\App_Start\RouteConfig.cs on line 13.</Message>
          <SourceCodeFileID>87</SourceCodeFileID>
          <SourceCodeLine>                name: "Default",</SourceCodeLine>
          <Rules>
            <CheckId>SA0102</CheckId>
            <Description />
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SyntaxException</Name>
            <Namespace>Microsoft.StyleCop.CSharp.CsParser</Namespace>
            <Warning>false</Warning>
            <ViolationID>1038</ViolationID>
            <ID>1038</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>88</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\App_Start\Startup.Auth.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>Startup.Auth.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1877</ID>
          <Line>12</Line>
          <Message>The partial class element must have a documentation header containing either a summary tag or a content tag.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>    public partial class Startup</SourceCodeLine>
          <Rules>
            <CheckId>SA1601</CheckId>
            <Description>Validates that a partial class, struct, etc. contains a valid documentation header which contains either a summary tag or a content tag.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PartialElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1877</ViolationID>
            <ID>1877</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1880</ID>
          <Line>14</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>        public static OAuthAuthorizationServerOptions OAuthOptions { get; private set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1880</ViolationID>
            <ID>1880</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1882</ID>
          <Line>16</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>        public static string PublicClientId { get; private set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1882</ViolationID>
            <ID>1882</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1884</ID>
          <Line>19</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>        public void ConfigureAuth(IAppBuilder app)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1884</ViolationID>
            <ID>1884</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1887</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1887</ViolationID>
            <ID>1887</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1890</ID>
          <Line>38</Line>
          <Message>A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>                // In production mode set AllowInsecureHttp = false</SourceCodeLine>
          <Rules>
            <CheckId>SA1515</CheckId>
            <Description>Validates that a comment is preceded by a blank line, or is the first item in its scope.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentMustBePrecededByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1890</ViolationID>
            <ID>1890</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1891</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1891</ViolationID>
            <ID>1891</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1892</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.AspNet.Identity;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1892</ViolationID>
            <ID>1892</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1894</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.Owin;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1894</ViolationID>
            <ID>1894</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1895</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.Owin.Security.Cookies;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1895</ViolationID>
            <ID>1895</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1896</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.Owin.Security.OAuth;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1896</ViolationID>
            <ID>1896</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1897</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>using Owin;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1897</ViolationID>
            <ID>1897</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1898</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.WebApi.Models;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1898</ViolationID>
            <ID>1898</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1899</ID>
          <Line>8</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.WebApi.Providers;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1899</ViolationID>
            <ID>1899</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1900</ID>
          <Line>46</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>            //app.UseMicrosoftAccountAuthentication(</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1900</ViolationID>
            <ID>1900</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1901</ID>
          <Line>50</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>            //app.UseTwitterAuthentication(</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1901</ViolationID>
            <ID>1901</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1902</ID>
          <Line>54</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>            //app.UseFacebookAuthentication(</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1902</ViolationID>
            <ID>1902</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1903</ID>
          <Line>58</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>            //app.UseGoogleAuthentication(new GoogleOAuth2AuthenticationOptions()</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1903</ViolationID>
            <ID>1903</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1904</ID>
          <Line>59</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>            //{</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1904</ViolationID>
            <ID>1904</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1905</ID>
          <Line>62</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>88</SourceCodeFileID>
          <SourceCodeLine>            //});</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1905</ViolationID>
            <ID>1905</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>89</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\App_Start\WebApiConfig.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>WebApiConfig.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1045</ID>
          <Line>19</Line>
          <Message>A syntax error has been discovered in file C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\App_Start\WebApiConfig.cs on line 19.</Message>
          <SourceCodeFileID>89</SourceCodeFileID>
          <SourceCodeLine>                name: "DefaultApi",</SourceCodeLine>
          <Rules>
            <CheckId>SA0102</CheckId>
            <Description />
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SyntaxException</Name>
            <Namespace>Microsoft.StyleCop.CSharp.CsParser</Namespace>
            <Warning>false</Warning>
            <ViolationID>1045</ViolationID>
            <ID>1045</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>90</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ApiDescriptionExtensions.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ApiDescriptionExtensions.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1050</ID>
          <Line>8</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>90</SourceCodeFileID>
          <SourceCodeLine>    public static class ApiDescriptionExtensions</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1050</ViolationID>
            <ID>1050</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1052</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>90</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1052</ViolationID>
            <ID>1052</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1055</ID>
          <Line>35</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>90</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1055</ViolationID>
            <ID>1055</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1057</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>90</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1057</ViolationID>
            <ID>1057</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1058</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>90</SourceCodeFileID>
          <SourceCodeLine>using System.Text;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1058</ViolationID>
            <ID>1058</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1060</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>90</SourceCodeFileID>
          <SourceCodeLine>using System.Web;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1060</ViolationID>
            <ID>1060</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1061</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>90</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http.Description;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1061</ViolationID>
            <ID>1061</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1062</ID>
          <Line>29</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>90</SourceCodeFileID>
          <SourceCodeLine>            friendlyPath.AppendFormat("{0}-{1}",</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1062</ViolationID>
            <ID>1062</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>91</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\App_Start\HelpPageConfig.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>HelpPageConfig.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1071</ID>
          <Line>27</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>91</SourceCodeFileID>
          <SourceCodeLine>        public static void Register(HttpConfiguration config)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1071</ViolationID>
            <ID>1071</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1074</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>91</SourceCodeFileID>
          <SourceCodeLine>// Uncomment the following to provide samples for PageResult&lt;T&gt;. Must also add the Microsoft.AspNet.WebApi.OData</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1074</ViolationID>
            <ID>1074</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1076</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>91</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1076</ViolationID>
            <ID>1076</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1078</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>91</SourceCodeFileID>
          <SourceCodeLine>using System.Net.Http.Headers;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1078</ViolationID>
            <ID>1078</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1080</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>91</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1080</ViolationID>
            <ID>1080</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1083</ID>
          <Line>30</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>91</SourceCodeFileID>
          <SourceCodeLine>            //config.SetDocumentationProvider(new XmlDocumentationProvider(HttpContext.Current.Server.MapPath("~/App_Data/XmlDocument.xml")));</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1083</ViolationID>
            <ID>1083</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1084</ID>
          <Line>35</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>91</SourceCodeFileID>
          <SourceCodeLine>            //config.SetSampleObjects(new Dictionary&lt;Type, object&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1084</ViolationID>
            <ID>1084</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1086</ID>
          <Line>36</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>91</SourceCodeFileID>
          <SourceCodeLine>            //{</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1086</ViolationID>
            <ID>1086</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1088</ID>
          <Line>39</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>91</SourceCodeFileID>
          <SourceCodeLine>            //});</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1088</ViolationID>
            <ID>1088</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1090</ID>
          <Line>57</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>91</SourceCodeFileID>
          <SourceCodeLine>            //config.SetSampleForType("[0]=foo&amp;[1]=bar", new MediaTypeHeaderValue("application/x-www-form-urlencoded"), typeof(IEnumerable&lt;string&gt;));</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1090</ViolationID>
            <ID>1090</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1092</ID>
          <Line>61</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>91</SourceCodeFileID>
          <SourceCodeLine>            //config.SetSampleRequest("1234", new MediaTypeHeaderValue("text/plain"), "Values", "Put");</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1092</ViolationID>
            <ID>1092</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1093</ID>
          <Line>65</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>91</SourceCodeFileID>
          <SourceCodeLine>            //config.SetSampleResponse(new ImageSample("../images/aspNetHome.png"), new MediaTypeHeaderValue("image/png"), "Values", "Get", "id");</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1093</ViolationID>
            <ID>1093</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1095</ID>
          <Line>69</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>91</SourceCodeFileID>
          <SourceCodeLine>            //config.SetActualRequestType(typeof(string), "Values", "Get");</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1095</ViolationID>
            <ID>1095</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1097</ID>
          <Line>73</Line>
          <Message>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>91</SourceCodeFileID>
          <SourceCodeLine>            //config.SetActualResponseType(typeof(string), "Values", "Post");</SourceCodeLine>
          <Rules>
            <CheckId>SA1005</CheckId>
            <Description>Verifies that the forward slashes at the beginning of a comment are followed by a single space.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustBeginWithSingleSpace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.SpacingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1097</ViolationID>
            <ID>1097</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>92</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\Controllers\HelpController.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>HelpController.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1101</ID>
          <Line>14</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>        private const string ErrorViewName = "Error";</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1101</ViolationID>
            <ID>1101</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1103</ID>
          <Line>16</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>        public HelpController()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1103</ViolationID>
            <ID>1103</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1105</ID>
          <Line>21</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>        public HelpController(HttpConfiguration config)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1105</ViolationID>
            <ID>1105</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1106</ID>
          <Line>26</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>        public HttpConfiguration Configuration { get; private set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1106</ViolationID>
            <ID>1106</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1108</ID>
          <Line>28</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>        public ActionResult Index()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1108</ViolationID>
            <ID>1108</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1110</ID>
          <Line>34</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>        public ActionResult Api(string apiId)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1110</ViolationID>
            <ID>1110</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1111</ID>
          <Line>48</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>        public ActionResult ResourceModel(string modelName)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1111</ViolationID>
            <ID>1111</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1113</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1113</ViolationID>
            <ID>1113</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1116</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1116</ViolationID>
            <ID>1116</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1118</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1118</ViolationID>
            <ID>1118</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1119</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Mvc;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1119</ViolationID>
            <ID>1119</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1121</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.WebApi.Areas.HelpPage.ModelDescriptions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1121</ViolationID>
            <ID>1121</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1123</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.WebApi.Areas.HelpPage.Models;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1123</ViolationID>
            <ID>1123</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1125</ID>
          <Line>23</Line>
          <Message>The call to Configuration must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>            Configuration = config;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1125</ViolationID>
            <ID>1125</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1127</ID>
          <Line>30</Line>
          <Message>The call to Configuration must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>            ViewBag.DocumentationProvider = Configuration.Services.GetDocumentationProvider();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1127</ViolationID>
            <ID>1127</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1130</ID>
          <Line>31</Line>
          <Message>The call to Configuration must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>            return View(Configuration.Services.GetApiExplorer().ApiDescriptions);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1130</ViolationID>
            <ID>1130</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1132</ID>
          <Line>38</Line>
          <Message>The call to Configuration must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>                HelpPageApiModel apiModel = Configuration.GetHelpPageApiModel(apiId);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1132</ViolationID>
            <ID>1132</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1134</ID>
          <Line>52</Line>
          <Message>The call to Configuration must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>92</SourceCodeFileID>
          <SourceCodeLine>                ModelDescriptionGenerator modelDescriptionGenerator = Configuration.GetModelDescriptionGenerator();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1134</ViolationID>
            <ID>1134</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>93</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\HelpPageAreaRegistration.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>HelpPageAreaRegistration.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1148</ID>
          <Line>6</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>93</SourceCodeFileID>
          <SourceCodeLine>    public class HelpPageAreaRegistration : AreaRegistration</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1148</ViolationID>
            <ID>1148</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1150</ID>
          <Line>8</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>93</SourceCodeFileID>
          <SourceCodeLine>        public override string AreaName</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1150</ViolationID>
            <ID>1150</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1151</ID>
          <Line>16</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>93</SourceCodeFileID>
          <SourceCodeLine>        public override void RegisterArea(AreaRegistrationContext context)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1151</ViolationID>
            <ID>1151</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1153</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>93</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1153</ViolationID>
            <ID>1153</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1155</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>93</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1155</ViolationID>
            <ID>1155</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1157</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>93</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Mvc;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1157</ViolationID>
            <ID>1157</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>94</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\HelpPageConfigurationExtensions.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>HelpPageConfigurationExtensions.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1208</ID>
          <Line>19</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>    public static class HelpPageConfigurationExtensions</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1208</ViolationID>
            <ID>1208</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1210</ID>
          <Line>21</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        private const string ApiModelPrefix = "MS_HelpPageApiModel_";</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1210</ViolationID>
            <ID>1210</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1214</ID>
          <Line>128</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        public static void SetActualRequestType(this HttpConfiguration config, Type type, string controllerName, string actionName)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1214</ViolationID>
            <ID>1214</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1215</ID>
          <Line>142</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        public static void SetActualRequestType(this HttpConfiguration config, Type type, string controllerName, string actionName, params string[] parameterNames)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1215</ViolationID>
            <ID>1215</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1216</ID>
          <Line>155</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        public static void SetActualResponseType(this HttpConfiguration config, Type type, string controllerName, string actionName)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1216</ViolationID>
            <ID>1216</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1218</ID>
          <Line>169</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        public static void SetActualResponseType(this HttpConfiguration config, Type type, string controllerName, string actionName, params string[] parameterNames)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1218</ViolationID>
            <ID>1218</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1223</ID>
          <Line>237</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        private static HelpPageApiModel GenerateApiModel(ApiDescription apiDescription, HttpConfiguration config)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1223</ViolationID>
            <ID>1223</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1224</ID>
          <Line>254</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        private static void GenerateUriParameters(HelpPageApiModel apiModel, ModelDescriptionGenerator modelGenerator)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1224</ViolationID>
            <ID>1224</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1225</ID>
          <Line>330</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        private static bool IsBindableWithTypeConverter(Type parameterType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1225</ViolationID>
            <ID>1225</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1227</ID>
          <Line>340</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        private static ParameterDescription AddParameterDescription(HelpPageApiModel apiModel,</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1227</ViolationID>
            <ID>1227</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1231</ID>
          <Line>354</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        private static void GenerateRequestModelDescription(HelpPageApiModel apiModel, ModelDescriptionGenerator modelGenerator, HelpPageSampleGenerator sampleGenerator)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1231</ViolationID>
            <ID>1231</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1234</ID>
          <Line>378</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        private static void GenerateResourceDescription(HelpPageApiModel apiModel, ModelDescriptionGenerator modelGenerator)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1234</ViolationID>
            <ID>1234</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1235</ID>
          <Line>389</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        private static void GenerateSamples(HelpPageApiModel apiModel, HelpPageSampleGenerator sampleGenerator)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1235</ViolationID>
            <ID>1235</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1236</ID>
          <Line>413</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        private static bool TryGetResourceParameter(ApiDescription apiDescription, HttpConfiguration config, out ApiParameterDescription parameterDescription, out Type resourceType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1236</ViolationID>
            <ID>1236</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1238</ID>
          <Line>442</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        private static ModelDescriptionGenerator InitializeModelDescriptionGenerator(HttpConfiguration config)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1238</ViolationID>
            <ID>1238</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1241</ID>
          <Line>458</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        private static void LogInvalidSampleAsError(HelpPageApiModel apiModel, object sample)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1241</ViolationID>
            <ID>1241</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1243</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1243</ViolationID>
            <ID>1243</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1246</ID>
          <Line>454</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1246</ViolationID>
            <ID>1246</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1250</ID>
          <Line>318</Line>
          <Message>A call to Debug.Assert must provide a message in the second parameter describing the reason for the assert.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>                        Debug.Assert(parameterDescriptor == null);</SourceCodeLine>
          <Rules>
            <CheckId>SA1405</CheckId>
            <Description>Validates that calls to Debug.Assert provide a message in the second parameter describing the reason for the assert.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DebugAssertMustProvideMessageText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>Debug Text</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1250</ViolationID>
            <ID>1250</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1251</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1251</ViolationID>
            <ID>1251</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1252</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1252</ViolationID>
            <ID>1252</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1253</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.ObjectModel;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1253</ViolationID>
            <ID>1253</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1254</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1254</ViolationID>
            <ID>1254</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1255</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1255</ViolationID>
            <ID>1255</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1256</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1256</ViolationID>
            <ID>1256</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1257</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1257</ViolationID>
            <ID>1257</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1259</ID>
          <Line>8</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1259</ViolationID>
            <ID>1259</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1261</ID>
          <Line>9</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using System.Net.Http;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1261</ViolationID>
            <ID>1261</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1263</ID>
          <Line>10</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using System.Net.Http.Headers;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1263</ViolationID>
            <ID>1263</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1265</ID>
          <Line>11</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1265</ViolationID>
            <ID>1265</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1267</ID>
          <Line>12</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http.Controllers;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1267</ViolationID>
            <ID>1267</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1269</ID>
          <Line>13</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http.Description;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1269</ViolationID>
            <ID>1269</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1271</ID>
          <Line>14</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.WebApi.Areas.HelpPage.ModelDescriptions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1271</ViolationID>
            <ID>1271</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1272</ID>
          <Line>15</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.WebApi.Areas.HelpPage.Models;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1272</ViolationID>
            <ID>1272</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1277</ID>
          <Line>340</Line>
          <Message>All method parameters must be placed on the same line, or each parameter must be placed on a separate line.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        private static ParameterDescription AddParameterDescription(HelpPageApiModel apiModel,</SourceCodeLine>
          <Rules>
            <CheckId>SA1117</CheckId>
            <Description>Verifies that each parameter in a parameter list is placed on its own line, unless all parameters are on the same line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParametersMustBeOnSameLineOrSeparateLines</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1277</ViolationID>
            <ID>1277</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1280</ID>
          <Line>340</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>        private static ParameterDescription AddParameterDescription(HelpPageApiModel apiModel,</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1280</ViolationID>
            <ID>1280</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1281</ID>
          <Line>341</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>            ApiParameterDescription apiParameter, ModelDescription typeDescription)</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1281</ViolationID>
            <ID>1281</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1284</ID>
          <Line>407</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>94</SourceCodeFileID>
          <SourceCodeLine>                apiModel.ErrorMessages.Add(String.Format(CultureInfo.CurrentCulture,</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1284</ViolationID>
            <ID>1284</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>95</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ModelDescriptions\CollectionModelDescription.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>CollectionModelDescription.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1195</ID>
          <Line>3</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>95</SourceCodeFileID>
          <SourceCodeLine>    public class CollectionModelDescription : ModelDescription</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1195</ViolationID>
            <ID>1195</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1196</ID>
          <Line>5</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>95</SourceCodeFileID>
          <SourceCodeLine>        public ModelDescription ElementDescription { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1196</ViolationID>
            <ID>1196</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1197</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>95</SourceCodeFileID>
          <SourceCodeLine>namespace SampleProject.WebApi.Areas.HelpPage.ModelDescriptions</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1197</ViolationID>
            <ID>1197</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>96</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ModelDescriptions\ComplexTypeModelDescription.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ComplexTypeModelDescription.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1198</ID>
          <Line>5</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>96</SourceCodeFileID>
          <SourceCodeLine>    public class ComplexTypeModelDescription : ModelDescription</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1198</ViolationID>
            <ID>1198</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1199</ID>
          <Line>7</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>96</SourceCodeFileID>
          <SourceCodeLine>        public ComplexTypeModelDescription()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1199</ViolationID>
            <ID>1199</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1200</ID>
          <Line>12</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>96</SourceCodeFileID>
          <SourceCodeLine>        public Collection&lt;ParameterDescription&gt; Properties { get; private set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1200</ViolationID>
            <ID>1200</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1201</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>96</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.ObjectModel;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1201</ViolationID>
            <ID>1201</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1202</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>96</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.ObjectModel;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1202</ViolationID>
            <ID>1202</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1203</ID>
          <Line>9</Line>
          <Message>The call to Properties must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>96</SourceCodeFileID>
          <SourceCodeLine>            Properties = new Collection&lt;ParameterDescription&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1203</ViolationID>
            <ID>1203</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>97</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ModelDescriptions\DictionaryModelDescription.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>DictionaryModelDescription.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1204</ID>
          <Line>3</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>97</SourceCodeFileID>
          <SourceCodeLine>    public class DictionaryModelDescription : KeyValuePairModelDescription</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1204</ViolationID>
            <ID>1204</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1205</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>97</SourceCodeFileID>
          <SourceCodeLine>namespace SampleProject.WebApi.Areas.HelpPage.ModelDescriptions</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1205</ViolationID>
            <ID>1205</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>98</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ModelDescriptions\EnumTypeModelDescription.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>EnumTypeModelDescription.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1206</ID>
          <Line>5</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>98</SourceCodeFileID>
          <SourceCodeLine>    public class EnumTypeModelDescription : ModelDescription</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1206</ViolationID>
            <ID>1206</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1207</ID>
          <Line>7</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>98</SourceCodeFileID>
          <SourceCodeLine>        public EnumTypeModelDescription()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1207</ViolationID>
            <ID>1207</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1209</ID>
          <Line>12</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>98</SourceCodeFileID>
          <SourceCodeLine>        public Collection&lt;EnumValueDescription&gt; Values { get; private set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1209</ViolationID>
            <ID>1209</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1211</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>98</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.ObjectModel;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1211</ViolationID>
            <ID>1211</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1212</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>98</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.ObjectModel;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1212</ViolationID>
            <ID>1212</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1213</ID>
          <Line>9</Line>
          <Message>The call to Values must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>98</SourceCodeFileID>
          <SourceCodeLine>            Values = new Collection&lt;EnumValueDescription&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1213</ViolationID>
            <ID>1213</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>99</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ModelDescriptions\EnumValueDescription.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>EnumValueDescription.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1217</ID>
          <Line>3</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>99</SourceCodeFileID>
          <SourceCodeLine>    public class EnumValueDescription</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1217</ViolationID>
            <ID>1217</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1219</ID>
          <Line>5</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>99</SourceCodeFileID>
          <SourceCodeLine>        public string Documentation { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1219</ViolationID>
            <ID>1219</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1220</ID>
          <Line>7</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>99</SourceCodeFileID>
          <SourceCodeLine>        public string Name { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1220</ViolationID>
            <ID>1220</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1221</ID>
          <Line>9</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>99</SourceCodeFileID>
          <SourceCodeLine>        public string Value { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1221</ViolationID>
            <ID>1221</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1222</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>99</SourceCodeFileID>
          <SourceCodeLine>namespace SampleProject.WebApi.Areas.HelpPage.ModelDescriptions</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1222</ViolationID>
            <ID>1222</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>100</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ModelDescriptions\IModelDocumentationProvider.cs</Path>
        <TimeStamp>2015-10-01T11:14:43-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IModelDocumentationProvider.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1226</ID>
          <Line>6</Line>
          <Message>The interface must have a documentation header.</Message>
          <SourceCodeFileID>100</SourceCodeFileID>
          <SourceCodeLine>    public interface IModelDocumentationProvider</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1226</ViolationID>
            <ID>1226</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1228</ID>
          <Line>8</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>100</SourceCodeFileID>
          <SourceCodeLine>        string GetDocumentation(MemberInfo member);</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1228</ViolationID>
            <ID>1228</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1229</ID>
          <Line>10</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>100</SourceCodeFileID>
          <SourceCodeLine>        string GetDocumentation(Type type);</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1229</ViolationID>
            <ID>1229</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1230</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>100</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1230</ViolationID>
            <ID>1230</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1232</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>100</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1232</ViolationID>
            <ID>1232</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1233</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>100</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1233</ViolationID>
            <ID>1233</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>101</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ModelDescriptions\KeyValuePairModelDescription.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>KeyValuePairModelDescription.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1237</ID>
          <Line>3</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>101</SourceCodeFileID>
          <SourceCodeLine>    public class KeyValuePairModelDescription : ModelDescription</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1237</ViolationID>
            <ID>1237</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1239</ID>
          <Line>5</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>101</SourceCodeFileID>
          <SourceCodeLine>        public ModelDescription KeyModelDescription { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1239</ViolationID>
            <ID>1239</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1240</ID>
          <Line>7</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>101</SourceCodeFileID>
          <SourceCodeLine>        public ModelDescription ValueModelDescription { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1240</ViolationID>
            <ID>1240</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1242</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>101</SourceCodeFileID>
          <SourceCodeLine>namespace SampleProject.WebApi.Areas.HelpPage.ModelDescriptions</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1242</ViolationID>
            <ID>1242</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>102</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ModelDescriptions\ModelDescription.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ModelDescription.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1244</ID>
          <Line>10</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>102</SourceCodeFileID>
          <SourceCodeLine>        public string Documentation { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1244</ViolationID>
            <ID>1244</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1245</ID>
          <Line>12</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>102</SourceCodeFileID>
          <SourceCodeLine>        public Type ModelType { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1245</ViolationID>
            <ID>1245</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1247</ID>
          <Line>14</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>102</SourceCodeFileID>
          <SourceCodeLine>        public string Name { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1247</ViolationID>
            <ID>1247</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1248</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>102</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1248</ViolationID>
            <ID>1248</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1249</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>102</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1249</ViolationID>
            <ID>1249</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>103</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ModelDescriptions\ModelDescriptionGenerator.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ModelDescriptionGenerator.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1258</ID>
          <Line>22</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private readonly IDictionary&lt;Type, Func&lt;object, string&gt;&gt; AnnotationTextGenerator = new Dictionary&lt;Type, Func&lt;object, string&gt;&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1258</ViolationID>
            <ID>1258</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1260</ID>
          <Line>64</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private readonly IDictionary&lt;Type, string&gt; DefaultTypeDocumentation = new Dictionary&lt;Type, string&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1260</ViolationID>
            <ID>1260</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1262</ID>
          <Line>87</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private Lazy&lt;IModelDocumentationProvider&gt; _documentationProvider;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1262</ViolationID>
            <ID>1262</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1264</ID>
          <Line>89</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        public ModelDescriptionGenerator(HttpConfiguration config)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1264</ViolationID>
            <ID>1264</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1266</ID>
          <Line>100</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        public Dictionary&lt;string, ModelDescription&gt; GeneratedModels { get; private set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1266</ViolationID>
            <ID>1266</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1268</ID>
          <Line>102</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private IModelDocumentationProvider DocumentationProvider</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1268</ViolationID>
            <ID>1268</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1270</ID>
          <Line>110</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        public ModelDescription GetOrCreateModelDescription(Type modelType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1270</ViolationID>
            <ID>1270</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1273</ID>
          <Line>205</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private static string GetMemberName(MemberInfo member, bool hasDataContractAttribute)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1273</ViolationID>
            <ID>1273</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1274</ID>
          <Line>225</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private static bool ShouldDisplayMember(MemberInfo member, bool hasDataContractAttribute)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1274</ViolationID>
            <ID>1274</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1275</ID>
          <Line>252</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private string CreateDefaultDocumentation(Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1275</ViolationID>
            <ID>1275</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1276</ID>
          <Line>267</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private void GenerateAnnotations(MemberInfo property, ParameterDescription propertyModel)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1276</ViolationID>
            <ID>1276</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1278</ID>
          <Line>309</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private CollectionModelDescription GenerateCollectionModelDescription(Type modelType, Type elementType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1278</ViolationID>
            <ID>1278</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1279</ID>
          <Line>325</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private ModelDescription GenerateComplexTypeModelDescription(Type modelType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1279</ViolationID>
            <ID>1279</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1282</ID>
          <Line>380</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private DictionaryModelDescription GenerateDictionaryModelDescription(Type modelType, Type keyType, Type valueType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1282</ViolationID>
            <ID>1282</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1283</ID>
          <Line>394</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private EnumTypeModelDescription GenerateEnumTypeModelDescription(Type modelType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1283</ViolationID>
            <ID>1283</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1285</ID>
          <Line>424</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private KeyValuePairModelDescription GenerateKeyValuePairModelDescription(Type modelType, Type keyType, Type valueType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1285</ViolationID>
            <ID>1285</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1286</ID>
          <Line>438</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private ModelDescription GenerateSimpleTypeModelDescription(Type modelType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1286</ViolationID>
            <ID>1286</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1287</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1287</ViolationID>
            <ID>1287</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1288</ID>
          <Line>163</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1288</ViolationID>
            <ID>1288</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1289</ID>
          <Line>258</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1289</ViolationID>
            <ID>1289</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1290</ID>
          <Line>293</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1290</ViolationID>
            <ID>1290</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1292</ID>
          <Line>415</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                    }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1292</ViolationID>
            <ID>1292</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1294</ID>
          <Line>418</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1294</ViolationID>
            <ID>1294</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1299</ID>
          <Line>87</Line>
          <Message>Field names must not start with an underscore.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>        private Lazy&lt;IModelDocumentationProvider&gt; _documentationProvider;</SourceCodeLine>
          <Rules>
            <CheckId>SA1309</CheckId>
            <Description>Validates that the name of a field does not begin with an underscore.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FieldNamesMustNotBeginWithUnderscore</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1299</ViolationID>
            <ID>1299</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1304</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1304</ViolationID>
            <ID>1304</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1307</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>using System.Collections;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1307</ViolationID>
            <ID>1307</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1308</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1308</ViolationID>
            <ID>1308</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1309</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Specialized;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1309</ViolationID>
            <ID>1309</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1310</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel.DataAnnotations;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1310</ViolationID>
            <ID>1310</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1312</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1312</ViolationID>
            <ID>1312</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1314</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1314</ViolationID>
            <ID>1314</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1317</ID>
          <Line>8</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>using System.Runtime.Serialization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1317</ViolationID>
            <ID>1317</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1319</ID>
          <Line>9</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1319</ViolationID>
            <ID>1319</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1320</ID>
          <Line>10</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http.Description;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1320</ViolationID>
            <ID>1320</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1321</ID>
          <Line>11</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>using System.Xml.Serialization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1321</ViolationID>
            <ID>1321</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1322</ID>
          <Line>12</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>using Newtonsoft.Json;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1322</ViolationID>
            <ID>1322</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1325</ID>
          <Line>132</Line>
          <Message>The parameter spans multiple lines. If the parameter is short, place the entire parameter on a single line. Otherwise, save the contents of the parameter in a temporary variable and pass the temporary variable as a parameter. </Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                            "A model description could not be created. Duplicate model name '{0}' was found for types '{1}' and '{2}'. " +</SourceCodeLine>
          <Rules>
            <CheckId>SA1118</CheckId>
            <Description>Validates that no parameter spans across multiple lines, other than the first parameter in a parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustNotSpanMultipleLines</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1325</ViolationID>
            <ID>1325</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1330</ID>
          <Line>96</Line>
          <Message>The call to _documentationProvider must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            _documentationProvider = new Lazy&lt;IModelDocumentationProvider&gt;(() =&gt; config.Services.GetDocumentationProvider() as IModelDocumentationProvider);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1330</ViolationID>
            <ID>1330</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1332</ID>
          <Line>97</Line>
          <Message>The call to GeneratedModels must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            GeneratedModels = new Dictionary&lt;string, ModelDescription&gt;(StringComparer.OrdinalIgnoreCase);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1332</ViolationID>
            <ID>1332</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1334</ID>
          <Line>106</Line>
          <Message>The call to _documentationProvider must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                return _documentationProvider.Value;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1334</ViolationID>
            <ID>1334</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1336</ID>
          <Line>125</Line>
          <Message>The call to GeneratedModels must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            if (GeneratedModels.TryGetValue(modelName, out modelDescription))</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1336</ViolationID>
            <ID>1336</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1337</ID>
          <Line>144</Line>
          <Message>The call to GenerateSimpleTypeModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                return GenerateSimpleTypeModelDescription(modelType);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1337</ViolationID>
            <ID>1337</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1338</ID>
          <Line>142</Line>
          <Message>The call to DefaultTypeDocumentation must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            if (DefaultTypeDocumentation.ContainsKey(modelType))</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1338</ViolationID>
            <ID>1338</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1340</ID>
          <Line>149</Line>
          <Message>The call to GenerateEnumTypeModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                return GenerateEnumTypeModelDescription(modelType);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1340</ViolationID>
            <ID>1340</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1342</ID>
          <Line>161</Line>
          <Message>The call to GenerateCollectionModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                        return GenerateCollectionModelDescription(modelType, genericArguments[0]);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1342</ViolationID>
            <ID>1342</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1343</ID>
          <Line>169</Line>
          <Message>The call to GenerateDictionaryModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                        return GenerateDictionaryModelDescription(modelType, genericArguments[0], genericArguments[1]);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1343</ViolationID>
            <ID>1343</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1344</ID>
          <Line>175</Line>
          <Message>The call to GenerateKeyValuePairModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                        return GenerateKeyValuePairModelDescription(modelType, genericArguments[0], genericArguments[1]);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1344</ViolationID>
            <ID>1344</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1345</ID>
          <Line>183</Line>
          <Message>The call to GenerateCollectionModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                return GenerateCollectionModelDescription(modelType, elementType);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1345</ViolationID>
            <ID>1345</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1346</ID>
          <Line>188</Line>
          <Message>The call to GenerateDictionaryModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                return GenerateDictionaryModelDescription(modelType, typeof(string), typeof(string));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1346</ViolationID>
            <ID>1346</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1347</ID>
          <Line>193</Line>
          <Message>The call to GenerateDictionaryModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                return GenerateDictionaryModelDescription(modelType, typeof(object), typeof(object));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1347</ViolationID>
            <ID>1347</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1349</ID>
          <Line>198</Line>
          <Message>The call to GenerateCollectionModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                return GenerateCollectionModelDescription(modelType, typeof(object));</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1349</ViolationID>
            <ID>1349</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1350</ID>
          <Line>201</Line>
          <Message>The call to GenerateComplexTypeModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            return GenerateComplexTypeModelDescription(modelType);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1350</ViolationID>
            <ID>1350</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1352</ID>
          <Line>255</Line>
          <Message>The call to DefaultTypeDocumentation must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            if (DefaultTypeDocumentation.TryGetValue(type, out documentation))</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1352</ViolationID>
            <ID>1352</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1354</ID>
          <Line>261</Line>
          <Message>The call to DocumentationProvider must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                documentation = DocumentationProvider.GetDocumentation(type);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1354</ViolationID>
            <ID>1354</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1355</ID>
          <Line>259</Line>
          <Message>The call to DocumentationProvider must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            if (DocumentationProvider != null)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1355</ViolationID>
            <ID>1355</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1356</ID>
          <Line>275</Line>
          <Message>The call to AnnotationTextGenerator must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                if (AnnotationTextGenerator.TryGetValue(attribute.GetType(), out textGenerator))</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1356</ViolationID>
            <ID>1356</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1358</ID>
          <Line>311</Line>
          <Message>The call to GetOrCreateModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            ModelDescription collectionModelDescription = GetOrCreateModelDescription(elementType);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1358</ViolationID>
            <ID>1358</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1361</ID>
          <Line>331</Line>
          <Message>The call to CreateDefaultDocumentation must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                Documentation = CreateDefaultDocumentation(modelType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1361</ViolationID>
            <ID>1361</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1363</ID>
          <Line>334</Line>
          <Message>The call to GeneratedModels must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            GeneratedModels.Add(complexModelDescription.Name, complexModelDescription);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1363</ViolationID>
            <ID>1363</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1365</ID>
          <Line>348</Line>
          <Message>The call to DocumentationProvider must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                        propertyModel.Documentation = DocumentationProvider.GetDocumentation(property);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1365</ViolationID>
            <ID>1365</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1366</ID>
          <Line>346</Line>
          <Message>The call to DocumentationProvider must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                    if (DocumentationProvider != null)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1366</ViolationID>
            <ID>1366</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1369</ID>
          <Line>351</Line>
          <Message>The call to GenerateAnnotations must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                    GenerateAnnotations(property, propertyModel);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1369</ViolationID>
            <ID>1369</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1371</ID>
          <Line>353</Line>
          <Message>The call to GetOrCreateModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                    propertyModel.TypeDescription = GetOrCreateModelDescription(property.PropertyType);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1371</ViolationID>
            <ID>1371</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1374</ID>
          <Line>369</Line>
          <Message>The call to DocumentationProvider must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                        propertyModel.Documentation = DocumentationProvider.GetDocumentation(field);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1374</ViolationID>
            <ID>1374</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1376</ID>
          <Line>367</Line>
          <Message>The call to DocumentationProvider must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                    if (DocumentationProvider != null)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1376</ViolationID>
            <ID>1376</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1377</ID>
          <Line>373</Line>
          <Message>The call to GetOrCreateModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                    propertyModel.TypeDescription = GetOrCreateModelDescription(field.FieldType);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1377</ViolationID>
            <ID>1377</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1378</ID>
          <Line>382</Line>
          <Message>The call to GetOrCreateModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            ModelDescription keyModelDescription = GetOrCreateModelDescription(keyType);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1378</ViolationID>
            <ID>1378</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1379</ID>
          <Line>383</Line>
          <Message>The call to GetOrCreateModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            ModelDescription valueModelDescription = GetOrCreateModelDescription(valueType);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1379</ViolationID>
            <ID>1379</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1380</ID>
          <Line>400</Line>
          <Message>The call to CreateDefaultDocumentation must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                Documentation = CreateDefaultDocumentation(modelType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1380</ViolationID>
            <ID>1380</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1381</ID>
          <Line>414</Line>
          <Message>The call to DocumentationProvider must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                        enumValue.Documentation = DocumentationProvider.GetDocumentation(field);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1381</ViolationID>
            <ID>1381</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1382</ID>
          <Line>412</Line>
          <Message>The call to DocumentationProvider must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                    if (DocumentationProvider != null)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1382</ViolationID>
            <ID>1382</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1383</ID>
          <Line>419</Line>
          <Message>The call to GeneratedModels must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            GeneratedModels.Add(enumDescription.Name, enumDescription);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1383</ViolationID>
            <ID>1383</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1384</ID>
          <Line>426</Line>
          <Message>The call to GetOrCreateModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            ModelDescription keyModelDescription = GetOrCreateModelDescription(keyType);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1384</ViolationID>
            <ID>1384</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1385</ID>
          <Line>427</Line>
          <Message>The call to GetOrCreateModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            ModelDescription valueModelDescription = GetOrCreateModelDescription(valueType);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1385</ViolationID>
            <ID>1385</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1386</ID>
          <Line>444</Line>
          <Message>The call to CreateDefaultDocumentation must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>                Documentation = CreateDefaultDocumentation(modelType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1386</ViolationID>
            <ID>1386</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1387</ID>
          <Line>446</Line>
          <Message>The call to GeneratedModels must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            GeneratedModels.Add(simpleModelDescription.Name, simpleModelDescription);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1387</ViolationID>
            <ID>1387</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1388</ID>
          <Line>66</Line>
          <Message>Use the built-in type alias 'short' rather than Int16 or System.Int16.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            { typeof(Int16), "integer" },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1388</ViolationID>
            <ID>1388</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1389</ID>
          <Line>67</Line>
          <Message>Use the built-in type alias 'int' rather than Int32 or System.Int32.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            { typeof(Int32), "integer" },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1389</ViolationID>
            <ID>1389</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1390</ID>
          <Line>68</Line>
          <Message>Use the built-in type alias 'long' rather than Int64 or System.Int64.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            { typeof(Int64), "integer" },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1390</ViolationID>
            <ID>1390</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1391</ID>
          <Line>69</Line>
          <Message>Use the built-in type alias 'ushort' rather than UInt16 or System.UInt16.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            { typeof(UInt16), "unsigned integer" },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1391</ViolationID>
            <ID>1391</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1392</ID>
          <Line>70</Line>
          <Message>Use the built-in type alias 'uint' rather than UInt32 or System.UInt32.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            { typeof(UInt32), "unsigned integer" },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1392</ViolationID>
            <ID>1392</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1393</ID>
          <Line>71</Line>
          <Message>Use the built-in type alias 'ulong' rather than UInt64 or System.UInt64.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            { typeof(UInt64), "unsigned integer" },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1393</ViolationID>
            <ID>1393</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1394</ID>
          <Line>72</Line>
          <Message>Use the built-in type alias 'byte' rather than Byte or System.Byte.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            { typeof(Byte), "byte" },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1394</ViolationID>
            <ID>1394</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1395</ID>
          <Line>73</Line>
          <Message>Use the built-in type alias 'char' rather than Char or System.Char.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            { typeof(Char), "character" },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1395</ViolationID>
            <ID>1395</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1396</ID>
          <Line>74</Line>
          <Message>Use the built-in type alias 'sbyte' rather than SByte or System.SByte.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            { typeof(SByte), "signed byte" },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1396</ViolationID>
            <ID>1396</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1397</ID>
          <Line>76</Line>
          <Message>Use the built-in type alias 'float' rather than Single or System.Single.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            { typeof(Single), "decimal number" },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1397</ViolationID>
            <ID>1397</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1398</ID>
          <Line>77</Line>
          <Message>Use the built-in type alias 'double' rather than Double or System.Double.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            { typeof(Double), "decimal number" },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1398</ViolationID>
            <ID>1398</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1399</ID>
          <Line>78</Line>
          <Message>Use the built-in type alias 'decimal' rather than Decimal or System.Decimal.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            { typeof(Decimal), "decimal number" },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1399</ViolationID>
            <ID>1399</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1400</ID>
          <Line>79</Line>
          <Message>Use the built-in type alias 'string' rather than String or System.String.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            { typeof(String), "string" },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1400</ViolationID>
            <ID>1400</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1401</ID>
          <Line>84</Line>
          <Message>Use the built-in type alias 'bool' rather than Boolean or System.Boolean.</Message>
          <SourceCodeFileID>103</SourceCodeFileID>
          <SourceCodeLine>            { typeof(Boolean), "boolean" },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1401</ViolationID>
            <ID>1401</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>104</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ModelDescriptions\ModelNameAttribute.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ModelNameAttribute.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1291</ID>
          <Line>11</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>104</SourceCodeFileID>
          <SourceCodeLine>        public ModelNameAttribute(string name)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1291</ViolationID>
            <ID>1291</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1293</ID>
          <Line>16</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>104</SourceCodeFileID>
          <SourceCodeLine>        public string Name { get; private set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1293</ViolationID>
            <ID>1293</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1295</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>104</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1295</ViolationID>
            <ID>1295</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1296</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>104</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1296</ViolationID>
            <ID>1296</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1297</ID>
          <Line>13</Line>
          <Message>The call to Name must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>104</SourceCodeFileID>
          <SourceCodeLine>            Name = name;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1297</ViolationID>
            <ID>1297</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>105</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ModelDescriptions\ModelNameHelper.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ModelNameHelper.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1298</ID>
          <Line>8</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>105</SourceCodeFileID>
          <SourceCodeLine>    internal static class ModelNameHelper</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1298</ViolationID>
            <ID>1298</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1300</ID>
          <Line>11</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>105</SourceCodeFileID>
          <SourceCodeLine>        public static string GetModelName(Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1300</ViolationID>
            <ID>1300</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1301</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>105</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1301</ViolationID>
            <ID>1301</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1302</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>105</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1302</ViolationID>
            <ID>1302</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1303</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>105</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1303</ViolationID>
            <ID>1303</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1305</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>105</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1305</ViolationID>
            <ID>1305</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1306</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>105</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1306</ViolationID>
            <ID>1306</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>106</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ModelDescriptions\ParameterAnnotation.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ParameterAnnotation.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1311</ID>
          <Line>5</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>106</SourceCodeFileID>
          <SourceCodeLine>    public class ParameterAnnotation</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1311</ViolationID>
            <ID>1311</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1313</ID>
          <Line>7</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>106</SourceCodeFileID>
          <SourceCodeLine>        public Attribute AnnotationAttribute { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1313</ViolationID>
            <ID>1313</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1315</ID>
          <Line>9</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>106</SourceCodeFileID>
          <SourceCodeLine>        public string Documentation { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1315</ViolationID>
            <ID>1315</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1316</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>106</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1316</ViolationID>
            <ID>1316</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1318</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>106</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1318</ViolationID>
            <ID>1318</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>107</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ModelDescriptions\ParameterDescription.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ParameterDescription.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1323</ID>
          <Line>5</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>107</SourceCodeFileID>
          <SourceCodeLine>    public class ParameterDescription</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1323</ViolationID>
            <ID>1323</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1324</ID>
          <Line>7</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>107</SourceCodeFileID>
          <SourceCodeLine>        public ParameterDescription()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1324</ViolationID>
            <ID>1324</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1326</ID>
          <Line>12</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>107</SourceCodeFileID>
          <SourceCodeLine>        public Collection&lt;ParameterAnnotation&gt; Annotations { get; private set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1326</ViolationID>
            <ID>1326</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1327</ID>
          <Line>14</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>107</SourceCodeFileID>
          <SourceCodeLine>        public string Documentation { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1327</ViolationID>
            <ID>1327</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1328</ID>
          <Line>16</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>107</SourceCodeFileID>
          <SourceCodeLine>        public string Name { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1328</ViolationID>
            <ID>1328</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1329</ID>
          <Line>18</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>107</SourceCodeFileID>
          <SourceCodeLine>        public ModelDescription TypeDescription { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1329</ViolationID>
            <ID>1329</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1331</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>107</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.ObjectModel;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1331</ViolationID>
            <ID>1331</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1333</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>107</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.ObjectModel;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1333</ViolationID>
            <ID>1333</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1335</ID>
          <Line>9</Line>
          <Message>The call to Annotations must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>107</SourceCodeFileID>
          <SourceCodeLine>            Annotations = new Collection&lt;ParameterAnnotation&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1335</ViolationID>
            <ID>1335</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>108</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\ModelDescriptions\SimpleTypeModelDescription.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>SimpleTypeModelDescription.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1339</ID>
          <Line>3</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>108</SourceCodeFileID>
          <SourceCodeLine>    public class SimpleTypeModelDescription : ModelDescription</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1339</ViolationID>
            <ID>1339</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1341</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>108</SourceCodeFileID>
          <SourceCodeLine>namespace SampleProject.WebApi.Areas.HelpPage.ModelDescriptions</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1341</ViolationID>
            <ID>1341</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>109</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\Models\HelpPageApiModel.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>HelpPageApiModel.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1348</ID>
          <Line>33</Line>
          <Message>Because the property only contains a visible get accessor, the documentation summary text must begin with 'Gets '.</Message>
          <SourceCodeFileID>109</SourceCodeFileID>
          <SourceCodeLine>        public Collection&lt;ParameterDescription&gt; UriParameters { get; private set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1624</CheckId>
            <Description>Validates that a property's summary description text does not include a description for a set accessor when the property exposes only a get accessor.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PropertySummaryDocumentationMustOmitSetAccessorWithRestrictedAccess</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1348</ViolationID>
            <ID>1348</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1351</ID>
          <Line>87</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>109</SourceCodeFileID>
          <SourceCodeLine>        private static IList&lt;ParameterDescription&gt; GetParameterDescriptions(ModelDescription modelDescription)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1351</ViolationID>
            <ID>1351</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1353</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>109</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1353</ViolationID>
            <ID>1353</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1357</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>109</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1357</ViolationID>
            <ID>1357</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1359</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>109</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.ObjectModel;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1359</ViolationID>
            <ID>1359</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1360</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>109</SourceCodeFileID>
          <SourceCodeLine>using System.Net.Http.Headers;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1360</ViolationID>
            <ID>1360</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1362</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>109</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http.Description;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1362</ViolationID>
            <ID>1362</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1364</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>109</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.WebApi.Areas.HelpPage.ModelDescriptions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1364</ViolationID>
            <ID>1364</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1367</ID>
          <Line>19</Line>
          <Message>The call to UriParameters must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>109</SourceCodeFileID>
          <SourceCodeLine>            UriParameters = new Collection&lt;ParameterDescription&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1367</ViolationID>
            <ID>1367</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1368</ID>
          <Line>20</Line>
          <Message>The call to SampleRequests must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>109</SourceCodeFileID>
          <SourceCodeLine>            SampleRequests = new Dictionary&lt;MediaTypeHeaderValue, object&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1368</ViolationID>
            <ID>1368</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1370</ID>
          <Line>21</Line>
          <Message>The call to SampleResponses must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>109</SourceCodeFileID>
          <SourceCodeLine>            SampleResponses = new Dictionary&lt;MediaTypeHeaderValue, object&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1370</ViolationID>
            <ID>1370</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1372</ID>
          <Line>22</Line>
          <Message>The call to ErrorMessages must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>109</SourceCodeFileID>
          <SourceCodeLine>            ErrorMessages = new Collection&lt;string&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1372</ViolationID>
            <ID>1372</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1373</ID>
          <Line>52</Line>
          <Message>The call to RequestModelDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>109</SourceCodeFileID>
          <SourceCodeLine>                return GetParameterDescriptions(RequestModelDescription);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1373</ViolationID>
            <ID>1373</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1375</ID>
          <Line>68</Line>
          <Message>The call to ResourceDescription must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>109</SourceCodeFileID>
          <SourceCodeLine>                return GetParameterDescriptions(ResourceDescription);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1375</ViolationID>
            <ID>1375</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>110</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\SampleGeneration\HelpPageSampleGenerator.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>HelpPageSampleGenerator.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1402</ID>
          <Line>178</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>        public virtual object GetSampleObject(Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1402</ViolationID>
            <ID>1402</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1404</ID>
          <Line>215</Line>
          <Message>The documentation text within the return tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>        public virtual Type ResolveHttpRequestMessageType(ApiDescription api)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1404</ViolationID>
            <ID>1404</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1406</ID>
          <Line>234</Line>
          <Message>The documentation header must contain a returns tag since the element has a return value.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>        public virtual Type ResolveType(ApiDescription api, string controllerName, string actionName, IEnumerable&lt;string&gt; parameterNames, SampleDirection sampleDirection, out Collection&lt;MediaTypeFormatter&gt; formatters)</SourceCodeLine>
          <Rules>
            <CheckId>SA1615</CheckId>
            <Description>Validates that an element's documentation header contains a returns tag if the element has a return value.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementReturnValueMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1406</ViolationID>
            <ID>1406</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1408</ID>
          <Line>288</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>        public virtual object WriteSampleObjectUsingFormatter(MediaTypeFormatter formatter, object value, Type type, MediaTypeHeaderValue mediaType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1408</ViolationID>
            <ID>1408</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1410</ID>
          <Line>288</Line>
          <Message>The returns section in the documentation header must not be empty.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>        public virtual object WriteSampleObjectUsingFormatter(MediaTypeFormatter formatter, object value, Type type, MediaTypeHeaderValue mediaType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1616</CheckId>
            <Description>Validates that an element's returns tag contains a filled-in description.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementReturnValueDocumentationMustHaveText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1410</ViolationID>
            <ID>1410</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1412</ID>
          <Line>357</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>        internal static Exception UnwrapException(Exception exception)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1412</ViolationID>
            <ID>1412</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1414</ID>
          <Line>368</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>        private static object DefaultSampleObjectFactory(HelpPageSampleGenerator sampleGenerator, Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1414</ViolationID>
            <ID>1414</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1417</ID>
          <Line>376</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>        private static string TryFormatJson(string str)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1417</ViolationID>
            <ID>1417</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1418</ID>
          <Line>391</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>        private static string TryFormatXml(string str)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1418</ViolationID>
            <ID>1418</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1420</ID>
          <Line>405</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>        private static bool IsFormatSupported(SampleDirection sampleDirection, MediaTypeFormatter formatter, Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1420</ViolationID>
            <ID>1420</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1422</ID>
          <Line>417</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>        private IEnumerable&lt;KeyValuePair&lt;HelpPageSampleKey, object&gt;&gt; GetAllActionSamples(string controllerName, string actionName, IEnumerable&lt;string&gt; parameterNames, SampleDirection sampleDirection)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1422</ViolationID>
            <ID>1422</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1425</ID>
          <Line>433</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>        private static object WrapSampleIfString(object sample)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1425</ViolationID>
            <ID>1425</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1427</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1427</ViolationID>
            <ID>1427</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1432</ID>
          <Line>95</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1432</ViolationID>
            <ID>1432</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1434</ID>
          <Line>239</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1434</ViolationID>
            <ID>1434</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1435</ID>
          <Line>243</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1435</ViolationID>
            <ID>1435</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1436</ID>
          <Line>256</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>                }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1436</ViolationID>
            <ID>1436</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1439</ID>
          <Line>293</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1439</ViolationID>
            <ID>1439</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1442</ID>
          <Line>347</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>                }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1442</ViolationID>
            <ID>1442</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1444</ID>
          <Line>363</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1444</ViolationID>
            <ID>1444</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1447</ID>
          <Line>413</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1447</ViolationID>
            <ID>1447</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1458</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1458</ViolationID>
            <ID>1458</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1460</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1460</ViolationID>
            <ID>1460</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1462</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.ObjectModel;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1462</ViolationID>
            <ID>1462</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1465</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1465</ViolationID>
            <ID>1465</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1467</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1467</ViolationID>
            <ID>1467</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1470</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1470</ViolationID>
            <ID>1470</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1471</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using System.IO;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1471</ViolationID>
            <ID>1471</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1472</ID>
          <Line>8</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1472</ViolationID>
            <ID>1472</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1473</ID>
          <Line>9</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using System.Net.Http;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1473</ViolationID>
            <ID>1473</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1474</ID>
          <Line>10</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using System.Net.Http.Formatting;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1474</ViolationID>
            <ID>1474</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1476</ID>
          <Line>11</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using System.Net.Http.Headers;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1476</ViolationID>
            <ID>1476</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1478</ID>
          <Line>12</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http.Description;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1478</ViolationID>
            <ID>1478</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1480</ID>
          <Line>13</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using System.Xml.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1480</ViolationID>
            <ID>1480</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1483</ID>
          <Line>14</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>using Newtonsoft.Json;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1483</ViolationID>
            <ID>1483</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1490</ID>
          <Line>433</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>        private static object WrapSampleIfString(object sample)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1490</ViolationID>
            <ID>1490</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1495</ID>
          <Line>28</Line>
          <Message>The call to ActualHttpMessageTypes must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            ActualHttpMessageTypes = new Dictionary&lt;HelpPageSampleKey, Type&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1495</ViolationID>
            <ID>1495</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1497</ID>
          <Line>29</Line>
          <Message>The call to ActionSamples must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            ActionSamples = new Dictionary&lt;HelpPageSampleKey, object&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1497</ViolationID>
            <ID>1497</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1499</ID>
          <Line>30</Line>
          <Message>The call to SampleObjects must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            SampleObjects = new Dictionary&lt;Type, object&gt;();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1499</ViolationID>
            <ID>1499</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1501</ID>
          <Line>31</Line>
          <Message>The call to SampleObjectFactories must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            SampleObjectFactories = new List&lt;Func&lt;HelpPageSampleGenerator, Type, object&gt;&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1501</ViolationID>
            <ID>1501</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1503</ID>
          <Line>71</Line>
          <Message>The call to GetSample must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            return GetSample(api, SampleDirection.Request);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1503</ViolationID>
            <ID>1503</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1505</ID>
          <Line>81</Line>
          <Message>The call to GetSample must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            return GetSample(api, SampleDirection.Response);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1505</ViolationID>
            <ID>1505</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1508</ID>
          <Line>100</Line>
          <Message>The call to ResolveType must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            Type type = ResolveType(api, controllerName, actionName, parameterNames, sampleDirection, out formatters);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1508</ViolationID>
            <ID>1508</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1510</ID>
          <Line>104</Line>
          <Message>The call to GetAllActionSamples must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            var actionSamples = GetAllActionSamples(controllerName, actionName, parameterNames, sampleDirection);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1510</ViolationID>
            <ID>1510</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1511</ID>
          <Line>114</Line>
          <Message>The call to GetSampleObject must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>                object sampleObject = GetSampleObject(type);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1511</ViolationID>
            <ID>1511</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1512</ID>
          <Line>121</Line>
          <Message>The call to GetActionSample must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>                            object sample = GetActionSample(controllerName, actionName, parameterNames, type, formatter, mediaType, sampleDirection);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1512</ViolationID>
            <ID>1512</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1513</ID>
          <Line>126</Line>
          <Message>The call to WriteSampleObjectUsingFormatter must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>                                sample = WriteSampleObjectUsingFormatter(formatter, sampleObject, type, mediaType);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1513</ViolationID>
            <ID>1513</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1514</ID>
          <Line>157</Line>
          <Message>The call to ActionSamples must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            if (ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType, sampleDirection, controllerName, actionName, parameterNames), out sample) ||</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1514</ViolationID>
            <ID>1514</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1515</ID>
          <Line>158</Line>
          <Message>The call to ActionSamples must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>                ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType, sampleDirection, controllerName, actionName, new[] { "*" }), out sample) ||</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1515</ViolationID>
            <ID>1515</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1516</ID>
          <Line>159</Line>
          <Message>The call to ActionSamples must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>                ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType, type), out sample) ||</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1516</ViolationID>
            <ID>1516</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1517</ID>
          <Line>160</Line>
          <Message>The call to ActionSamples must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>                ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType), out sample))</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1517</ViolationID>
            <ID>1517</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1518</ID>
          <Line>185</Line>
          <Message>The call to SampleObjectFactories must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>                foreach (Func&lt;HelpPageSampleGenerator, Type, object&gt; factory in SampleObjectFactories)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1518</ViolationID>
            <ID>1518</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1519</ID>
          <Line>182</Line>
          <Message>The call to SampleObjects must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            if (!SampleObjects.TryGetValue(type, out sampleObject))</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1519</ViolationID>
            <ID>1519</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1520</ID>
          <Line>221</Line>
          <Message>The call to ResolveType must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            return ResolveType(api, controllerName, actionName, parameterNames, SampleDirection.Request, out formatters);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1520</ViolationID>
            <ID>1520</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1521</ID>
          <Line>245</Line>
          <Message>The call to ActualHttpMessageTypes must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            if (ActualHttpMessageTypes.TryGetValue(new HelpPageSampleKey(sampleDirection, controllerName, actionName, parameterNames), out type) ||</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1521</ViolationID>
            <ID>1521</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1522</ID>
          <Line>246</Line>
          <Message>The call to ActualHttpMessageTypes must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>                ActualHttpMessageTypes.TryGetValue(new HelpPageSampleKey(sampleDirection, controllerName, actionName, new[] { "*" }), out type))</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1522</ViolationID>
            <ID>1522</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1523</ID>
          <Line>420</Line>
          <Message>The call to ActionSamples must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>110</SourceCodeFileID>
          <SourceCodeLine>            foreach (var sample in ActionSamples)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1523</ViolationID>
            <ID>1523</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>111</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\SampleGeneration\HelpPageSampleKey.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>HelpPageSampleKey.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1403</ID>
          <Line>17</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the HelpPageSampleKey class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>        public HelpPageSampleKey(MediaTypeHeaderValue mediaType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1403</ViolationID>
            <ID>1403</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1405</ID>
          <Line>35</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the HelpPageSampleKey class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>        public HelpPageSampleKey(MediaTypeHeaderValue mediaType, Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1405</ViolationID>
            <ID>1405</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1407</ID>
          <Line>53</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the HelpPageSampleKey class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>        public HelpPageSampleKey(SampleDirection sampleDirection, string controllerName, string actionName, IEnumerable&lt;string&gt; parameterNames)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1407</ViolationID>
            <ID>1407</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1409</ID>
          <Line>86</Line>
          <Message>The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the HelpPageSampleKey class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>        public HelpPageSampleKey(MediaTypeHeaderValue mediaType, SampleDirection sampleDirection, string controllerName, string actionName, IEnumerable&lt;string&gt; parameterNames)</SourceCodeLine>
          <Rules>
            <CheckId>SA1642</CheckId>
            <Description>Verifies that a constructor's summary text begins with the appropriate wording.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstructorSummaryDocumentationMustBeginWithStandardText</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1409</ViolationID>
            <ID>1409</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1411</ID>
          <Line>126</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>        public Type ParameterType { get; private set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1411</ViolationID>
            <ID>1411</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1413</ID>
          <Line>133</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>        public override bool Equals(object obj)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1413</ViolationID>
            <ID>1413</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1415</ID>
          <Line>149</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>        public override int GetHashCode()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1415</ViolationID>
            <ID>1415</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1416</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1416</ViolationID>
            <ID>1416</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1419</ID>
          <Line>58</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1419</ViolationID>
            <ID>1419</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1421</ID>
          <Line>62</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1421</ViolationID>
            <ID>1421</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1423</ID>
          <Line>66</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1423</ViolationID>
            <ID>1423</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1424</ID>
          <Line>155</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1424</ViolationID>
            <ID>1424</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1426</ID>
          <Line>159</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1426</ViolationID>
            <ID>1426</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1428</ID>
          <Line>163</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1428</ViolationID>
            <ID>1428</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1429</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1429</ViolationID>
            <ID>1429</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1430</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1430</ViolationID>
            <ID>1430</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1431</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1431</ViolationID>
            <ID>1431</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1433</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>using System.Net.Http.Headers;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1433</ViolationID>
            <ID>1433</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1437</ID>
          <Line>24</Line>
          <Message>The call to ActionName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            ActionName = String.Empty;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1437</ViolationID>
            <ID>1437</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1438</ID>
          <Line>25</Line>
          <Message>The call to ControllerName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            ControllerName = String.Empty;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1438</ViolationID>
            <ID>1438</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1440</ID>
          <Line>26</Line>
          <Message>The call to MediaType must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            MediaType = mediaType;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1440</ViolationID>
            <ID>1440</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1441</ID>
          <Line>27</Line>
          <Message>The call to ParameterNames must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            ParameterNames = new HashSet&lt;string&gt;(StringComparer.OrdinalIgnoreCase);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1441</ViolationID>
            <ID>1441</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1443</ID>
          <Line>43</Line>
          <Message>The call to ParameterType must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            ParameterType = type;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1443</ViolationID>
            <ID>1443</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1445</ID>
          <Line>72</Line>
          <Message>The call to ControllerName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            ControllerName = controllerName;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1445</ViolationID>
            <ID>1445</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1446</ID>
          <Line>73</Line>
          <Message>The call to ActionName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            ActionName = actionName;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1446</ViolationID>
            <ID>1446</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1448</ID>
          <Line>74</Line>
          <Message>The call to ParameterNames must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            ParameterNames = new HashSet&lt;string&gt;(parameterNames, StringComparer.OrdinalIgnoreCase);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1448</ViolationID>
            <ID>1448</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1449</ID>
          <Line>75</Line>
          <Message>The call to SampleDirection must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            SampleDirection = sampleDirection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1449</ViolationID>
            <ID>1449</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1450</ID>
          <Line>94</Line>
          <Message>The call to MediaType must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            MediaType = mediaType;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1450</ViolationID>
            <ID>1450</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1451</ID>
          <Line>141</Line>
          <Message>The call to ControllerName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            return String.Equals(ControllerName, otherKey.ControllerName, StringComparison.OrdinalIgnoreCase) &amp;&amp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1451</ViolationID>
            <ID>1451</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1452</ID>
          <Line>142</Line>
          <Message>The call to ActionName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>                String.Equals(ActionName, otherKey.ActionName, StringComparison.OrdinalIgnoreCase) &amp;&amp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1452</ViolationID>
            <ID>1452</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1453</ID>
          <Line>143</Line>
          <Message>The call to MediaType must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>                (MediaType == otherKey.MediaType || (MediaType != null &amp;&amp; MediaType.Equals(otherKey.MediaType))) &amp;&amp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1453</ViolationID>
            <ID>1453</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1454</ID>
          <Line>144</Line>
          <Message>The call to ParameterType must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>                ParameterType == otherKey.ParameterType &amp;&amp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1454</ViolationID>
            <ID>1454</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1455</ID>
          <Line>145</Line>
          <Message>The call to SampleDirection must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>                SampleDirection == otherKey.SampleDirection &amp;&amp;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1455</ViolationID>
            <ID>1455</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1456</ID>
          <Line>146</Line>
          <Message>The call to ParameterNames must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>                ParameterNames.SetEquals(otherKey.ParameterNames);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1456</ViolationID>
            <ID>1456</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1457</ID>
          <Line>151</Line>
          <Message>The call to ControllerName must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            int hashCode = ControllerName.ToUpperInvariant().GetHashCode() ^ ActionName.ToUpperInvariant().GetHashCode();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1457</ViolationID>
            <ID>1457</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1459</ID>
          <Line>154</Line>
          <Message>The call to MediaType must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>                hashCode ^= MediaType.GetHashCode();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1459</ViolationID>
            <ID>1459</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1461</ID>
          <Line>152</Line>
          <Message>The call to MediaType must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            if (MediaType != null)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1461</ViolationID>
            <ID>1461</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1463</ID>
          <Line>158</Line>
          <Message>The call to SampleDirection must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>                hashCode ^= SampleDirection.GetHashCode();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1463</ViolationID>
            <ID>1463</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1464</ID>
          <Line>156</Line>
          <Message>The call to SampleDirection must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            if (SampleDirection != null)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1464</ViolationID>
            <ID>1464</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1466</ID>
          <Line>162</Line>
          <Message>The call to ParameterType must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>                hashCode ^= ParameterType.GetHashCode();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1466</ViolationID>
            <ID>1466</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1468</ID>
          <Line>160</Line>
          <Message>The call to ParameterType must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            if (ParameterType != null)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1468</ViolationID>
            <ID>1468</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1469</ID>
          <Line>164</Line>
          <Message>The call to ParameterNames must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>111</SourceCodeFileID>
          <SourceCodeLine>            foreach (string parameterName in ParameterNames)</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1469</ViolationID>
            <ID>1469</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>112</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\SampleGeneration\ImageSample.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ImageSample.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1475</ID>
          <Line>23</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>112</SourceCodeFileID>
          <SourceCodeLine>        public string Src { get; private set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1475</ViolationID>
            <ID>1475</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1477</ID>
          <Line>25</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>112</SourceCodeFileID>
          <SourceCodeLine>        public override bool Equals(object obj)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1477</ViolationID>
            <ID>1477</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1479</ID>
          <Line>31</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>112</SourceCodeFileID>
          <SourceCodeLine>        public override int GetHashCode()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1479</ViolationID>
            <ID>1479</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1481</ID>
          <Line>36</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>112</SourceCodeFileID>
          <SourceCodeLine>        public override string ToString()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1481</ViolationID>
            <ID>1481</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1482</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>112</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1482</ViolationID>
            <ID>1482</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1484</ID>
          <Line>19</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>112</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1484</ViolationID>
            <ID>1484</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1485</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>112</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1485</ViolationID>
            <ID>1485</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1486</ID>
          <Line>20</Line>
          <Message>The call to Src must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>112</SourceCodeFileID>
          <SourceCodeLine>            Src = src;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1486</ViolationID>
            <ID>1486</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1487</ID>
          <Line>28</Line>
          <Message>The call to Src must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>112</SourceCodeFileID>
          <SourceCodeLine>            return other != null &amp;&amp; Src == other.Src;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1487</ViolationID>
            <ID>1487</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1488</ID>
          <Line>33</Line>
          <Message>The call to Src must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>112</SourceCodeFileID>
          <SourceCodeLine>            return Src.GetHashCode();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1488</ViolationID>
            <ID>1488</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1489</ID>
          <Line>38</Line>
          <Message>The call to Src must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>112</SourceCodeFileID>
          <SourceCodeLine>            return Src;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1489</ViolationID>
            <ID>1489</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>113</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\SampleGeneration\InvalidSample.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>InvalidSample.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1491</ID>
          <Line>10</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>113</SourceCodeFileID>
          <SourceCodeLine>        public InvalidSample(string errorMessage)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1491</ViolationID>
            <ID>1491</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1492</ID>
          <Line>19</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>113</SourceCodeFileID>
          <SourceCodeLine>        public string ErrorMessage { get; private set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1492</ViolationID>
            <ID>1492</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1493</ID>
          <Line>21</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>113</SourceCodeFileID>
          <SourceCodeLine>        public override bool Equals(object obj)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1493</ViolationID>
            <ID>1493</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1494</ID>
          <Line>27</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>113</SourceCodeFileID>
          <SourceCodeLine>        public override int GetHashCode()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1494</ViolationID>
            <ID>1494</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1496</ID>
          <Line>32</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>113</SourceCodeFileID>
          <SourceCodeLine>        public override string ToString()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1496</ViolationID>
            <ID>1496</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1498</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>113</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1498</ViolationID>
            <ID>1498</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1500</ID>
          <Line>15</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>113</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1500</ViolationID>
            <ID>1500</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1502</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>113</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1502</ViolationID>
            <ID>1502</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1504</ID>
          <Line>16</Line>
          <Message>The call to ErrorMessage must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>113</SourceCodeFileID>
          <SourceCodeLine>            ErrorMessage = errorMessage;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1504</ViolationID>
            <ID>1504</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1506</ID>
          <Line>24</Line>
          <Message>The call to ErrorMessage must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>113</SourceCodeFileID>
          <SourceCodeLine>            return other != null &amp;&amp; ErrorMessage == other.ErrorMessage;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1506</ViolationID>
            <ID>1506</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1507</ID>
          <Line>29</Line>
          <Message>The call to ErrorMessage must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>113</SourceCodeFileID>
          <SourceCodeLine>            return ErrorMessage.GetHashCode();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1507</ViolationID>
            <ID>1507</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1509</ID>
          <Line>34</Line>
          <Message>The call to ErrorMessage must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>113</SourceCodeFileID>
          <SourceCodeLine>            return ErrorMessage;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1509</ViolationID>
            <ID>1509</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>114</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\SampleGeneration\ObjectGenerator.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ObjectGenerator.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1524</ID>
          <Line>16</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        internal const int DefaultCollectionSize = 2;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1524</ViolationID>
            <ID>1524</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1525</ID>
          <Line>17</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private readonly SimpleTypeObjectGenerator SimpleObjectGenerator = new SimpleTypeObjectGenerator();</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1525</ViolationID>
            <ID>1525</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1526</ID>
          <Line>33</Line>
          <Message>The documentation text within the param tag must be at least 10 characters in length. Documentation failing to meet this guideline most likely does not follow a proper grammatical structure required for documentation text.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        public object GenerateObject(Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1632</CheckId>
            <Description>Verifies that the documentation text within a documentation section meets or exceeds a minimum length.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>DocumentationTextMustMeetMinimumCharacterLength</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1526</ViolationID>
            <ID>1526</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1527</ID>
          <Line>39</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private object GenerateObject(Type type, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1527</ViolationID>
            <ID>1527</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1530</ID>
          <Line>104</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateGenericType(Type type, int collectionSize, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1530</ViolationID>
            <ID>1530</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1532</ID>
          <Line>168</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateTuple(Type type, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1532</ViolationID>
            <ID>1532</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1533</ID>
          <Line>187</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static bool IsTuple(Type genericTypeDefinition)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1533</ViolationID>
            <ID>1533</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1535</ID>
          <Line>199</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateKeyValuePair(Type keyValuePairType, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1535</ViolationID>
            <ID>1535</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1537</ID>
          <Line>216</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateArray(Type arrayType, int size, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1537</ViolationID>
            <ID>1537</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1540</ID>
          <Line>237</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateDictionary(Type dictionaryType, int size, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1540</ViolationID>
            <ID>1540</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1543</ID>
          <Line>272</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateEnum(Type enumType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1543</ViolationID>
            <ID>1543</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1545</ID>
          <Line>282</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateQueryable(Type queryableType, int size, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1545</ViolationID>
            <ID>1545</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1547</ID>
          <Line>309</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateCollection(Type collectionType, int size, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1547</ViolationID>
            <ID>1547</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1550</ID>
          <Line>333</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateNullable(Type nullableType, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1550</ViolationID>
            <ID>1550</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1553</ID>
          <Line>340</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateComplexObject(Type type, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1553</ViolationID>
            <ID>1553</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1554</ID>
          <Line>371</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static void SetPublicProperties(Type type, object obj, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1554</ViolationID>
            <ID>1554</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1555</ID>
          <Line>385</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static void SetPublicFields(Type type, object obj, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1555</ViolationID>
            <ID>1555</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1556</ID>
          <Line>396</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private class SimpleTypeObjectGenerator</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1556</ViolationID>
            <ID>1556</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1557</ID>
          <Line>398</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            private long _index = 0;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1557</ViolationID>
            <ID>1557</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1558</ID>
          <Line>399</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            private static readonly Dictionary&lt;Type, Func&lt;long, object&gt;&gt; DefaultGenerators = InitializeGenerators();</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1558</ViolationID>
            <ID>1558</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1560</ID>
          <Line>402</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            private static Dictionary&lt;Type, Func&lt;long, object&gt;&gt; InitializeGenerators()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1560</ViolationID>
            <ID>1560</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1563</ID>
          <Line>445</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            public static bool CanGenerateObject(Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1563</ViolationID>
            <ID>1563</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1565</ID>
          <Line>450</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            public object GenerateObject(Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1565</ViolationID>
            <ID>1565</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1567</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1567</ViolationID>
            <ID>1567</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1575</ID>
          <Line>178</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1575</ViolationID>
            <ID>1575</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1577</ID>
          <Line>182</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1577</ViolationID>
            <ID>1577</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1579</ID>
          <Line>211</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1579</ViolationID>
            <ID>1579</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1582</ID>
          <Line>278</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1582</ViolationID>
            <ID>1582</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1584</ID>
          <Line>294</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1584</ViolationID>
            <ID>1584</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1586</ID>
          <Line>298</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1586</ViolationID>
            <ID>1586</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1587</ID>
          <Line>364</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1587</ViolationID>
            <ID>1587</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1594</ID>
          <Line>284</Line>
          <Message>The variable name 'isGeneric' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            bool isGeneric = queryableType.IsGenericType;</SourceCodeLine>
          <Rules>
            <CheckId>SA1305</CheckId>
            <Description>Validates that a variable name is not prepended with lower-case characters matching the signature of Hungarian notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FieldNamesMustNotUseHungarianNotation</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1594</ViolationID>
            <ID>1594</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1596</ID>
          <Line>302</Line>
          <Message>The variable name 'asQueryableMethod' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                MethodInfo asQueryableMethod = typeof(Queryable).GetMethod("AsQueryable", new[] { argumentType });</SourceCodeLine>
          <Rules>
            <CheckId>SA1305</CheckId>
            <Description>Validates that a variable name is not prepended with lower-case characters matching the signature of Hungarian notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FieldNamesMustNotUseHungarianNotation</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1596</ViolationID>
            <ID>1596</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1601</ID>
          <Line>398</Line>
          <Message>Field names must not start with an underscore.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            private long _index = 0;</SourceCodeLine>
          <Rules>
            <CheckId>SA1309</CheckId>
            <Description>Validates that the name of a field does not begin with an underscore.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FieldNamesMustNotBeginWithUnderscore</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1601</ViolationID>
            <ID>1601</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1604</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1604</ViolationID>
            <ID>1604</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1606</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>using System.Collections;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1606</ViolationID>
            <ID>1606</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1608</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1608</ViolationID>
            <ID>1608</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1609</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>using System.Diagnostics.CodeAnalysis;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1609</ViolationID>
            <ID>1609</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1610</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1610</ViolationID>
            <ID>1610</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1611</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1611</ViolationID>
            <ID>1611</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1612</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1612</ViolationID>
            <ID>1612</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1613</ID>
          <Line>104</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateGenericType(Type type, int collectionSize, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1613</ViolationID>
            <ID>1613</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1615</ID>
          <Line>168</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateTuple(Type type, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1615</ViolationID>
            <ID>1615</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1618</ID>
          <Line>187</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static bool IsTuple(Type genericTypeDefinition)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1618</ViolationID>
            <ID>1618</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1620</ID>
          <Line>199</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateKeyValuePair(Type keyValuePairType, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1620</ViolationID>
            <ID>1620</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1622</ID>
          <Line>216</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateArray(Type arrayType, int size, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1622</ViolationID>
            <ID>1622</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1624</ID>
          <Line>237</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateDictionary(Type dictionaryType, int size, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1624</ViolationID>
            <ID>1624</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1627</ID>
          <Line>272</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateEnum(Type enumType)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1627</ViolationID>
            <ID>1627</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1629</ID>
          <Line>282</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateQueryable(Type queryableType, int size, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1629</ViolationID>
            <ID>1629</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1630</ID>
          <Line>309</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateCollection(Type collectionType, int size, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1630</ViolationID>
            <ID>1630</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1631</ID>
          <Line>333</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateNullable(Type nullableType, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1631</ViolationID>
            <ID>1631</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1632</ID>
          <Line>340</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static object GenerateComplexObject(Type type, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1632</ViolationID>
            <ID>1632</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1633</ID>
          <Line>371</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static void SetPublicProperties(Type type, object obj, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1633</ViolationID>
            <ID>1633</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1634</ID>
          <Line>385</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>        private static void SetPublicFields(Type type, object obj, Dictionary&lt;Type, object&gt; createdObjectReferences)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1634</ViolationID>
            <ID>1634</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1635</ID>
          <Line>398</Line>
          <Message>All constant and readonly private fields must be placed before all non-constant, non-readonly private fields.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            private long _index = 0;</SourceCodeLine>
          <Rules>
            <CheckId>SA1203</CheckId>
            <Description>Validates that all constant and readonly elements are placed before non-constant, non readonly elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstantsMustAppearBeforeFields</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1635</ViolationID>
            <ID>1635</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1636</ID>
          <Line>445</Line>
          <Message>All private methods must be placed after all public methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            public static bool CanGenerateObject(Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1202</CheckId>
            <Description>Validates that elements of the same type are placed in order by access.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeOrderedByAccess</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1636</ViolationID>
            <ID>1636</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1637</ID>
          <Line>450</Line>
          <Message>All private methods must be placed after all public methods.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            public object GenerateObject(Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1202</CheckId>
            <Description>Validates that elements of the same type are placed in order by access.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeOrderedByAccess</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1637</ViolationID>
            <ID>1637</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1643</ID>
          <Line>35</Line>
          <Message>The call to GenerateObject must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>            return GenerateObject(type, new Dictionary&lt;Type, object&gt;());</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1643</ViolationID>
            <ID>1643</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1645</ID>
          <Line>45</Line>
          <Message>The call to SimpleObjectGenerator must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    return SimpleObjectGenerator.GenerateObject(type);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1645</ViolationID>
            <ID>1645</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1652</ID>
          <Line>452</Line>
          <Message>The call to _index must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                return DefaultGenerators[type](++_index);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1652</ViolationID>
            <ID>1652</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1655</ID>
          <Line>406</Line>
          <Message>Use the built-in type alias 'bool' rather than Boolean or System.Boolean.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    { typeof(Boolean), index =&gt; true },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1655</ViolationID>
            <ID>1655</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1656</ID>
          <Line>407</Line>
          <Message>Use the built-in type alias 'byte' rather than Byte or System.Byte.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    { typeof(Byte), index =&gt; (Byte)64 },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1656</ViolationID>
            <ID>1656</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1657</ID>
          <Line>408</Line>
          <Message>Use the built-in type alias 'char' rather than Char or System.Char.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    { typeof(Char), index =&gt; (Char)65 },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1657</ViolationID>
            <ID>1657</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1659</ID>
          <Line>412</Line>
          <Message>Use the built-in type alias 'decimal' rather than Decimal or System.Decimal.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    { typeof(Decimal), index =&gt; (Decimal)index },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1659</ViolationID>
            <ID>1659</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1661</ID>
          <Line>413</Line>
          <Message>Use the built-in type alias 'double' rather than Double or System.Double.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    { typeof(Double), index =&gt; (Double)(index + 0.1) },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1661</ViolationID>
            <ID>1661</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1663</ID>
          <Line>415</Line>
          <Message>Use the built-in type alias 'short' rather than Int16 or System.Int16.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    { typeof(Int16), index =&gt; (Int16)(index % Int16.MaxValue) },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1663</ViolationID>
            <ID>1663</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1666</ID>
          <Line>416</Line>
          <Message>Use the built-in type alias 'int' rather than Int32 or System.Int32.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    { typeof(Int32), index =&gt; (Int32)(index % Int32.MaxValue) },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1666</ViolationID>
            <ID>1666</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1669</ID>
          <Line>417</Line>
          <Message>Use the built-in type alias 'long' rather than Int64 or System.Int64.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    { typeof(Int64), index =&gt; (Int64)index },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1669</ViolationID>
            <ID>1669</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1670</ID>
          <Line>418</Line>
          <Message>Use the built-in type alias 'object' rather than Object or System.Object.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    { typeof(Object), index =&gt; new object() },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1670</ViolationID>
            <ID>1670</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1671</ID>
          <Line>419</Line>
          <Message>Use the built-in type alias 'sbyte' rather than SByte or System.SByte.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    { typeof(SByte), index =&gt; (SByte)64 },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1671</ViolationID>
            <ID>1671</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1672</ID>
          <Line>420</Line>
          <Message>Use the built-in type alias 'float' rather than Single or System.Single.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    { typeof(Single), index =&gt; (Single)(index + 0.1) },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1672</ViolationID>
            <ID>1672</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1673</ID>
          <Line>422</Line>
          <Message>Use the built-in type alias 'string' rather than String or System.String.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                        typeof(String), index =&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1673</ViolationID>
            <ID>1673</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1674</ID>
          <Line>433</Line>
          <Message>Use the built-in type alias 'ushort' rather than UInt16 or System.UInt16.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    { typeof(UInt16), index =&gt; (UInt16)(index % UInt16.MaxValue) },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1674</ViolationID>
            <ID>1674</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1675</ID>
          <Line>434</Line>
          <Message>Use the built-in type alias 'uint' rather than UInt32 or System.UInt32.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    { typeof(UInt32), index =&gt; (UInt32)(index % UInt32.MaxValue) },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1675</ViolationID>
            <ID>1675</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1677</ID>
          <Line>435</Line>
          <Message>Use the built-in type alias 'ulong' rather than UInt64 or System.UInt64.</Message>
          <SourceCodeFileID>114</SourceCodeFileID>
          <SourceCodeLine>                    { typeof(UInt64), index =&gt; (UInt64)index },</SourceCodeLine>
          <Rules>
            <CheckId>SA1121</CheckId>
            <Description>Enforces the use of the built-in types rather than the actual types that they represent.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UseBuiltInTypeAlias</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Types</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1677</ViolationID>
            <ID>1677</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>115</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\SampleGeneration\SampleDirection.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>SampleDirection.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1528</ID>
          <Line>8</Line>
          <Message>The enumeration sub-item must have a documentation header.</Message>
          <SourceCodeFileID>115</SourceCodeFileID>
          <SourceCodeLine>        Request = 0,</SourceCodeLine>
          <Rules>
            <CheckId>SA1602</CheckId>
            <Description>Validates that an item within an enumeration contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>EnumerationItemsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1528</ViolationID>
            <ID>1528</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1529</ID>
          <Line>9</Line>
          <Message>The enumeration sub-item must have a documentation header.</Message>
          <SourceCodeFileID>115</SourceCodeFileID>
          <SourceCodeLine>        Response</SourceCodeLine>
          <Rules>
            <CheckId>SA1602</CheckId>
            <Description>Validates that an item within an enumeration contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>EnumerationItemsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1529</ViolationID>
            <ID>1529</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1531</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>115</SourceCodeFileID>
          <SourceCodeLine>namespace SampleProject.WebApi.Areas.HelpPage</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1531</ViolationID>
            <ID>1531</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>116</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\SampleGeneration\TextSample.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>TextSample.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1534</ID>
          <Line>10</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>116</SourceCodeFileID>
          <SourceCodeLine>        public TextSample(string text)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1534</ViolationID>
            <ID>1534</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1536</ID>
          <Line>19</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>116</SourceCodeFileID>
          <SourceCodeLine>        public string Text { get; private set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1536</ViolationID>
            <ID>1536</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1538</ID>
          <Line>21</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>116</SourceCodeFileID>
          <SourceCodeLine>        public override bool Equals(object obj)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1538</ViolationID>
            <ID>1538</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1539</ID>
          <Line>27</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>116</SourceCodeFileID>
          <SourceCodeLine>        public override int GetHashCode()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1539</ViolationID>
            <ID>1539</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1541</ID>
          <Line>32</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>116</SourceCodeFileID>
          <SourceCodeLine>        public override string ToString()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1541</ViolationID>
            <ID>1541</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1542</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>116</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1542</ViolationID>
            <ID>1542</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1544</ID>
          <Line>15</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>116</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1544</ViolationID>
            <ID>1544</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1546</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>116</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1546</ViolationID>
            <ID>1546</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1548</ID>
          <Line>16</Line>
          <Message>The call to Text must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>116</SourceCodeFileID>
          <SourceCodeLine>            Text = text;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1548</ViolationID>
            <ID>1548</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1549</ID>
          <Line>24</Line>
          <Message>The call to Text must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>116</SourceCodeFileID>
          <SourceCodeLine>            return other != null &amp;&amp; Text == other.Text;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1549</ViolationID>
            <ID>1549</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1551</ID>
          <Line>29</Line>
          <Message>The call to Text must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>116</SourceCodeFileID>
          <SourceCodeLine>            return Text.GetHashCode();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1551</ViolationID>
            <ID>1551</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1552</ID>
          <Line>34</Line>
          <Message>The call to Text must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>116</SourceCodeFileID>
          <SourceCodeLine>            return Text;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1552</ViolationID>
            <ID>1552</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>117</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Areas\HelpPage\XmlDocumentationProvider.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>XmlDocumentationProvider.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1559</ID>
          <Line>17</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private XPathNavigator _documentNavigator;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1559</ViolationID>
            <ID>1559</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1561</ID>
          <Line>18</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private const string TypeExpression = "/doc/members/member[@name='T:{0}']";</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1561</ViolationID>
            <ID>1561</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1562</ID>
          <Line>19</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private const string MethodExpression = "/doc/members/member[@name='M:{0}']";</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1562</ViolationID>
            <ID>1562</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1564</ID>
          <Line>20</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private const string PropertyExpression = "/doc/members/member[@name='P:{0}']";</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1564</ViolationID>
            <ID>1564</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1566</ID>
          <Line>21</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private const string FieldExpression = "/doc/members/member[@name='F:{0}']";</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1566</ViolationID>
            <ID>1566</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1568</ID>
          <Line>22</Line>
          <Message>The field must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private const string ParameterExpression = "param[@name='{0}']";</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1568</ViolationID>
            <ID>1568</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1569</ID>
          <Line>38</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        public string GetDocumentation(HttpControllerDescriptor controllerDescriptor)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1569</ViolationID>
            <ID>1569</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1570</ID>
          <Line>44</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        public virtual string GetDocumentation(HttpActionDescriptor actionDescriptor)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1570</ViolationID>
            <ID>1570</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1571</ID>
          <Line>50</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        public virtual string GetDocumentation(HttpParameterDescriptor parameterDescriptor)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1571</ViolationID>
            <ID>1571</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1572</ID>
          <Line>70</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        public string GetResponseDocumentation(HttpActionDescriptor actionDescriptor)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1572</ViolationID>
            <ID>1572</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1573</ID>
          <Line>76</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        public string GetDocumentation(MemberInfo member)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1573</ViolationID>
            <ID>1573</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1574</ID>
          <Line>85</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        public string GetDocumentation(Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1574</ViolationID>
            <ID>1574</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1576</ID>
          <Line>91</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private XPathNavigator GetMethodNode(HttpActionDescriptor actionDescriptor)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1576</ViolationID>
            <ID>1576</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1578</ID>
          <Line>103</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private static string GetMemberName(MethodInfo method)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1578</ViolationID>
            <ID>1578</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1580</ID>
          <Line>116</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private static string GetTagValue(XPathNavigator parentNode, string tagName)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1580</ViolationID>
            <ID>1580</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1581</ID>
          <Line>130</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private XPathNavigator GetTypeNode(Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1581</ViolationID>
            <ID>1581</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1583</ID>
          <Line>137</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private static string GetTypeName(Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1583</ViolationID>
            <ID>1583</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1585</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1585</ViolationID>
            <ID>1585</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1588</ID>
          <Line>33</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1588</ViolationID>
            <ID>1588</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1589</ID>
          <Line>151</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1589</ViolationID>
            <ID>1589</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1590</ID>
          <Line>17</Line>
          <Message>Field names must not start with an underscore.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private XPathNavigator _documentNavigator;</SourceCodeLine>
          <Rules>
            <CheckId>SA1309</CheckId>
            <Description>Validates that the name of a field does not begin with an underscore.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FieldNamesMustNotBeginWithUnderscore</Name>
            <Namespace>Microsoft.StyleCop.CSharp.NamingRules</Namespace>
            <Warning>false</Warning>
            <ViolationID>1590</ViolationID>
            <ID>1590</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1591</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1591</ViolationID>
            <ID>1591</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1592</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>using System.Globalization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1592</ViolationID>
            <ID>1592</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1593</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>using System.Linq;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1593</ViolationID>
            <ID>1593</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1595</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1595</ViolationID>
            <ID>1595</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1597</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http.Controllers;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1597</ViolationID>
            <ID>1597</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1598</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http.Description;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1598</ViolationID>
            <ID>1598</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1599</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>using System.Xml.XPath;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1599</ViolationID>
            <ID>1599</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1600</ID>
          <Line>8</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.WebApi.Areas.HelpPage.ModelDescriptions;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1600</ViolationID>
            <ID>1600</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1602</ID>
          <Line>17</Line>
          <Message>All constant and readonly private fields must be placed before all non-constant, non-readonly private fields.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private XPathNavigator _documentNavigator;</SourceCodeLine>
          <Rules>
            <CheckId>SA1203</CheckId>
            <Description>Validates that all constant and readonly elements are placed before non-constant, non readonly elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ConstantsMustAppearBeforeFields</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1602</ViolationID>
            <ID>1602</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1603</ID>
          <Line>103</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private static string GetMemberName(MethodInfo method)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1603</ViolationID>
            <ID>1603</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1605</ID>
          <Line>116</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private static string GetTagValue(XPathNavigator parentNode, string tagName)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1605</ViolationID>
            <ID>1605</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1607</ID>
          <Line>137</Line>
          <Message>All static private methods must be placed before all non-static private methods.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>        private static string GetTypeName(Type type)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1607</ViolationID>
            <ID>1607</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1614</ID>
          <Line>35</Line>
          <Message>The call to _documentNavigator must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>            _documentNavigator = xpath.CreateNavigator();</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1614</ViolationID>
            <ID>1614</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1616</ID>
          <Line>40</Line>
          <Message>The call to GetTypeNode must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>            XPathNavigator typeNode = GetTypeNode(controllerDescriptor.ControllerType);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1616</ViolationID>
            <ID>1616</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1617</ID>
          <Line>46</Line>
          <Message>The call to GetMethodNode must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>            XPathNavigator methodNode = GetMethodNode(actionDescriptor);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1617</ViolationID>
            <ID>1617</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1619</ID>
          <Line>55</Line>
          <Message>The call to GetMethodNode must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>                XPathNavigator methodNode = GetMethodNode(reflectedParameterDescriptor.ActionDescriptor);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1619</ViolationID>
            <ID>1619</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1621</ID>
          <Line>72</Line>
          <Message>The call to GetMethodNode must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>            XPathNavigator methodNode = GetMethodNode(actionDescriptor);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1621</ViolationID>
            <ID>1621</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1623</ID>
          <Line>81</Line>
          <Message>The call to _documentNavigator must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>            XPathNavigator propertyNode = _documentNavigator.SelectSingleNode(selectExpression);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1623</ViolationID>
            <ID>1623</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1625</ID>
          <Line>87</Line>
          <Message>The call to GetTypeNode must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>            XPathNavigator typeNode = GetTypeNode(type);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1625</ViolationID>
            <ID>1625</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1626</ID>
          <Line>97</Line>
          <Message>The call to _documentNavigator must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>                return _documentNavigator.SelectSingleNode(selectExpression);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1626</ViolationID>
            <ID>1626</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1628</ID>
          <Line>134</Line>
          <Message>The call to _documentNavigator must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>117</SourceCodeFileID>
          <SourceCodeLine>            return _documentNavigator.SelectSingleNode(selectExpression);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1628</ViolationID>
            <ID>1628</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>118</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Controllers\AccountController.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AccountController.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1638</ID>
          <Line>78</Line>
          <Message>A syntax error has been discovered in file C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Controllers\AccountController.cs on line 78.</Message>
          <SourceCodeFileID>118</SourceCodeFileID>
          <SourceCodeLine>        public async Task&lt;ManageInfoViewModel&gt; GetManageInfo(string returnUrl, bool generateState = false)</SourceCodeLine>
          <Rules>
            <CheckId>SA0102</CheckId>
            <Description />
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SyntaxException</Name>
            <Namespace>Microsoft.StyleCop.CSharp.CsParser</Namespace>
            <Warning>false</Warning>
            <ViolationID>1638</ViolationID>
            <ID>1638</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>119</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Controllers\HomeController.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>HomeController.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1639</ID>
          <Line>5</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>119</SourceCodeFileID>
          <SourceCodeLine>    public class HomeController : Controller</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1639</ViolationID>
            <ID>1639</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1640</ID>
          <Line>7</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>119</SourceCodeFileID>
          <SourceCodeLine>        public ActionResult Index()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1640</ViolationID>
            <ID>1640</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1641</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>119</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Mvc;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1641</ViolationID>
            <ID>1641</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1642</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>119</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Mvc;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1642</ViolationID>
            <ID>1642</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>120</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Controllers\ValuesController.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ValuesController.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1644</ID>
          <Line>7</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>120</SourceCodeFileID>
          <SourceCodeLine>    public class ValuesController : ApiController</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1644</ViolationID>
            <ID>1644</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1646</ID>
          <Line>10</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>120</SourceCodeFileID>
          <SourceCodeLine>        public IEnumerable&lt;string&gt; Get()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1646</ViolationID>
            <ID>1646</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1647</ID>
          <Line>16</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>120</SourceCodeFileID>
          <SourceCodeLine>        public string Get(int id)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1647</ViolationID>
            <ID>1647</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1648</ID>
          <Line>22</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>120</SourceCodeFileID>
          <SourceCodeLine>        public void Post([FromBody]string value)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1648</ViolationID>
            <ID>1648</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1649</ID>
          <Line>27</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>120</SourceCodeFileID>
          <SourceCodeLine>        public void Put(int id, [FromBody]string value)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1649</ViolationID>
            <ID>1649</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1650</ID>
          <Line>32</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>120</SourceCodeFileID>
          <SourceCodeLine>        public void Delete(int id)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1650</ViolationID>
            <ID>1650</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1651</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>120</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1651</ViolationID>
            <ID>1651</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1653</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>120</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1653</ViolationID>
            <ID>1653</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1654</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>120</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1654</ViolationID>
            <ID>1654</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>121</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Global.asax.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>Global.asax.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1658</ID>
          <Line>8</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>121</SourceCodeFileID>
          <SourceCodeLine>    public class WebApiApplication : System.Web.HttpApplication</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1658</ViolationID>
            <ID>1658</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1660</ID>
          <Line>10</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>121</SourceCodeFileID>
          <SourceCodeLine>        protected void Application_Start()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1660</ViolationID>
            <ID>1660</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1662</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>121</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1662</ViolationID>
            <ID>1662</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1664</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>121</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1664</ViolationID>
            <ID>1664</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1665</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>121</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Mvc;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1665</ViolationID>
            <ID>1665</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1667</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>121</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Optimization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1667</ViolationID>
            <ID>1667</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1668</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>121</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Routing;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1668</ViolationID>
            <ID>1668</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>122</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Models\AccountBindingModels.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AccountBindingModels.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1676</ID>
          <Line>8</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>    public class AddExternalLoginBindingModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1676</ViolationID>
            <ID>1676</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1678</ID>
          <Line>12</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>        public string ExternalAccessToken { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1678</ViolationID>
            <ID>1678</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1679</ID>
          <Line>15</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>    public class ChangePasswordBindingModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1679</ViolationID>
            <ID>1679</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1680</ID>
          <Line>20</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>        public string OldPassword { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1680</ViolationID>
            <ID>1680</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1681</ID>
          <Line>26</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>        public string NewPassword { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1681</ViolationID>
            <ID>1681</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1682</ID>
          <Line>31</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>        public string ConfirmPassword { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1682</ViolationID>
            <ID>1682</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1683</ID>
          <Line>34</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>    public class RegisterBindingModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1683</ViolationID>
            <ID>1683</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1684</ID>
          <Line>38</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>        public string Email { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1684</ViolationID>
            <ID>1684</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1685</ID>
          <Line>44</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>        public string Password { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1685</ViolationID>
            <ID>1685</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1686</ID>
          <Line>49</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>        public string ConfirmPassword { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1686</ViolationID>
            <ID>1686</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1688</ID>
          <Line>52</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>    public class RegisterExternalBindingModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1688</ViolationID>
            <ID>1688</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1690</ID>
          <Line>56</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>        public string Email { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1690</ViolationID>
            <ID>1690</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1692</ID>
          <Line>59</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>    public class RemoveLoginBindingModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1692</ViolationID>
            <ID>1692</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1694</ID>
          <Line>63</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>        public string LoginProvider { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1694</ViolationID>
            <ID>1694</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1696</ID>
          <Line>67</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>        public string ProviderKey { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1696</ViolationID>
            <ID>1696</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1697</ID>
          <Line>70</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>    public class SetPasswordBindingModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1697</ViolationID>
            <ID>1697</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1699</ID>
          <Line>76</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>        public string NewPassword { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1699</ViolationID>
            <ID>1699</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1701</ID>
          <Line>81</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>        public string ConfirmPassword { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1701</ViolationID>
            <ID>1701</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1703</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel.DataAnnotations;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1703</ViolationID>
            <ID>1703</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1707</ID>
          <Line>6</Line>
          <Message>A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>    // Models used as parameters to AccountController actions.</SourceCodeLine>
          <Rules>
            <CheckId>SA1512</CheckId>
            <Description>Validates that a comment is not followed by a blank line. (This does not apply to C-style comments.)</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustNotBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1707</ViolationID>
            <ID>1707</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1711</ID>
          <Line>1</Line>
          <Message>A C# document may only contain a single class at the root level unless all of the classes are partial and are of the same type.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel.DataAnnotations;</SourceCodeLine>
          <Rules>
            <CheckId>SA1402</CheckId>
            <Description>Validates that a C# document does not contain more than one class at the root level.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMayOnlyContainASingleClass</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>File Contents</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1711</ViolationID>
            <ID>1711</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1714</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel.DataAnnotations;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1714</ViolationID>
            <ID>1714</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1716</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>122</SourceCodeFileID>
          <SourceCodeLine>using Newtonsoft.Json;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1716</ViolationID>
            <ID>1716</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>123</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Models\AccountViewModels.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AccountViewModels.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1687</ID>
          <Line>7</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>    public class ExternalLoginViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1687</ViolationID>
            <ID>1687</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1689</ID>
          <Line>9</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>        public string Name { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1689</ViolationID>
            <ID>1689</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1691</ID>
          <Line>11</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>        public string Url { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1691</ViolationID>
            <ID>1691</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1693</ID>
          <Line>13</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>        public string State { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1693</ViolationID>
            <ID>1693</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1695</ID>
          <Line>16</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>    public class ManageInfoViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1695</ViolationID>
            <ID>1695</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1698</ID>
          <Line>18</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>        public string LocalLoginProvider { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1698</ViolationID>
            <ID>1698</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1700</ID>
          <Line>20</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>        public string Email { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1700</ViolationID>
            <ID>1700</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1702</ID>
          <Line>22</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>        public IEnumerable&lt;UserLoginInfoViewModel&gt; Logins { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1702</ViolationID>
            <ID>1702</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1704</ID>
          <Line>24</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>        public IEnumerable&lt;ExternalLoginViewModel&gt; ExternalLoginProviders { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1704</ViolationID>
            <ID>1704</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1705</ID>
          <Line>27</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>    public class UserInfoViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1705</ViolationID>
            <ID>1705</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1706</ID>
          <Line>29</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>        public string Email { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1706</ViolationID>
            <ID>1706</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1708</ID>
          <Line>31</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>        public bool HasRegistered { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1708</ViolationID>
            <ID>1708</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1709</ID>
          <Line>33</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>        public string LoginProvider { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1709</ViolationID>
            <ID>1709</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1710</ID>
          <Line>36</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>    public class UserLoginInfoViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1710</ViolationID>
            <ID>1710</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1712</ID>
          <Line>38</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>        public string LoginProvider { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1712</ViolationID>
            <ID>1712</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1713</ID>
          <Line>40</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>        public string ProviderKey { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1713</ViolationID>
            <ID>1713</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1715</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1715</ViolationID>
            <ID>1715</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1717</ID>
          <Line>5</Line>
          <Message>A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>    // Models returned by AccountController actions.</SourceCodeLine>
          <Rules>
            <CheckId>SA1512</CheckId>
            <Description>Validates that a comment is not followed by a blank line. (This does not apply to C-style comments.)</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentsMustNotBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1717</ViolationID>
            <ID>1717</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1718</ID>
          <Line>1</Line>
          <Message>A C# document may only contain a single class at the root level unless all of the classes are partial and are of the same type.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1402</CheckId>
            <Description>Validates that a C# document does not contain more than one class at the root level.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMayOnlyContainASingleClass</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>File Contents</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1718</ViolationID>
            <ID>1718</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1719</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>123</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1719</ViolationID>
            <ID>1719</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>124</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Models\IdentityModels.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IdentityModels.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1720</ID>
          <Line>11</Line>
          <Message>A syntax error has been discovered in file C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Models\IdentityModels.cs on line 11.</Message>
          <SourceCodeFileID>124</SourceCodeFileID>
          <SourceCodeLine>        public async Task&lt;ClaimsIdentity&gt; GenerateUserIdentityAsync(UserManager&lt;ApplicationUser&gt; manager, string authenticationType)</SourceCodeLine>
          <Rules>
            <CheckId>SA0102</CheckId>
            <Description />
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SyntaxException</Name>
            <Namespace>Microsoft.StyleCop.CSharp.CsParser</Namespace>
            <Warning>false</Warning>
            <ViolationID>1720</ViolationID>
            <ID>1720</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>125</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Properties\AssemblyInfo.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AssemblyInfo.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1721</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>125</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1721</ViolationID>
            <ID>1721</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>126</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Providers\ApplicationOAuthProvider.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ApplicationOAuthProvider.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1722</ID>
          <Line>27</Line>
          <Message>A syntax error has been discovered in file C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Providers\ApplicationOAuthProvider.cs on line 27.</Message>
          <SourceCodeFileID>126</SourceCodeFileID>
          <SourceCodeLine>        public override async Task GrantResourceOwnerCredentials(OAuthGrantResourceOwnerCredentialsContext context)</SourceCodeLine>
          <Rules>
            <CheckId>SA0102</CheckId>
            <Description />
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SyntaxException</Name>
            <Namespace>Microsoft.StyleCop.CSharp.CsParser</Namespace>
            <Warning>false</Warning>
            <ViolationID>1722</ViolationID>
            <ID>1722</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>127</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Results\ChallengeResult.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ChallengeResult.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1723</ID>
          <Line>9</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>    public class ChallengeResult : IHttpActionResult</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1723</ViolationID>
            <ID>1723</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1724</ID>
          <Line>11</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>        public ChallengeResult(string loginProvider, ApiController controller)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1724</ViolationID>
            <ID>1724</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1725</ID>
          <Line>17</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>        public string LoginProvider { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1725</ViolationID>
            <ID>1725</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1727</ID>
          <Line>18</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>        public HttpRequestMessage Request { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1727</ViolationID>
            <ID>1727</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1729</ID>
          <Line>20</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>        public Task&lt;HttpResponseMessage&gt; ExecuteAsync(CancellationToken cancellationToken)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1729</ViolationID>
            <ID>1729</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1731</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>using System.Net;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1731</ViolationID>
            <ID>1731</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1732</ID>
          <Line>18</Line>
          <Message>Adjacent elements must be separated by a blank line.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>        public HttpRequestMessage Request { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1516</CheckId>
            <Description>Validates that adjacent elements are separated by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeSeparatedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1732</ViolationID>
            <ID>1732</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1734</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>using System.Net;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1734</ViolationID>
            <ID>1734</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1735</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>using System.Net.Http;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1735</ViolationID>
            <ID>1735</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1736</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>using System.Threading;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1736</ViolationID>
            <ID>1736</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1737</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>using System.Threading.Tasks;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1737</ViolationID>
            <ID>1737</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1738</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Http;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1738</ViolationID>
            <ID>1738</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1742</ID>
          <Line>13</Line>
          <Message>The call to LoginProvider must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>            LoginProvider = loginProvider;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1742</ViolationID>
            <ID>1742</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1743</ID>
          <Line>14</Line>
          <Message>The call to Request must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>            Request = controller.Request;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1743</ViolationID>
            <ID>1743</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1745</ID>
          <Line>22</Line>
          <Message>The call to Request must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>            Request.GetOwinContext().Authentication.Challenge(LoginProvider);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1745</ViolationID>
            <ID>1745</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1746</ID>
          <Line>25</Line>
          <Message>The call to Request must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>127</SourceCodeFileID>
          <SourceCodeLine>            response.RequestMessage = Request;</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1746</ViolationID>
            <ID>1746</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>128</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApi\Startup.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>Startup.cs</Name>
        <CodeProjectID>7</CodeProjectID>
        <Violations>
          <ID>1875</ID>
          <Line>8</Line>
          <Message>The partial class element must have a documentation header containing either a summary tag or a content tag.</Message>
          <SourceCodeFileID>128</SourceCodeFileID>
          <SourceCodeLine>    public partial class Startup</SourceCodeLine>
          <Rules>
            <CheckId>SA1601</CheckId>
            <Description>Validates that a partial class, struct, etc. contains a valid documentation header which contains either a summary tag or a content tag.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PartialElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1875</ViolationID>
            <ID>1875</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1879</ID>
          <Line>10</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>128</SourceCodeFileID>
          <SourceCodeLine>        public void Configuration(IAppBuilder app)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1879</ViolationID>
            <ID>1879</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1885</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>128</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.Owin;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1885</ViolationID>
            <ID>1885</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1888</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>128</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.Owin;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1888</ViolationID>
            <ID>1888</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1889</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>128</SourceCodeFileID>
          <SourceCodeLine>using Owin;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1889</ViolationID>
            <ID>1889</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1893</ID>
          <Line>12</Line>
          <Message>The call to ConfigureAuth must begin with the 'this.' prefix to indicate that the item is a member of the class.</Message>
          <SourceCodeFileID>128</SourceCodeFileID>
          <SourceCodeLine>            ConfigureAuth(app);</SourceCodeLine>
          <Rules>
            <CheckId>SA1101</CheckId>
            <Description>Verifies that calls to local members are prefixed with the 'this.' notation.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PrefixLocalCallsWithThis</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Member Access</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1893</ViolationID>
            <ID>1893</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
    </Projects>
    <Projects>
      <ID>8</ID>
      <Location>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\SampleProject.WebApp.csproj</Location>
      <Name>SampleProject.WebApp</Name>
      <SolutionID>0</SolutionID>
      <SourceCodeFiles>
        <ID>129</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\App_Start\BundleConfig.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>BundleConfig.cs</Name>
        <CodeProjectID>8</CodeProjectID>
        <Violations>
          <ID>1726</ID>
          <Line>5</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>129</SourceCodeFileID>
          <SourceCodeLine>    public class BundleConfig</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1726</ViolationID>
            <ID>1726</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1728</ID>
          <Line>8</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>129</SourceCodeFileID>
          <SourceCodeLine>        public static void RegisterBundles(BundleCollection bundles)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1728</ViolationID>
            <ID>1728</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1730</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>129</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Optimization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1730</ViolationID>
            <ID>1730</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1733</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>129</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Optimization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1733</ViolationID>
            <ID>1733</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>130</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\App_Start\FilterConfig.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>FilterConfig.cs</Name>
        <CodeProjectID>8</CodeProjectID>
        <Violations>
          <ID>1739</ID>
          <Line>5</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>130</SourceCodeFileID>
          <SourceCodeLine>    public class FilterConfig</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1739</ViolationID>
            <ID>1739</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1740</ID>
          <Line>7</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>130</SourceCodeFileID>
          <SourceCodeLine>        public static void RegisterGlobalFilters(GlobalFilterCollection filters)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1740</ViolationID>
            <ID>1740</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1741</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>130</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Mvc;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1741</ViolationID>
            <ID>1741</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1744</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>130</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Mvc;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1744</ViolationID>
            <ID>1744</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>131</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\App_Start\IdentityConfig.cs</Path>
        <TimeStamp>2015-10-01T11:14:42-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IdentityConfig.cs</Name>
        <CodeProjectID>8</CodeProjectID>
        <Violations>
          <ID>1748</ID>
          <Line>13</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>    public class EmailService : IIdentityMessageService</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1748</ViolationID>
            <ID>1748</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1749</ID>
          <Line>15</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>        public Task SendAsync(IdentityMessage message)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1749</ViolationID>
            <ID>1749</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1750</ID>
          <Line>22</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>    public class SmsService : IIdentityMessageService</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1750</ViolationID>
            <ID>1750</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1752</ID>
          <Line>24</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>        public Task SendAsync(IdentityMessage message)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1752</ViolationID>
            <ID>1752</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1753</ID>
          <Line>32</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>    public class ApplicationUserManager : UserManager&lt;ApplicationUser&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1753</ViolationID>
            <ID>1753</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1754</ID>
          <Line>34</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>        public ApplicationUserManager(IUserStore&lt;ApplicationUser&gt; store)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1754</ViolationID>
            <ID>1754</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1755</ID>
          <Line>39</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>        public static ApplicationUserManager Create(IdentityFactoryOptions&lt;ApplicationUserManager&gt; options, IOwinContext context)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1755</ViolationID>
            <ID>1755</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1756</ID>
          <Line>88</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>    public class ApplicationSignInManager : SignInManager&lt;ApplicationUser, string&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1756</ViolationID>
            <ID>1756</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1757</ID>
          <Line>90</Line>
          <Message>The constructor must have a documentation header.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>        public ApplicationSignInManager(ApplicationUserManager userManager, IAuthenticationManager authenticationManager)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1757</ViolationID>
            <ID>1757</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1758</ID>
          <Line>95</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>        public override Task&lt;ClaimsIdentity&gt; CreateUserIdentityAsync(ApplicationUser user)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1758</ViolationID>
            <ID>1758</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1759</ID>
          <Line>100</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>        public static ApplicationSignInManager Create(IdentityFactoryOptions&lt;ApplicationSignInManager&gt; options, IOwinContext context)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1759</ViolationID>
            <ID>1759</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1760</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1760</ViolationID>
            <ID>1760</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1762</ID>
          <Line>42</Line>
          <Message>A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>            // Configure validation logic for usernames</SourceCodeLine>
          <Rules>
            <CheckId>SA1515</CheckId>
            <Description>Validates that a comment is preceded by a blank line, or is the first item in its scope.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SingleLineCommentMustBePrecededByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1762</ViolationID>
            <ID>1762</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1763</ID>
          <Line>82</Line>
          <Message>Statements or elements wrapped in curly brackets must be followed by a blank line.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>            }</SourceCodeLine>
          <Rules>
            <CheckId>SA1513</CheckId>
            <Description>Validates that a bracketed statement or element is followed by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ClosingCurlyBracketMustBeFollowedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1763</ViolationID>
            <ID>1763</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1765</ID>
          <Line>1</Line>
          <Message>A C# document may only contain a single class at the root level unless all of the classes are partial and are of the same type.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1402</CheckId>
            <Description>Validates that a C# document does not contain more than one class at the root level.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMayOnlyContainASingleClass</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>File Contents</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1765</ViolationID>
            <ID>1765</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1768</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>using System;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1768</ViolationID>
            <ID>1768</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1770</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>using System.Security.Claims;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1770</ViolationID>
            <ID>1770</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1772</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>using System.Threading.Tasks;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1772</ViolationID>
            <ID>1772</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1773</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.AspNet.Identity;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1773</ViolationID>
            <ID>1773</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1775</ID>
          <Line>5</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.AspNet.Identity.EntityFramework;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1775</ViolationID>
            <ID>1775</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1776</ID>
          <Line>6</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.AspNet.Identity.Owin;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1776</ViolationID>
            <ID>1776</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1777</ID>
          <Line>7</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.Owin;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1777</ViolationID>
            <ID>1777</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1778</ID>
          <Line>8</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.Owin.Security;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1778</ViolationID>
            <ID>1778</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1779</ID>
          <Line>9</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>using SampleProject.WebApp.Models;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1779</ViolationID>
            <ID>1779</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1780</ID>
          <Line>100</Line>
          <Message>All static public methods must be placed before all non-static public methods.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>        public static ApplicationSignInManager Create(IdentityFactoryOptions&lt;ApplicationSignInManager&gt; options, IOwinContext context)</SourceCodeLine>
          <Rules>
            <CheckId>SA1204</CheckId>
            <Description>Validates that all static elements are placed before non-static elements of the same type.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>StaticElementsMustAppearBeforeInstanceElements</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1780</ViolationID>
            <ID>1780</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1781</ID>
          <Line>66</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>            manager.RegisterTwoFactorProvider("Phone Code", new PhoneNumberTokenProvider&lt;ApplicationUser&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1781</ViolationID>
            <ID>1781</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1782</ID>
          <Line>66</Line>
          <Message>The parameter spans multiple lines. If the parameter is short, place the entire parameter on a single line. Otherwise, save the contents of the parameter in a temporary variable and pass the temporary variable as a parameter. </Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>            manager.RegisterTwoFactorProvider("Phone Code", new PhoneNumberTokenProvider&lt;ApplicationUser&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1118</CheckId>
            <Description>Validates that no parameter spans across multiple lines, other than the first parameter in a parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustNotSpanMultipleLines</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1782</ViolationID>
            <ID>1782</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1783</ID>
          <Line>66</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>            manager.RegisterTwoFactorProvider("Phone Code", new PhoneNumberTokenProvider&lt;ApplicationUser&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1783</ViolationID>
            <ID>1783</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1784</ID>
          <Line>70</Line>
          <Message>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>            manager.RegisterTwoFactorProvider("Email Code", new EmailTokenProvider&lt;ApplicationUser&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1116</CheckId>
            <Description>Verifies that the first parameter in a parameter list is placed on the line beneath the opening bracket, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SplitParametersMustStartOnLineAfterDeclaration</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1784</ViolationID>
            <ID>1784</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1785</ID>
          <Line>70</Line>
          <Message>The parameter spans multiple lines. If the parameter is short, place the entire parameter on a single line. Otherwise, save the contents of the parameter in a temporary variable and pass the temporary variable as a parameter. </Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>            manager.RegisterTwoFactorProvider("Email Code", new EmailTokenProvider&lt;ApplicationUser&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1118</CheckId>
            <Description>Validates that no parameter spans across multiple lines, other than the first parameter in a parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustNotSpanMultipleLines</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1785</ViolationID>
            <ID>1785</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1786</ID>
          <Line>70</Line>
          <Message>The parameter must begin on the line after the previous parameter.</Message>
          <SourceCodeFileID>131</SourceCodeFileID>
          <SourceCodeLine>            manager.RegisterTwoFactorProvider("Email Code", new EmailTokenProvider&lt;ApplicationUser&gt;</SourceCodeLine>
          <Rules>
            <CheckId>SA1115</CheckId>
            <Description>Verifies that a parameter is placed on the line after the previous comma, in a multi-line parameter list.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ParameterMustFollowComma</Name>
            <Namespace>Microsoft.StyleCop.CSharp.ReadabilityRules</Namespace>
            <RuleGroup>Method Parameter Placement</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1786</ViolationID>
            <ID>1786</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>132</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\App_Start\RouteConfig.cs</Path>
        <TimeStamp>2015-10-01T11:14:41-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>RouteConfig.cs</Name>
        <CodeProjectID>8</CodeProjectID>
        <Violations>
          <ID>1747</ID>
          <Line>13</Line>
          <Message>A syntax error has been discovered in file C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\App_Start\RouteConfig.cs on line 13.</Message>
          <SourceCodeFileID>132</SourceCodeFileID>
          <SourceCodeLine>                name: "Default",</SourceCodeLine>
          <Rules>
            <CheckId>SA0102</CheckId>
            <Description />
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SyntaxException</Name>
            <Namespace>Microsoft.StyleCop.CSharp.CsParser</Namespace>
            <Warning>false</Warning>
            <ViolationID>1747</ViolationID>
            <ID>1747</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>133</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\App_Start\Startup.Auth.cs</Path>
        <TimeStamp>2015-10-01T11:14:41-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>Startup.Auth.cs</Name>
        <CodeProjectID>8</CodeProjectID>
        <Violations>
          <ID>1751</ID>
          <Line>33</Line>
          <Message>A syntax error has been discovered in file C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\App_Start\Startup.Auth.cs on line 33.</Message>
          <SourceCodeFileID>133</SourceCodeFileID>
          <SourceCodeLine>                        validateInterval: TimeSpan.FromMinutes(30),</SourceCodeLine>
          <Rules>
            <CheckId>SA0102</CheckId>
            <Description />
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SyntaxException</Name>
            <Namespace>Microsoft.StyleCop.CSharp.CsParser</Namespace>
            <Warning>false</Warning>
            <ViolationID>1751</ViolationID>
            <ID>1751</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>134</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\Controllers\AccountController.cs</Path>
        <TimeStamp>2015-10-01T11:14:41-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AccountController.cs</Name>
        <CodeProjectID>8</CodeProjectID>
        <Violations>
          <ID>1761</ID>
          <Line>66</Line>
          <Message>A syntax error has been discovered in file C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\Controllers\AccountController.cs on line 66.</Message>
          <SourceCodeFileID>134</SourceCodeFileID>
          <SourceCodeLine>        public async Task&lt;ActionResult&gt; Login(LoginViewModel model, string returnUrl)</SourceCodeLine>
          <Rules>
            <CheckId>SA0102</CheckId>
            <Description />
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SyntaxException</Name>
            <Namespace>Microsoft.StyleCop.CSharp.CsParser</Namespace>
            <Warning>false</Warning>
            <ViolationID>1761</ViolationID>
            <ID>1761</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>135</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\Controllers\HomeController.cs</Path>
        <TimeStamp>2015-10-01T11:14:41-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>HomeController.cs</Name>
        <CodeProjectID>8</CodeProjectID>
        <Violations>
          <ID>1764</ID>
          <Line>5</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>135</SourceCodeFileID>
          <SourceCodeLine>    public class HomeController : Controller</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1764</ViolationID>
            <ID>1764</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1766</ID>
          <Line>7</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>135</SourceCodeFileID>
          <SourceCodeLine>        public ActionResult Index()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1766</ViolationID>
            <ID>1766</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1767</ID>
          <Line>12</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>135</SourceCodeFileID>
          <SourceCodeLine>        public ActionResult About()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1767</ViolationID>
            <ID>1767</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1769</ID>
          <Line>19</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>135</SourceCodeFileID>
          <SourceCodeLine>        public ActionResult Contact()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1769</ViolationID>
            <ID>1769</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1771</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>135</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Mvc;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1771</ViolationID>
            <ID>1771</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1774</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>135</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Mvc;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1774</ViolationID>
            <ID>1774</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>136</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\Controllers\ManageController.cs</Path>
        <TimeStamp>2015-10-01T11:14:41-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ManageController.cs</Name>
        <CodeProjectID>8</CodeProjectID>
        <Violations>
          <ID>1787</ID>
          <Line>54</Line>
          <Message>A syntax error has been discovered in file C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\Controllers\ManageController.cs on line 54.</Message>
          <SourceCodeFileID>136</SourceCodeFileID>
          <SourceCodeLine>        public async Task&lt;ActionResult&gt; Index(ManageMessageId? message)</SourceCodeLine>
          <Rules>
            <CheckId>SA0102</CheckId>
            <Description />
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SyntaxException</Name>
            <Namespace>Microsoft.StyleCop.CSharp.CsParser</Namespace>
            <Warning>false</Warning>
            <ViolationID>1787</ViolationID>
            <ID>1787</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>137</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\Global.asax.cs</Path>
        <TimeStamp>2015-10-01T11:14:41-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>Global.asax.cs</Name>
        <CodeProjectID>8</CodeProjectID>
        <Violations>
          <ID>1788</ID>
          <Line>7</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>137</SourceCodeFileID>
          <SourceCodeLine>    public class MvcApplication : System.Web.HttpApplication</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1788</ViolationID>
            <ID>1788</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1789</ID>
          <Line>9</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>137</SourceCodeFileID>
          <SourceCodeLine>        protected void Application_Start()</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1789</ViolationID>
            <ID>1789</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1790</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>137</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Mvc;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1790</ViolationID>
            <ID>1790</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1791</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>137</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Mvc;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1791</ViolationID>
            <ID>1791</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1792</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>137</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Optimization;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1792</ViolationID>
            <ID>1792</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1793</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>137</SourceCodeFileID>
          <SourceCodeLine>using System.Web.Routing;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1793</ViolationID>
            <ID>1793</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>138</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\Models\AccountViewModels.cs</Path>
        <TimeStamp>2015-10-01T11:14:41-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AccountViewModels.cs</Name>
        <CodeProjectID>8</CodeProjectID>
        <Violations>
          <ID>1794</ID>
          <Line>6</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>    public class ExternalLoginConfirmationViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1794</ViolationID>
            <ID>1794</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1795</ID>
          <Line>10</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string Email { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1795</ViolationID>
            <ID>1795</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1796</ID>
          <Line>13</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>    public class ExternalLoginListViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1796</ViolationID>
            <ID>1796</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1798</ID>
          <Line>15</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string ReturnUrl { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1798</ViolationID>
            <ID>1798</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1799</ID>
          <Line>18</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>    public class SendCodeViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1799</ViolationID>
            <ID>1799</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1800</ID>
          <Line>20</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string SelectedProvider { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1800</ViolationID>
            <ID>1800</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1801</ID>
          <Line>21</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public ICollection&lt;System.Web.Mvc.SelectListItem&gt; Providers { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1801</ViolationID>
            <ID>1801</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1802</ID>
          <Line>22</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string ReturnUrl { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1802</ViolationID>
            <ID>1802</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1803</ID>
          <Line>23</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public bool RememberMe { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1803</ViolationID>
            <ID>1803</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1804</ID>
          <Line>26</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>    public class VerifyCodeViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1804</ViolationID>
            <ID>1804</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1805</ID>
          <Line>29</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string Provider { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1805</ViolationID>
            <ID>1805</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1806</ID>
          <Line>33</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string Code { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1806</ViolationID>
            <ID>1806</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1808</ID>
          <Line>34</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string ReturnUrl { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1808</ViolationID>
            <ID>1808</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1810</ID>
          <Line>37</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public bool RememberBrowser { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1810</ViolationID>
            <ID>1810</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1812</ID>
          <Line>39</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public bool RememberMe { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1812</ViolationID>
            <ID>1812</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1814</ID>
          <Line>42</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>    public class ForgotViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1814</ViolationID>
            <ID>1814</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1816</ID>
          <Line>46</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string Email { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1816</ViolationID>
            <ID>1816</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1818</ID>
          <Line>49</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>    public class LoginViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1818</ViolationID>
            <ID>1818</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1820</ID>
          <Line>54</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string Email { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1820</ViolationID>
            <ID>1820</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1822</ID>
          <Line>59</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string Password { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1822</ViolationID>
            <ID>1822</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1824</ID>
          <Line>62</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public bool RememberMe { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1824</ViolationID>
            <ID>1824</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1826</ID>
          <Line>65</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>    public class RegisterViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1826</ViolationID>
            <ID>1826</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1828</ID>
          <Line>70</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string Email { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1828</ViolationID>
            <ID>1828</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1830</ID>
          <Line>76</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string Password { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1830</ViolationID>
            <ID>1830</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1832</ID>
          <Line>81</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string ConfirmPassword { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1832</ViolationID>
            <ID>1832</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1834</ID>
          <Line>84</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>    public class ResetPasswordViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1834</ViolationID>
            <ID>1834</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1836</ID>
          <Line>89</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string Email { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1836</ViolationID>
            <ID>1836</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1838</ID>
          <Line>95</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string Password { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1838</ViolationID>
            <ID>1838</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1840</ID>
          <Line>100</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string ConfirmPassword { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1840</ViolationID>
            <ID>1840</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1842</ID>
          <Line>102</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string Code { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1842</ViolationID>
            <ID>1842</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1844</ID>
          <Line>105</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>    public class ForgotPasswordViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1844</ViolationID>
            <ID>1844</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1846</ID>
          <Line>110</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string Email { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1846</ViolationID>
            <ID>1846</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1848</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1848</ViolationID>
            <ID>1848</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1851</ID>
          <Line>21</Line>
          <Message>Adjacent elements must be separated by a blank line.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public ICollection&lt;System.Web.Mvc.SelectListItem&gt; Providers { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1516</CheckId>
            <Description>Validates that adjacent elements are separated by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeSeparatedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1851</ViolationID>
            <ID>1851</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1853</ID>
          <Line>22</Line>
          <Message>Adjacent elements must be separated by a blank line.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string ReturnUrl { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1516</CheckId>
            <Description>Validates that adjacent elements are separated by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeSeparatedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1853</ViolationID>
            <ID>1853</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1855</ID>
          <Line>23</Line>
          <Message>Adjacent elements must be separated by a blank line.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public bool RememberMe { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1516</CheckId>
            <Description>Validates that adjacent elements are separated by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeSeparatedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1855</ViolationID>
            <ID>1855</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1858</ID>
          <Line>34</Line>
          <Message>Adjacent elements must be separated by a blank line.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>        public string ReturnUrl { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1516</CheckId>
            <Description>Validates that adjacent elements are separated by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeSeparatedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1858</ViolationID>
            <ID>1858</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1862</ID>
          <Line>1</Line>
          <Message>A C# document may only contain a single class at the root level unless all of the classes are partial and are of the same type.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1402</CheckId>
            <Description>Validates that a C# document does not contain more than one class at the root level.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMayOnlyContainASingleClass</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>File Contents</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1862</ViolationID>
            <ID>1862</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1865</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1865</ViolationID>
            <ID>1865</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1867</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>138</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel.DataAnnotations;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1867</ViolationID>
            <ID>1867</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>139</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\Models\IdentityModels.cs</Path>
        <TimeStamp>2015-10-01T11:14:41-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>IdentityModels.cs</Name>
        <CodeProjectID>8</CodeProjectID>
        <Violations>
          <ID>1797</ID>
          <Line>11</Line>
          <Message>A syntax error has been discovered in file C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\Models\IdentityModels.cs on line 11.</Message>
          <SourceCodeFileID>139</SourceCodeFileID>
          <SourceCodeLine>        public async Task&lt;ClaimsIdentity&gt; GenerateUserIdentityAsync(UserManager&lt;ApplicationUser&gt; manager)</SourceCodeLine>
          <Rules>
            <CheckId>SA0102</CheckId>
            <Description />
            <EnabledByDefault>true</EnabledByDefault>
            <Name>SyntaxException</Name>
            <Namespace>Microsoft.StyleCop.CSharp.CsParser</Namespace>
            <Warning>false</Warning>
            <ViolationID>1797</ViolationID>
            <ID>1797</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>140</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\Models\ManageViewModels.cs</Path>
        <TimeStamp>2015-10-01T11:14:41-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>ManageViewModels.cs</Name>
        <CodeProjectID>8</CodeProjectID>
        <Violations>
          <ID>1807</ID>
          <Line>8</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>    public class IndexViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1807</ViolationID>
            <ID>1807</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1809</ID>
          <Line>10</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public bool HasPassword { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1809</ViolationID>
            <ID>1809</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1811</ID>
          <Line>11</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public IList&lt;UserLoginInfo&gt; Logins { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1811</ViolationID>
            <ID>1811</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1813</ID>
          <Line>12</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public string PhoneNumber { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1813</ViolationID>
            <ID>1813</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1815</ID>
          <Line>13</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public bool TwoFactor { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1815</ViolationID>
            <ID>1815</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1817</ID>
          <Line>14</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public bool BrowserRemembered { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1817</ViolationID>
            <ID>1817</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1819</ID>
          <Line>17</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>    public class ManageLoginsViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1819</ViolationID>
            <ID>1819</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1821</ID>
          <Line>19</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public IList&lt;UserLoginInfo&gt; CurrentLogins { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1821</ViolationID>
            <ID>1821</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1823</ID>
          <Line>20</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public IList&lt;AuthenticationDescription&gt; OtherLogins { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1823</ViolationID>
            <ID>1823</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1825</ID>
          <Line>23</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>    public class FactorViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1825</ViolationID>
            <ID>1825</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1827</ID>
          <Line>25</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public string Purpose { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1827</ViolationID>
            <ID>1827</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1829</ID>
          <Line>28</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>    public class SetPasswordViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1829</ViolationID>
            <ID>1829</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1831</ID>
          <Line>34</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public string NewPassword { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1831</ViolationID>
            <ID>1831</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1833</ID>
          <Line>39</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public string ConfirmPassword { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1833</ViolationID>
            <ID>1833</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1835</ID>
          <Line>42</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>    public class ChangePasswordViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1835</ViolationID>
            <ID>1835</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1837</ID>
          <Line>47</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public string OldPassword { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1837</ViolationID>
            <ID>1837</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1839</ID>
          <Line>53</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public string NewPassword { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1839</ViolationID>
            <ID>1839</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1841</ID>
          <Line>58</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public string ConfirmPassword { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1841</ViolationID>
            <ID>1841</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1843</ID>
          <Line>61</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>    public class AddPhoneNumberViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1843</ViolationID>
            <ID>1843</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1845</ID>
          <Line>66</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public string Number { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1845</ViolationID>
            <ID>1845</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1847</ID>
          <Line>69</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>    public class VerifyPhoneNumberViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1847</ViolationID>
            <ID>1847</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1849</ID>
          <Line>73</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public string Code { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1849</ViolationID>
            <ID>1849</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1850</ID>
          <Line>78</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public string PhoneNumber { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1850</ViolationID>
            <ID>1850</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1852</ID>
          <Line>81</Line>
          <Message>The class must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>    public class ConfigureTwoFactorViewModel</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1852</ViolationID>
            <ID>1852</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1854</ID>
          <Line>83</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public string SelectedProvider { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1854</ViolationID>
            <ID>1854</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1856</ID>
          <Line>84</Line>
          <Message>The property must have a documentation header.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public ICollection&lt;System.Web.Mvc.SelectListItem&gt; Providers { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1856</ViolationID>
            <ID>1856</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1857</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1857</ViolationID>
            <ID>1857</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1859</ID>
          <Line>11</Line>
          <Message>Adjacent elements must be separated by a blank line.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public IList&lt;UserLoginInfo&gt; Logins { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1516</CheckId>
            <Description>Validates that adjacent elements are separated by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeSeparatedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1859</ViolationID>
            <ID>1859</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1860</ID>
          <Line>12</Line>
          <Message>Adjacent elements must be separated by a blank line.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public string PhoneNumber { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1516</CheckId>
            <Description>Validates that adjacent elements are separated by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeSeparatedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1860</ViolationID>
            <ID>1860</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1861</ID>
          <Line>13</Line>
          <Message>Adjacent elements must be separated by a blank line.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public bool TwoFactor { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1516</CheckId>
            <Description>Validates that adjacent elements are separated by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeSeparatedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1861</ViolationID>
            <ID>1861</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1863</ID>
          <Line>14</Line>
          <Message>Adjacent elements must be separated by a blank line.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public bool BrowserRemembered { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1516</CheckId>
            <Description>Validates that adjacent elements are separated by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeSeparatedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1863</ViolationID>
            <ID>1863</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1864</ID>
          <Line>20</Line>
          <Message>Adjacent elements must be separated by a blank line.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public IList&lt;AuthenticationDescription&gt; OtherLogins { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1516</CheckId>
            <Description>Validates that adjacent elements are separated by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeSeparatedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1864</ViolationID>
            <ID>1864</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1866</ID>
          <Line>84</Line>
          <Message>Adjacent elements must be separated by a blank line.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>        public ICollection&lt;System.Web.Mvc.SelectListItem&gt; Providers { get; set; }</SourceCodeLine>
          <Rules>
            <CheckId>SA1516</CheckId>
            <Description>Validates that adjacent elements are separated by a blank line.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeSeparatedByBlankLine</Name>
            <Namespace>Microsoft.StyleCop.CSharp.LayoutRules</Namespace>
            <RuleGroup>Line Spacing</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1866</ViolationID>
            <ID>1866</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1868</ID>
          <Line>1</Line>
          <Message>A C# document may only contain a single class at the root level unless all of the classes are partial and are of the same type.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1402</CheckId>
            <Description>Validates that a C# document does not contain more than one class at the root level.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMayOnlyContainASingleClass</Name>
            <Namespace>Microsoft.StyleCop.CSharp.MaintainabilityRules</Namespace>
            <RuleGroup>File Contents</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1868</ViolationID>
            <ID>1868</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1869</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>using System.Collections.Generic;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1869</ViolationID>
            <ID>1869</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1870</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>using System.ComponentModel.DataAnnotations;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1870</ViolationID>
            <ID>1870</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1871</ID>
          <Line>3</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.AspNet.Identity;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1871</ViolationID>
            <ID>1871</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1872</ID>
          <Line>4</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>140</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.Owin.Security;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1872</ViolationID>
            <ID>1872</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>141</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\Properties\AssemblyInfo.cs</Path>
        <TimeStamp>2015-10-01T11:14:41-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AssemblyInfo.cs</Name>
        <CodeProjectID>8</CodeProjectID>
        <Violations>
          <ID>1873</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>141</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1873</ViolationID>
            <ID>1873</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
      <SourceCodeFiles>
        <ID>142</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.WebApp\Startup.cs</Path>
        <TimeStamp>2015-10-01T11:14:41-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>Startup.cs</Name>
        <CodeProjectID>8</CodeProjectID>
        <Violations>
          <ID>1876</ID>
          <Line>7</Line>
          <Message>The partial class element must have a documentation header containing either a summary tag or a content tag.</Message>
          <SourceCodeFileID>142</SourceCodeFileID>
          <SourceCodeLine>    public partial class Startup</SourceCodeLine>
          <Rules>
            <CheckId>SA1601</CheckId>
            <Description>Validates that a partial class, struct, etc. contains a valid documentation header which contains either a summary tag or a content tag.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>PartialElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1876</ViolationID>
            <ID>1876</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1878</ID>
          <Line>9</Line>
          <Message>The method must have a documentation header.</Message>
          <SourceCodeFileID>142</SourceCodeFileID>
          <SourceCodeLine>        public void Configuration(IAppBuilder app)</SourceCodeLine>
          <Rules>
            <CheckId>SA1600</CheckId>
            <Description>Validates that an element contains a properly formatted documentation header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>ElementsMustBeDocumented</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>Element Documentation</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1878</ViolationID>
            <ID>1878</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1881</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>142</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.Owin;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1881</ViolationID>
            <ID>1881</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1883</ID>
          <Line>1</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>142</SourceCodeFileID>
          <SourceCodeLine>using Microsoft.Owin;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1883</ViolationID>
            <ID>1883</ID>
          </Rules>
        </Violations>
        <Violations>
          <ID>1886</ID>
          <Line>2</Line>
          <Message>All using directives must be placed inside of the namespace.</Message>
          <SourceCodeFileID>142</SourceCodeFileID>
          <SourceCodeLine>using Owin;</SourceCodeLine>
          <Rules>
            <CheckId>SA1200</CheckId>
            <Description>Validates that all using directives are placed within a namespace, if a namespace exists in the file.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>UsingDirectivesMustBePlacedWithinNamespace</Name>
            <Namespace>Microsoft.StyleCop.CSharp.OrderingRules</Namespace>
            <RuleGroup>Element Order</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1886</ViolationID>
            <ID>1886</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
    </Projects>
    <Projects>
      <ID>9</ID>
      <Location>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Specs\SampleProject.Specs.csproj</Location>
      <Name>SampleProject.Specs</Name>
      <SolutionID>0</SolutionID>
      <SourceCodeFiles>
        <ID>143</ID>
        <Path>C:\Dropbox\personal\Diego Giacomelli\Apps\SampleProject\src\SampleProject.Specs\Properties\AssemblyInfo.cs</Path>
        <TimeStamp>2015-10-01T11:14:41-03:00</TimeStamp>
        <Type>CS</Type>
        <Name>AssemblyInfo.cs</Name>
        <CodeProjectID>9</CodeProjectID>
        <Violations>
          <ID>1874</ID>
          <Line>1</Line>
          <Message>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Message>
          <SourceCodeFileID>143</SourceCodeFileID>
          <SourceCodeLine>using System.Reflection;</SourceCodeLine>
          <Rules>
            <CheckId>SA1633</CheckId>
            <Description>Validates that a file contains a properly formatted file header.</Description>
            <EnabledByDefault>true</EnabledByDefault>
            <Name>FileMustHaveHeader</Name>
            <Namespace>Microsoft.StyleCop.CSharp.DocumentationRules</Namespace>
            <RuleGroup>File Headers</RuleGroup>
            <Warning>false</Warning>
            <ViolationID>1874</ViolationID>
            <ID>1874</ID>
          </Rules>
        </Violations>
      </SourceCodeFiles>
    </Projects>
  </Solutions>
</StyleCopReport>